; Complete list of instruction timings:
; Generously provided by @flamewing on https://github.com/grahambates/68kcounter/issues/2
; This is parsed to make assertions for each instruction in our test suite.
i3  = 7
i5  = 31
i8  = 126
i16 = 32766
i32 = 131070
xxx = $200
; =============================================================================
; Line %0000
; =============================================================================
  addi.b     #i8,d0                       ;  8(2/0) +  0(0/0) =  8(2/0)
  addi.b     #i8,(a0)                     ; 12(2/1) +  4(1/0) = 16(3/1)
  addi.b     #i8,(a0)+                    ; 12(2/1) +  4(1/0) = 16(3/1)
  addi.b     #i8,-(a0)                    ; 12(2/1) +  6(1/0) = 18(3/1)
  addi.b     #i8,i16(a0)                  ; 12(2/1) +  8(2/0) = 20(4/1)
  addi.b     #i8,i8(a0,d0.w)              ; 12(2/1) + 10(2/0) = 22(4/1)
  addi.b     #i8,i8(a0,a0.w)              ; 12(2/1) + 10(2/0) = 22(4/1)
  addi.b     #i8,i8(a0,d0.l)              ; 12(2/1) + 10(2/0) = 22(4/1)
  addi.b     #i8,i8(a0,a0.l)              ; 12(2/1) + 10(2/0) = 22(4/1)
  addi.b     #i8,(xxx).w                  ; 12(2/1) +  8(2/0) = 20(4/1)
  addi.b     #i8,(xxx).l                  ; 12(2/1) + 12(3/0) = 24(5/1)
  addi.w     #i16,d0                      ;  8(2/0) +  0(0/0) =  8(2/0)
  addi.w     #i16,(a0)                    ; 12(2/1) +  4(1/0) = 16(3/1)
  addi.w     #i16,(a0)+                   ; 12(2/1) +  4(1/0) = 16(3/1)
  addi.w     #i16,-(a0)                   ; 12(2/1) +  6(1/0) = 18(3/1)
  addi.w     #i16,i16(a0)                 ; 12(2/1) +  8(2/0) = 20(4/1)
  addi.w     #i16,i8(a0,d0.w)             ; 12(2/1) + 10(2/0) = 22(4/1)
  addi.w     #i16,i8(a0,a0.w)             ; 12(2/1) + 10(2/0) = 22(4/1)
  addi.w     #i16,i8(a0,d0.l)             ; 12(2/1) + 10(2/0) = 22(4/1)
  addi.w     #i16,i8(a0,a0.l)             ; 12(2/1) + 10(2/0) = 22(4/1)
  addi.w     #i16,(xxx).w                 ; 12(2/1) +  8(2/0) = 20(4/1)
  addi.w     #i16,(xxx).l                 ; 12(2/1) + 12(3/0) = 24(5/1)
  addi.l     #i32,d0                      ; 16(3/0) +  0(0/0) = 16(3/0)
  addi.l     #i32,(a0)                    ; 20(3/2) +  8(2/0) = 28(5/2)
  addi.l     #i32,(a0)+                   ; 20(3/2) +  8(2/0) = 28(5/2)
  addi.l     #i32,-(a0)                   ; 20(3/2) + 10(2/0) = 30(5/2)
  addi.l     #i32,i16(a0)                 ; 20(3/2) + 12(3/0) = 32(6/2)
  addi.l     #i32,i8(a0,d0.w)             ; 20(3/2) + 14(3/0) = 34(6/2)
  addi.l     #i32,i8(a0,a0.w)             ; 20(3/2) + 14(3/0) = 34(6/2)
  addi.l     #i32,i8(a0,d0.l)             ; 20(3/2) + 14(3/0) = 34(6/2)
  addi.l     #i32,i8(a0,a0.l)             ; 20(3/2) + 14(3/0) = 34(6/2)
  addi.l     #i32,(xxx).w                 ; 20(3/2) + 12(3/0) = 32(6/2)
  addi.l     #i32,(xxx).l                 ; 20(3/2) + 16(4/0) = 36(7/2)
  add.b      #i8,d0                       ;  8(2/0) +  0(0/0) =  8(2/0)
  add.b      #i8,(a0)                     ; 12(2/1) +  4(1/0) = 16(3/1)
  add.b      #i8,(a0)+                    ; 12(2/1) +  4(1/0) = 16(3/1)
  add.b      #i8,-(a0)                    ; 12(2/1) +  6(1/0) = 18(3/1)
  add.b      #i8,i16(a0)                  ; 12(2/1) +  8(2/0) = 20(4/1)
  add.b      #i8,i8(a0,d0.w)              ; 12(2/1) + 10(2/0) = 22(4/1)
  add.b      #i8,i8(a0,a0.w)              ; 12(2/1) + 10(2/0) = 22(4/1)
  add.b      #i8,i8(a0,d0.l)              ; 12(2/1) + 10(2/0) = 22(4/1)
  add.b      #i8,i8(a0,a0.l)              ; 12(2/1) + 10(2/0) = 22(4/1)
  add.b      #i8,(xxx).w                  ; 12(2/1) +  8(2/0) = 20(4/1)
  add.b      #i8,(xxx).l                  ; 12(2/1) + 12(3/0) = 24(5/1)
  add.w      #i16,d0                      ;  8(2/0) +  0(0/0) =  8(2/0)
  add.w      #i16,(a0)                    ; 12(2/1) +  4(1/0) = 16(3/1)
  add.w      #i16,(a0)+                   ; 12(2/1) +  4(1/0) = 16(3/1)
  add.w      #i16,-(a0)                   ; 12(2/1) +  6(1/0) = 18(3/1)
  add.w      #i16,i16(a0)                 ; 12(2/1) +  8(2/0) = 20(4/1)
  add.w      #i16,i8(a0,d0.w)             ; 12(2/1) + 10(2/0) = 22(4/1)
  add.w      #i16,i8(a0,a0.w)             ; 12(2/1) + 10(2/0) = 22(4/1)
  add.w      #i16,i8(a0,d0.l)             ; 12(2/1) + 10(2/0) = 22(4/1)
  add.w      #i16,i8(a0,a0.l)             ; 12(2/1) + 10(2/0) = 22(4/1)
  add.w      #i16,(xxx).w                 ; 12(2/1) +  8(2/0) = 20(4/1)
  add.w      #i16,(xxx).l                 ; 12(2/1) + 12(3/0) = 24(5/1)
  add.l      #i32,d0                      ; 16(3/0) +  0(0/0) = 16(3/0)
  add.l      #i32,(a0)                    ; 20(3/2) +  8(2/0) = 28(5/2)
  add.l      #i32,(a0)+                   ; 20(3/2) +  8(2/0) = 28(5/2)
  add.l      #i32,-(a0)                   ; 20(3/2) + 10(2/0) = 30(5/2)
  add.l      #i32,i16(a0)                 ; 20(3/2) + 12(3/0) = 32(6/2)
  add.l      #i32,i8(a0,d0.w)             ; 20(3/2) + 14(3/0) = 34(6/2)
  add.l      #i32,i8(a0,a0.w)             ; 20(3/2) + 14(3/0) = 34(6/2)
  add.l      #i32,i8(a0,d0.l)             ; 20(3/2) + 14(3/0) = 34(6/2)
  add.l      #i32,i8(a0,a0.l)             ; 20(3/2) + 14(3/0) = 34(6/2)
  add.l      #i32,(xxx).w                 ; 20(3/2) + 12(3/0) = 32(6/2)
  add.l      #i32,(xxx).l                 ; 20(3/2) + 16(4/0) = 36(7/2)
	; -------------------------------------------------------------------------
  andi.b     #i8,d0                       ;  8(2/0) +  0(0/0) =  8(2/0)
  andi.b     #i8,(a0)                     ; 12(2/1) +  4(1/0) = 16(3/1)
  andi.b     #i8,(a0)+                    ; 12(2/1) +  4(1/0) = 16(3/1)
  andi.b     #i8,-(a0)                    ; 12(2/1) +  6(1/0) = 18(3/1)
  andi.b     #i8,i16(a0)                  ; 12(2/1) +  8(2/0) = 20(4/1)
  andi.b     #i8,i8(a0,d0.w)              ; 12(2/1) + 10(2/0) = 22(4/1)
  andi.b     #i8,i8(a0,a0.w)              ; 12(2/1) + 10(2/0) = 22(4/1)
  andi.b     #i8,i8(a0,d0.l)              ; 12(2/1) + 10(2/0) = 22(4/1)
  andi.b     #i8,i8(a0,a0.l)              ; 12(2/1) + 10(2/0) = 22(4/1)
  andi.b     #i8,(xxx).w                  ; 12(2/1) +  8(2/0) = 20(4/1)
  andi.b     #i8,(xxx).l                  ; 12(2/1) + 12(3/0) = 24(5/1)
  andi.w     #i16,d0                      ;  8(2/0) +  0(0/0) =  8(2/0)
  andi.w     #i16,(a0)                    ; 12(2/1) +  4(1/0) = 16(3/1)
  andi.w     #i16,(a0)+                   ; 12(2/1) +  4(1/0) = 16(3/1)
  andi.w     #i16,-(a0)                   ; 12(2/1) +  6(1/0) = 18(3/1)
  andi.w     #i16,i16(a0)                 ; 12(2/1) +  8(2/0) = 20(4/1)
  andi.w     #i16,i8(a0,d0.w)             ; 12(2/1) + 10(2/0) = 22(4/1)
  andi.w     #i16,i8(a0,a0.w)             ; 12(2/1) + 10(2/0) = 22(4/1)
  andi.w     #i16,i8(a0,d0.l)             ; 12(2/1) + 10(2/0) = 22(4/1)
  andi.w     #i16,i8(a0,a0.l)             ; 12(2/1) + 10(2/0) = 22(4/1)
  andi.w     #i16,(xxx).w                 ; 12(2/1) +  8(2/0) = 20(4/1)
  andi.w     #i16,(xxx).l                 ; 12(2/1) + 12(3/0) = 24(5/1)
  andi.l     #i32,d0                      ; 16(3/0) +  0(0/0) = 16(3/0)
  andi.l     #i32,(a0)                    ; 20(3/2) +  8(2/0) = 28(5/2)
  andi.l     #i32,(a0)+                   ; 20(3/2) +  8(2/0) = 28(5/2)
  andi.l     #i32,-(a0)                   ; 20(3/2) + 10(2/0) = 30(5/2)
  andi.l     #i32,i16(a0)                 ; 20(3/2) + 12(3/0) = 32(6/2)
  andi.l     #i32,i8(a0,d0.w)             ; 20(3/2) + 14(3/0) = 34(6/2)
  andi.l     #i32,i8(a0,a0.w)             ; 20(3/2) + 14(3/0) = 34(6/2)
  andi.l     #i32,i8(a0,d0.l)             ; 20(3/2) + 14(3/0) = 34(6/2)
  andi.l     #i32,i8(a0,a0.l)             ; 20(3/2) + 14(3/0) = 34(6/2)
  andi.l     #i32,(xxx).w                 ; 20(3/2) + 12(3/0) = 32(6/2)
  andi.l     #i32,(xxx).l                 ; 20(3/2) + 16(4/0) = 36(7/2)
  and.b      #i8,d0                       ;  8(2/0) +  0(0/0) =  8(2/0)
  and.b      #i8,(a0)                     ; 12(2/1) +  4(1/0) = 16(3/1)
  and.b      #i8,(a0)+                    ; 12(2/1) +  4(1/0) = 16(3/1)
  and.b      #i8,-(a0)                    ; 12(2/1) +  6(1/0) = 18(3/1)
  and.b      #i8,i16(a0)                  ; 12(2/1) +  8(2/0) = 20(4/1)
  and.b      #i8,i8(a0,d0.w)              ; 12(2/1) + 10(2/0) = 22(4/1)
  and.b      #i8,i8(a0,a0.w)              ; 12(2/1) + 10(2/0) = 22(4/1)
  and.b      #i8,i8(a0,d0.l)              ; 12(2/1) + 10(2/0) = 22(4/1)
  and.b      #i8,i8(a0,a0.l)              ; 12(2/1) + 10(2/0) = 22(4/1)
  and.b      #i8,(xxx).w                  ; 12(2/1) +  8(2/0) = 20(4/1)
  and.b      #i8,(xxx).l                  ; 12(2/1) + 12(3/0) = 24(5/1)
  and.w      #i16,d0                      ;  8(2/0) +  0(0/0) =  8(2/0)
  and.w      #i16,(a0)                    ; 12(2/1) +  4(1/0) = 16(3/1)
  and.w      #i16,(a0)+                   ; 12(2/1) +  4(1/0) = 16(3/1)
  and.w      #i16,-(a0)                   ; 12(2/1) +  6(1/0) = 18(3/1)
  and.w      #i16,i16(a0)                 ; 12(2/1) +  8(2/0) = 20(4/1)
  and.w      #i16,i8(a0,d0.w)             ; 12(2/1) + 10(2/0) = 22(4/1)
  and.w      #i16,i8(a0,a0.w)             ; 12(2/1) + 10(2/0) = 22(4/1)
  and.w      #i16,i8(a0,d0.l)             ; 12(2/1) + 10(2/0) = 22(4/1)
  and.w      #i16,i8(a0,a0.l)             ; 12(2/1) + 10(2/0) = 22(4/1)
  and.w      #i16,(xxx).w                 ; 12(2/1) +  8(2/0) = 20(4/1)
  and.w      #i16,(xxx).l                 ; 12(2/1) + 12(3/0) = 24(5/1)
  and.l      #i32,d0                      ; 16(3/0) +  0(0/0) = 16(3/0)
  and.l      #i32,(a0)                    ; 20(3/2) +  8(2/0) = 28(5/2)
  and.l      #i32,(a0)+                   ; 20(3/2) +  8(2/0) = 28(5/2)
  and.l      #i32,-(a0)                   ; 20(3/2) + 10(2/0) = 30(5/2)
  and.l      #i32,i16(a0)                 ; 20(3/2) + 12(3/0) = 32(6/2)
  and.l      #i32,i8(a0,d0.w)             ; 20(3/2) + 14(3/0) = 34(6/2)
  and.l      #i32,i8(a0,a0.w)             ; 20(3/2) + 14(3/0) = 34(6/2)
  and.l      #i32,i8(a0,d0.l)             ; 20(3/2) + 14(3/0) = 34(6/2)
  and.l      #i32,i8(a0,a0.l)             ; 20(3/2) + 14(3/0) = 34(6/2)
  and.l      #i32,(xxx).w                 ; 20(3/2) + 12(3/0) = 32(6/2)
  and.l      #i32,(xxx).l                 ; 20(3/2) + 16(4/0) = 36(7/2)
; -----------------------------------------------------------------------------
  eori.b     #i8,d0                       ;  8(2/0) +  0(0/0) =  8(2/0)
  eori.b     #i8,(a0)                     ; 12(2/1) +  4(1/0) = 16(3/1)
  eori.b     #i8,(a0)+                    ; 12(2/1) +  4(1/0) = 16(3/1)
  eori.b     #i8,-(a0)                    ; 12(2/1) +  6(1/0) = 18(3/1)
  eori.b     #i8,i16(a0)                  ; 12(2/1) +  8(2/0) = 20(4/1)
  eori.b     #i8,i8(a0,d0.w)              ; 12(2/1) + 10(2/0) = 22(4/1)
  eori.b     #i8,i8(a0,a0.w)              ; 12(2/1) + 10(2/0) = 22(4/1)
  eori.b     #i8,i8(a0,d0.l)              ; 12(2/1) + 10(2/0) = 22(4/1)
  eori.b     #i8,i8(a0,a0.l)              ; 12(2/1) + 10(2/0) = 22(4/1)
  eori.b     #i8,(xxx).w                  ; 12(2/1) +  8(2/0) = 20(4/1)
  eori.b     #i8,(xxx).l                  ; 12(2/1) + 12(3/0) = 24(5/1)
  eori.w     #i16,d0                      ;  8(2/0) +  0(0/0) =  8(2/0)
  eori.w     #i16,(a0)                    ; 12(2/1) +  4(1/0) = 16(3/1)
  eori.w     #i16,(a0)+                   ; 12(2/1) +  4(1/0) = 16(3/1)
  eori.w     #i16,-(a0)                   ; 12(2/1) +  6(1/0) = 18(3/1)
  eori.w     #i16,i16(a0)                 ; 12(2/1) +  8(2/0) = 20(4/1)
  eori.w     #i16,i8(a0,d0.w)             ; 12(2/1) + 10(2/0) = 22(4/1)
  eori.w     #i16,i8(a0,a0.w)             ; 12(2/1) + 10(2/0) = 22(4/1)
  eori.w     #i16,i8(a0,d0.l)             ; 12(2/1) + 10(2/0) = 22(4/1)
  eori.w     #i16,i8(a0,a0.l)             ; 12(2/1) + 10(2/0) = 22(4/1)
  eori.w     #i16,(xxx).w                 ; 12(2/1) +  8(2/0) = 20(4/1)
  eori.w     #i16,(xxx).l                 ; 12(2/1) + 12(3/0) = 24(5/1)
  eori.l     #i32,d0                      ; 16(3/0) +  0(0/0) = 16(3/0)
  eori.l     #i32,(a0)                    ; 20(3/2) +  8(2/0) = 28(5/2)
  eori.l     #i32,(a0)+                   ; 20(3/2) +  8(2/0) = 28(5/2)
  eori.l     #i32,-(a0)                   ; 20(3/2) + 10(2/0) = 30(5/2)
  eori.l     #i32,i16(a0)                 ; 20(3/2) + 12(3/0) = 32(6/2)
  eori.l     #i32,i8(a0,d0.w)             ; 20(3/2) + 14(3/0) = 34(6/2)
  eori.l     #i32,i8(a0,a0.w)             ; 20(3/2) + 14(3/0) = 34(6/2)
  eori.l     #i32,i8(a0,d0.l)             ; 20(3/2) + 14(3/0) = 34(6/2)
  eori.l     #i32,i8(a0,a0.l)             ; 20(3/2) + 14(3/0) = 34(6/2)
  eori.l     #i32,(xxx).w                 ; 20(3/2) + 12(3/0) = 32(6/2)
  eori.l     #i32,(xxx).l                 ; 20(3/2) + 16(4/0) = 36(7/2)
  eor.b      #i8,d0                       ;  8(2/0) +  0(0/0) =  8(2/0)
  eor.b      #i8,(a0)                     ; 12(2/1) +  4(1/0) = 16(3/1)
  eor.b      #i8,(a0)+                    ; 12(2/1) +  4(1/0) = 16(3/1)
  eor.b      #i8,-(a0)                    ; 12(2/1) +  6(1/0) = 18(3/1)
  eor.b      #i8,i16(a0)                  ; 12(2/1) +  8(2/0) = 20(4/1)
  eor.b      #i8,i8(a0,d0.w)              ; 12(2/1) + 10(2/0) = 22(4/1)
  eor.b      #i8,i8(a0,a0.w)              ; 12(2/1) + 10(2/0) = 22(4/1)
  eor.b      #i8,i8(a0,d0.l)              ; 12(2/1) + 10(2/0) = 22(4/1)
  eor.b      #i8,i8(a0,a0.l)              ; 12(2/1) + 10(2/0) = 22(4/1)
  eor.b      #i8,(xxx).w                  ; 12(2/1) +  8(2/0) = 20(4/1)
  eor.b      #i8,(xxx).l                  ; 12(2/1) + 12(3/0) = 24(5/1)
  eor.w      #i16,d0                      ;  8(2/0) +  0(0/0) =  8(2/0)
  eor.w      #i16,(a0)                    ; 12(2/1) +  4(1/0) = 16(3/1)
  eor.w      #i16,(a0)+                   ; 12(2/1) +  4(1/0) = 16(3/1)
  eor.w      #i16,-(a0)                   ; 12(2/1) +  6(1/0) = 18(3/1)
  eor.w      #i16,i16(a0)                 ; 12(2/1) +  8(2/0) = 20(4/1)
  eor.w      #i16,i8(a0,d0.w)             ; 12(2/1) + 10(2/0) = 22(4/1)
  eor.w      #i16,i8(a0,a0.w)             ; 12(2/1) + 10(2/0) = 22(4/1)
  eor.w      #i16,i8(a0,d0.l)             ; 12(2/1) + 10(2/0) = 22(4/1)
  eor.w      #i16,i8(a0,a0.l)             ; 12(2/1) + 10(2/0) = 22(4/1)
  eor.w      #i16,(xxx).w                 ; 12(2/1) +  8(2/0) = 20(4/1)
  eor.w      #i16,(xxx).l                 ; 12(2/1) + 12(3/0) = 24(5/1)
  eor.l      #i32,d0                      ; 16(3/0) +  0(0/0) = 16(3/0)
  eor.l      #i32,(a0)                    ; 20(3/2) +  8(2/0) = 28(5/2)
  eor.l      #i32,(a0)+                   ; 20(3/2) +  8(2/0) = 28(5/2)
  eor.l      #i32,-(a0)                   ; 20(3/2) + 10(2/0) = 30(5/2)
  eor.l      #i32,i16(a0)                 ; 20(3/2) + 12(3/0) = 32(6/2)
  eor.l      #i32,i8(a0,d0.w)             ; 20(3/2) + 14(3/0) = 34(6/2)
  eor.l      #i32,i8(a0,a0.w)             ; 20(3/2) + 14(3/0) = 34(6/2)
  eor.l      #i32,i8(a0,d0.l)             ; 20(3/2) + 14(3/0) = 34(6/2)
  eor.l      #i32,i8(a0,a0.l)             ; 20(3/2) + 14(3/0) = 34(6/2)
  eor.l      #i32,(xxx).w                 ; 20(3/2) + 12(3/0) = 32(6/2)
  eor.l      #i32,(xxx).l                 ; 20(3/2) + 16(4/0) = 36(7/2)
; -----------------------------------------------------------------------------
  ori.b      #i8,d0                       ;  8(2/0) +  0(0/0) =  8(2/0)
  ori.b      #i8,(a0)                     ; 12(2/1) +  4(1/0) = 16(3/1)
  ori.b      #i8,(a0)+                    ; 12(2/1) +  4(1/0) = 16(3/1)
  ori.b      #i8,-(a0)                    ; 12(2/1) +  6(1/0) = 18(3/1)
  ori.b      #i8,i16(a0)                  ; 12(2/1) +  8(2/0) = 20(4/1)
  ori.b      #i8,i8(a0,d0.w)              ; 12(2/1) + 10(2/0) = 22(4/1)
  ori.b      #i8,i8(a0,a0.w)              ; 12(2/1) + 10(2/0) = 22(4/1)
  ori.b      #i8,i8(a0,d0.l)              ; 12(2/1) + 10(2/0) = 22(4/1)
  ori.b      #i8,i8(a0,a0.l)              ; 12(2/1) + 10(2/0) = 22(4/1)
  ori.b      #i8,(xxx).w                  ; 12(2/1) +  8(2/0) = 20(4/1)
  ori.b      #i8,(xxx).l                  ; 12(2/1) + 12(3/0) = 24(5/1)
  ori.w      #i16,d0                      ;  8(2/0) +  0(0/0) =  8(2/0)
  ori.w      #i16,(a0)                    ; 12(2/1) +  4(1/0) = 16(3/1)
  ori.w      #i16,(a0)+                   ; 12(2/1) +  4(1/0) = 16(3/1)
  ori.w      #i16,-(a0)                   ; 12(2/1) +  6(1/0) = 18(3/1)
  ori.w      #i16,i16(a0)                 ; 12(2/1) +  8(2/0) = 20(4/1)
  ori.w      #i16,i8(a0,d0.w)             ; 12(2/1) + 10(2/0) = 22(4/1)
  ori.w      #i16,i8(a0,a0.w)             ; 12(2/1) + 10(2/0) = 22(4/1)
  ori.w      #i16,i8(a0,d0.l)             ; 12(2/1) + 10(2/0) = 22(4/1)
  ori.w      #i16,i8(a0,a0.l)             ; 12(2/1) + 10(2/0) = 22(4/1)
  ori.w      #i16,(xxx).w                 ; 12(2/1) +  8(2/0) = 20(4/1)
  ori.w      #i16,(xxx).l                 ; 12(2/1) + 12(3/0) = 24(5/1)
  ori.l      #i32,d0                      ; 16(3/0) +  0(0/0) = 16(3/0)
  ori.l      #i32,(a0)                    ; 20(3/2) +  8(2/0) = 28(5/2)
  ori.l      #i32,(a0)+                   ; 20(3/2) +  8(2/0) = 28(5/2)
  ori.l      #i32,-(a0)                   ; 20(3/2) + 10(2/0) = 30(5/2)
  ori.l      #i32,i16(a0)                 ; 20(3/2) + 12(3/0) = 32(6/2)
  ori.l      #i32,i8(a0,d0.w)             ; 20(3/2) + 14(3/0) = 34(6/2)
  ori.l      #i32,i8(a0,a0.w)             ; 20(3/2) + 14(3/0) = 34(6/2)
  ori.l      #i32,i8(a0,d0.l)             ; 20(3/2) + 14(3/0) = 34(6/2)
  ori.l      #i32,i8(a0,a0.l)             ; 20(3/2) + 14(3/0) = 34(6/2)
  ori.l      #i32,(xxx).w                 ; 20(3/2) + 12(3/0) = 32(6/2)
  ori.l      #i32,(xxx).l                 ; 20(3/2) + 16(4/0) = 36(7/2)
  or.b       #i8,d0                       ;  8(2/0) +  0(0/0) =  8(2/0)
  or.b       #i8,(a0)                     ; 12(2/1) +  4(1/0) = 16(3/1)
  or.b       #i8,(a0)+                    ; 12(2/1) +  4(1/0) = 16(3/1)
  or.b       #i8,-(a0)                    ; 12(2/1) +  6(1/0) = 18(3/1)
  or.b       #i8,i16(a0)                  ; 12(2/1) +  8(2/0) = 20(4/1)
  or.b       #i8,i8(a0,d0.w)              ; 12(2/1) + 10(2/0) = 22(4/1)
  or.b       #i8,i8(a0,a0.w)              ; 12(2/1) + 10(2/0) = 22(4/1)
  or.b       #i8,i8(a0,d0.l)              ; 12(2/1) + 10(2/0) = 22(4/1)
  or.b       #i8,i8(a0,a0.l)              ; 12(2/1) + 10(2/0) = 22(4/1)
  or.b       #i8,(xxx).w                  ; 12(2/1) +  8(2/0) = 20(4/1)
  or.b       #i8,(xxx).l                  ; 12(2/1) + 12(3/0) = 24(5/1)
  or.w       #i16,d0                      ;  8(2/0) +  0(0/0) =  8(2/0)
  or.w       #i16,(a0)                    ; 12(2/1) +  4(1/0) = 16(3/1)
  or.w       #i16,(a0)+                   ; 12(2/1) +  4(1/0) = 16(3/1)
  or.w       #i16,-(a0)                   ; 12(2/1) +  6(1/0) = 18(3/1)
  or.w       #i16,i16(a0)                 ; 12(2/1) +  8(2/0) = 20(4/1)
  or.w       #i16,i8(a0,d0.w)             ; 12(2/1) + 10(2/0) = 22(4/1)
  or.w       #i16,i8(a0,a0.w)             ; 12(2/1) + 10(2/0) = 22(4/1)
  or.w       #i16,i8(a0,d0.l)             ; 12(2/1) + 10(2/0) = 22(4/1)
  or.w       #i16,i8(a0,a0.l)             ; 12(2/1) + 10(2/0) = 22(4/1)
  or.w       #i16,(xxx).w                 ; 12(2/1) +  8(2/0) = 20(4/1)
  or.w       #i16,(xxx).l                 ; 12(2/1) + 12(3/0) = 24(5/1)
  or.l       #i32,d0                      ; 16(3/0) +  0(0/0) = 16(3/0)
  or.l       #i32,(a0)                    ; 20(3/2) +  8(2/0) = 28(5/2)
  or.l       #i32,(a0)+                   ; 20(3/2) +  8(2/0) = 28(5/2)
  or.l       #i32,-(a0)                   ; 20(3/2) + 10(2/0) = 30(5/2)
  or.l       #i32,i16(a0)                 ; 20(3/2) + 12(3/0) = 32(6/2)
  or.l       #i32,i8(a0,d0.w)             ; 20(3/2) + 14(3/0) = 34(6/2)
  or.l       #i32,i8(a0,a0.w)             ; 20(3/2) + 14(3/0) = 34(6/2)
  or.l       #i32,i8(a0,d0.l)             ; 20(3/2) + 14(3/0) = 34(6/2)
  or.l       #i32,i8(a0,a0.l)             ; 20(3/2) + 14(3/0) = 34(6/2)
  or.l       #i32,(xxx).w                 ; 20(3/2) + 12(3/0) = 32(6/2)
  or.l       #i32,(xxx).l                 ; 20(3/2) + 16(4/0) = 36(7/2)
; -----------------------------------------------------------------------------
  subi.b     #i8,d0                       ;  8(2/0) +  0(0/0) =  8(2/0)
  subi.b     #i8,(a0)                     ; 12(2/1) +  4(1/0) = 16(3/1)
  subi.b     #i8,(a0)+                    ; 12(2/1) +  4(1/0) = 16(3/1)
  subi.b     #i8,-(a0)                    ; 12(2/1) +  6(1/0) = 18(3/1)
  subi.b     #i8,i16(a0)                  ; 12(2/1) +  8(2/0) = 20(4/1)
  subi.b     #i8,i8(a0,d0.w)              ; 12(2/1) + 10(2/0) = 22(4/1)
  subi.b     #i8,i8(a0,a0.w)              ; 12(2/1) + 10(2/0) = 22(4/1)
  subi.b     #i8,i8(a0,d0.l)              ; 12(2/1) + 10(2/0) = 22(4/1)
  subi.b     #i8,i8(a0,a0.l)              ; 12(2/1) + 10(2/0) = 22(4/1)
  subi.b     #i8,(xxx).w                  ; 12(2/1) +  8(2/0) = 20(4/1)
  subi.b     #i8,(xxx).l                  ; 12(2/1) + 12(3/0) = 24(5/1)
  subi.w     #i16,d0                      ;  8(2/0) +  0(0/0) =  8(2/0)
  subi.w     #i16,(a0)                    ; 12(2/1) +  4(1/0) = 16(3/1)
  subi.w     #i16,(a0)+                   ; 12(2/1) +  4(1/0) = 16(3/1)
  subi.w     #i16,-(a0)                   ; 12(2/1) +  6(1/0) = 18(3/1)
  subi.w     #i16,i16(a0)                 ; 12(2/1) +  8(2/0) = 20(4/1)
  subi.w     #i16,i8(a0,d0.w)             ; 12(2/1) + 10(2/0) = 22(4/1)
  subi.w     #i16,i8(a0,a0.w)             ; 12(2/1) + 10(2/0) = 22(4/1)
  subi.w     #i16,i8(a0,d0.l)             ; 12(2/1) + 10(2/0) = 22(4/1)
  subi.w     #i16,i8(a0,a0.l)             ; 12(2/1) + 10(2/0) = 22(4/1)
  subi.w     #i16,(xxx).w                 ; 12(2/1) +  8(2/0) = 20(4/1)
  subi.w     #i16,(xxx).l                 ; 12(2/1) + 12(3/0) = 24(5/1)
  subi.l     #i32,d0                      ; 16(3/0) +  0(0/0) = 16(3/0)
  subi.l     #i32,(a0)                    ; 20(3/2) +  8(2/0) = 28(5/2)
  subi.l     #i32,(a0)+                   ; 20(3/2) +  8(2/0) = 28(5/2)
  subi.l     #i32,-(a0)                   ; 20(3/2) + 10(2/0) = 30(5/2)
  subi.l     #i32,i16(a0)                 ; 20(3/2) + 12(3/0) = 32(6/2)
  subi.l     #i32,i8(a0,d0.w)             ; 20(3/2) + 14(3/0) = 34(6/2)
  subi.l     #i32,i8(a0,a0.w)             ; 20(3/2) + 14(3/0) = 34(6/2)
  subi.l     #i32,i8(a0,d0.l)             ; 20(3/2) + 14(3/0) = 34(6/2)
  subi.l     #i32,i8(a0,a0.l)             ; 20(3/2) + 14(3/0) = 34(6/2)
  subi.l     #i32,(xxx).w                 ; 20(3/2) + 12(3/0) = 32(6/2)
  subi.l     #i32,(xxx).l                 ; 20(3/2) + 16(4/0) = 36(7/2)
  sub.b      #i8,d0                       ;  8(2/0) +  0(0/0) =  8(2/0)
  sub.b      #i8,(a0)                     ; 12(2/1) +  4(1/0) = 16(3/1)
  sub.b      #i8,(a0)+                    ; 12(2/1) +  4(1/0) = 16(3/1)
  sub.b      #i8,-(a0)                    ; 12(2/1) +  6(1/0) = 18(3/1)
  sub.b      #i8,i16(a0)                  ; 12(2/1) +  8(2/0) = 20(4/1)
  sub.b      #i8,i8(a0,d0.w)              ; 12(2/1) + 10(2/0) = 22(4/1)
  sub.b      #i8,i8(a0,a0.w)              ; 12(2/1) + 10(2/0) = 22(4/1)
  sub.b      #i8,i8(a0,d0.l)              ; 12(2/1) + 10(2/0) = 22(4/1)
  sub.b      #i8,i8(a0,a0.l)              ; 12(2/1) + 10(2/0) = 22(4/1)
  sub.b      #i8,(xxx).w                  ; 12(2/1) +  8(2/0) = 20(4/1)
  sub.b      #i8,(xxx).l                  ; 12(2/1) + 12(3/0) = 24(5/1)
  sub.w      #i16,d0                      ;  8(2/0) +  0(0/0) =  8(2/0)
  sub.w      #i16,(a0)                    ; 12(2/1) +  4(1/0) = 16(3/1)
  sub.w      #i16,(a0)+                   ; 12(2/1) +  4(1/0) = 16(3/1)
  sub.w      #i16,-(a0)                   ; 12(2/1) +  6(1/0) = 18(3/1)
  sub.w      #i16,i16(a0)                 ; 12(2/1) +  8(2/0) = 20(4/1)
  sub.w      #i16,i8(a0,d0.w)             ; 12(2/1) + 10(2/0) = 22(4/1)
  sub.w      #i16,i8(a0,a0.w)             ; 12(2/1) + 10(2/0) = 22(4/1)
  sub.w      #i16,i8(a0,d0.l)             ; 12(2/1) + 10(2/0) = 22(4/1)
  sub.w      #i16,i8(a0,a0.l)             ; 12(2/1) + 10(2/0) = 22(4/1)
  sub.w      #i16,(xxx).w                 ; 12(2/1) +  8(2/0) = 20(4/1)
  sub.w      #i16,(xxx).l                 ; 12(2/1) + 12(3/0) = 24(5/1)
  sub.l      #i32,d0                      ; 16(3/0) +  0(0/0) = 16(3/0)
  sub.l      #i32,(a0)                    ; 20(3/2) +  8(2/0) = 28(5/2)
  sub.l      #i32,(a0)+                   ; 20(3/2) +  8(2/0) = 28(5/2)
  sub.l      #i32,-(a0)                   ; 20(3/2) + 10(2/0) = 30(5/2)
  sub.l      #i32,i16(a0)                 ; 20(3/2) + 12(3/0) = 32(6/2)
  sub.l      #i32,i8(a0,d0.w)             ; 20(3/2) + 14(3/0) = 34(6/2)
  sub.l      #i32,i8(a0,a0.w)             ; 20(3/2) + 14(3/0) = 34(6/2)
  sub.l      #i32,i8(a0,d0.l)             ; 20(3/2) + 14(3/0) = 34(6/2)
  sub.l      #i32,i8(a0,a0.l)             ; 20(3/2) + 14(3/0) = 34(6/2)
  sub.l      #i32,(xxx).w                 ; 20(3/2) + 12(3/0) = 32(6/2)
  sub.l      #i32,(xxx).l                 ; 20(3/2) + 16(4/0) = 36(7/2)
; -----------------------------------------------------------------------------
  andi.b     #i8,ccr                      ; 20(3/0)
  eori.b     #i8,ccr                      ; 20(3/0)
  ori.b      #i8,ccr                      ; 20(3/0)
  and.b      #i8,ccr                      ; 20(3/0)
  eor.b      #i8,ccr                      ; 20(3/0)
  or.b       #i8,ccr                      ; 20(3/0)
; -----------------------------------------------------------------------------
  andi.w     #i16,sr                      ; 20(3/0)
  eori.w     #i16,sr                      ; 20(3/0)
  ori.w      #i16,sr                      ; 20(3/0)
  and.w      #i16,sr                      ; 20(3/0)
  eor.w      #i16,sr                      ; 20(3/0)
  or.w       #i16,sr                      ; 20(3/0)
; -----------------------------------------------------------------------------
  cmpi.b     #i8,d0                       ;  8(2/0) +  0(0/0) =  8(2/0)
  cmpi.b     #i8,(a0)                     ;  8(2/0) +  4(1/0) = 12(3/0)
  cmpi.b     #i8,(a0)+                    ;  8(2/0) +  4(1/0) = 12(3/0)
  cmpi.b     #i8,-(a0)                    ;  8(2/0) +  6(1/0) = 14(3/0)
  cmpi.b     #i8,i16(a0)                  ;  8(2/0) +  8(2/0) = 16(4/0)
  cmpi.b     #i8,i8(a0,d0.w)              ;  8(2/0) + 10(2/0) = 18(4/0)
  cmpi.b     #i8,i8(a0,a0.w)              ;  8(2/0) + 10(2/0) = 18(4/0)
  cmpi.b     #i8,i8(a0,d0.l)              ;  8(2/0) + 10(2/0) = 18(4/0)
  cmpi.b     #i8,i8(a0,a0.l)              ;  8(2/0) + 10(2/0) = 18(4/0)
  cmpi.b     #i8,(xxx).w                  ;  8(2/0) +  8(2/0) = 16(4/0)
  cmpi.b     #i8,(xxx).l                  ;  8(2/0) + 12(3/0) = 20(5/0)
  cmpi.w     #i16,d0                      ;  8(2/0) +  0(0/0) =  8(2/0)
  cmpi.w     #i16,(a0)                    ;  8(2/0) +  4(1/0) = 12(3/0)
  cmpi.w     #i16,(a0)+                   ;  8(2/0) +  4(1/0) = 12(3/0)
  cmpi.w     #i16,-(a0)                   ;  8(2/0) +  6(1/0) = 14(3/0)
  cmpi.w     #i16,i16(a0)                 ;  8(2/0) +  8(2/0) = 16(4/0)
  cmpi.w     #i16,i8(a0,d0.w)             ;  8(2/0) + 10(2/0) = 18(4/0)
  cmpi.w     #i16,i8(a0,a0.w)             ;  8(2/0) + 10(2/0) = 18(4/0)
  cmpi.w     #i16,i8(a0,d0.l)             ;  8(2/0) + 10(2/0) = 18(4/0)
  cmpi.w     #i16,i8(a0,a0.l)             ;  8(2/0) + 10(2/0) = 18(4/0)
  cmpi.w     #i16,(xxx).w                 ;  8(2/0) +  8(2/0) = 16(4/0)
  cmpi.w     #i16,(xxx).l                 ;  8(2/0) + 12(3/0) = 20(5/0)
  cmpi.l     #i32,d0                      ; 14(3/0) +  0(0/0) = 14(3/0)
  cmpi.l     #i32,(a0)                    ; 12(3/0) +  8(2/0) = 20(5/0)
  cmpi.l     #i32,(a0)+                   ; 12(3/0) +  8(2/0) = 20(5/0)
  cmpi.l     #i32,-(a0)                   ; 12(3/0) + 10(2/0) = 22(5/0)
  cmpi.l     #i32,i16(a0)                 ; 12(3/0) + 12(3/0) = 24(6/0)
  cmpi.l     #i32,i8(a0,d0.w)             ; 12(3/0) + 14(3/0) = 26(6/0)
  cmpi.l     #i32,i8(a0,a0.w)             ; 12(3/0) + 14(3/0) = 26(6/0)
  cmpi.l     #i32,i8(a0,d0.l)             ; 12(3/0) + 14(3/0) = 26(6/0)
  cmpi.l     #i32,i8(a0,a0.l)             ; 12(3/0) + 14(3/0) = 26(6/0)
  cmpi.l     #i32,(xxx).w                 ; 12(3/0) + 12(3/0) = 24(6/0)
  cmpi.l     #i32,(xxx).l                 ; 12(3/0) + 16(4/0) = 28(7/0)
  cmp.b      #i8,d0                       ;  8(2/0) +  0(0/0) =  8(2/0)
  cmp.b      #i8,(a0)                     ;  8(2/0) +  4(1/0) = 12(3/0)
  cmp.b      #i8,(a0)+                    ;  8(2/0) +  4(1/0) = 12(3/0)
  cmp.b      #i8,-(a0)                    ;  8(2/0) +  6(1/0) = 14(3/0)
  cmp.b      #i8,i16(a0)                  ;  8(2/0) +  8(2/0) = 16(4/0)
  cmp.b      #i8,i8(a0,d0.w)              ;  8(2/0) + 10(2/0) = 18(4/0)
  cmp.b      #i8,i8(a0,a0.w)              ;  8(2/0) + 10(2/0) = 18(4/0)
  cmp.b      #i8,i8(a0,d0.l)              ;  8(2/0) + 10(2/0) = 18(4/0)
  cmp.b      #i8,i8(a0,a0.l)              ;  8(2/0) + 10(2/0) = 18(4/0)
  cmp.b      #i8,(xxx).w                  ;  8(2/0) +  8(2/0) = 16(4/0)
  cmp.b      #i8,(xxx).l                  ;  8(2/0) + 12(3/0) = 20(5/0)
  cmp.w      #i16,d0                      ;  8(2/0) +  0(0/0) =  8(2/0)
  cmp.w      #i16,(a0)                    ;  8(2/0) +  4(1/0) = 12(3/0)
  cmp.w      #i16,(a0)+                   ;  8(2/0) +  4(1/0) = 12(3/0)
  cmp.w      #i16,-(a0)                   ;  8(2/0) +  6(1/0) = 14(3/0)
  cmp.w      #i16,i16(a0)                 ;  8(2/0) +  8(2/0) = 16(4/0)
  cmp.w      #i16,i8(a0,d0.w)             ;  8(2/0) + 10(2/0) = 18(4/0)
  cmp.w      #i16,i8(a0,a0.w)             ;  8(2/0) + 10(2/0) = 18(4/0)
  cmp.w      #i16,i8(a0,d0.l)             ;  8(2/0) + 10(2/0) = 18(4/0)
  cmp.w      #i16,i8(a0,a0.l)             ;  8(2/0) + 10(2/0) = 18(4/0)
  cmp.w      #i16,(xxx).w                 ;  8(2/0) +  8(2/0) = 16(4/0)
  cmp.w      #i16,(xxx).l                 ;  8(2/0) + 12(3/0) = 20(5/0)
  cmp.l      #i32,d0                      ; 14(3/0) +  0(0/0) = 14(3/0)
  cmp.l      #i32,(a0)                    ; 12(3/0) +  8(2/0) = 20(5/0)
  cmp.l      #i32,(a0)+                   ; 12(3/0) +  8(2/0) = 20(5/0)
  cmp.l      #i32,-(a0)                   ; 12(3/0) + 10(2/0) = 22(5/0)
  cmp.l      #i32,i16(a0)                 ; 12(3/0) + 12(3/0) = 24(6/0)
  cmp.l      #i32,i8(a0,d0.w)             ; 12(3/0) + 14(3/0) = 26(6/0)
  cmp.l      #i32,i8(a0,a0.w)             ; 12(3/0) + 14(3/0) = 26(6/0)
  cmp.l      #i32,i8(a0,d0.l)             ; 12(3/0) + 14(3/0) = 26(6/0)
  cmp.l      #i32,i8(a0,a0.l)             ; 12(3/0) + 14(3/0) = 26(6/0)
  cmp.l      #i32,(xxx).w                 ; 12(3/0) + 12(3/0) = 24(6/0)
  cmp.l      #i32,(xxx).l                 ; 12(3/0) + 16(4/0) = 28(7/0)
	; -------------------------------------------------------------------------
  bchg.b     d0,(a0)                      ;  8(1/1) +  4(1/0) = 12(2/1)
  bchg.b     d0,(a0)+                     ;  8(1/1) +  4(1/0) = 12(2/1)
  bchg.b     d0,-(a0)                     ;  8(1/1) +  6(1/0) = 14(2/1)
  bchg.b     d0,i16(a0)                   ;  8(1/1) +  8(2/0) = 16(3/1)
  bchg.b     d0,i8(a0,d0.w)               ;  8(1/1) + 10(2/0) = 18(3/1)
  bchg.b     d0,i8(a0,a0.w)               ;  8(1/1) + 10(2/0) = 18(3/1)
  bchg.b     d0,i8(a0,d0.l)               ;  8(1/1) + 10(2/0) = 18(3/1)
  bchg.b     d0,i8(a0,a0.l)               ;  8(1/1) + 10(2/0) = 18(3/1)
  bchg.b     d0,(xxx).w                   ;  8(1/1) +  8(2/0) = 16(3/1)
  bchg.b     d0,(xxx).l                   ;  8(1/1) + 12(3/0) = 20(4/1)
  ; bchg.l     d0,d0                        ;  6(1/0) +  0(0/0) =  6(1/0)	; if d0 < 16      TODO
  bchg.l     d0,d0                        ;  8(1/0) +  0(0/0) =  8(1/0)	; if d0 > 15
  bchg.b     #i3,(a0)                     ; 12(2/1) +  4(1/0) = 16(3/1)
  bchg.b     #i3,(a0)+                    ; 12(2/1) +  4(1/0) = 16(3/1)
  bchg.b     #i3,-(a0)                    ; 12(2/1) +  6(1/0) = 18(3/1)
  bchg.b     #i3,i16(a0)                  ; 12(2/1) +  8(2/0) = 20(4/1)
  bchg.b     #i3,i8(a0,d0.w)              ; 12(2/1) + 10(2/0) = 22(4/1)
  bchg.b     #i3,i8(a0,a0.w)              ; 12(2/1) + 10(2/0) = 22(4/1)
  bchg.b     #i3,i8(a0,d0.l)              ; 12(2/1) + 10(2/0) = 22(4/1)
  bchg.b     #i3,i8(a0,a0.l)              ; 12(2/1) + 10(2/0) = 22(4/1)
  bchg.b     #i3,(xxx).w                  ; 12(2/1) +  8(2/0) = 20(4/1)
  bchg.b     #i3,(xxx).l                  ; 12(2/1) + 12(3/0) = 24(5/1)
  ; bchg.l     #i5,d0                       ; 10(2/0) +  0(0/0) = 10(2/0)	; if i32 < 16
  bchg.l     #i5,d0                       ; 12(2/0) +  0(0/0) = 12(2/0)	; if i32 > 15
	; -------------------------------------------------------------------------
  bset.b     d0,(a0)                      ;  8(1/1) +  4(1/0) = 12(2/1)
  bset.b     d0,(a0)+                     ;  8(1/1) +  4(1/0) = 12(2/1)
  bset.b     d0,-(a0)                     ;  8(1/1) +  6(1/0) = 14(2/1)
  bset.b     d0,i16(a0)                   ;  8(1/1) +  8(2/0) = 16(3/1)
  bset.b     d0,i8(a0,d0.w)               ;  8(1/1) + 10(2/0) = 18(3/1)
  bset.b     d0,i8(a0,a0.w)               ;  8(1/1) + 10(2/0) = 18(3/1)
  bset.b     d0,i8(a0,d0.l)               ;  8(1/1) + 10(2/0) = 18(3/1)
  bset.b     d0,i8(a0,a0.l)               ;  8(1/1) + 10(2/0) = 18(3/1)
  bset.b     d0,(xxx).w                   ;  8(1/1) +  8(2/0) = 16(3/1)
  bset.b     d0,(xxx).l                   ;  8(1/1) + 12(3/0) = 20(4/1)
  ; bset.l     d0,d0                        ;  6(1/0) +  0(0/0) =  6(1/0)	; if d0 < 16
  bset.l     d0,d0                        ;  8(1/0) +  0(0/0) =  8(1/0)	; if d0 > 15
  bset.b     #i3,(a0)                     ; 12(2/1) +  4(1/0) = 16(3/1)
  bset.b     #i3,(a0)+                    ; 12(2/1) +  4(1/0) = 16(3/1)
  bset.b     #i3,-(a0)                    ; 12(2/1) +  6(1/0) = 18(3/1)
  bset.b     #i3,i16(a0)                  ; 12(2/1) +  8(2/0) = 20(4/1)
  bset.b     #i3,i8(a0,d0.w)              ; 12(2/1) + 10(2/0) = 22(4/1)
  bset.b     #i3,i8(a0,a0.w)              ; 12(2/1) + 10(2/0) = 22(4/1)
  bset.b     #i3,i8(a0,d0.l)              ; 12(2/1) + 10(2/0) = 22(4/1)
  bset.b     #i3,i8(a0,a0.l)              ; 12(2/1) + 10(2/0) = 22(4/1)
  bset.b     #i3,(xxx).w                  ; 12(2/1) +  8(2/0) = 20(4/1)
  bset.b     #i3,(xxx).l                  ; 12(2/1) + 12(3/0) = 24(5/1)
  ; bset.l     #i5,d0                       ; 10(2/0) +  0(0/0) = 10(2/0)	; if i32 < 16
  bset.l     #i5,d0                       ; 12(2/0) +  0(0/0) = 12(2/0)	; if i32 > 15
	; -------------------------------------------------------------------------
  bclr.b     d0,(a0)                      ;  8(1/1) +  4(1/0) = 12(2/1)
  bclr.b     d0,(a0)+                     ;  8(1/1) +  4(1/0) = 12(2/1)
  bclr.b     d0,-(a0)                     ;  8(1/1) +  6(1/0) = 14(2/1)
  bclr.b     d0,i16(a0)                   ;  8(1/1) +  8(2/0) = 16(3/1)
  bclr.b     d0,i8(a0,d0.w)               ;  8(1/1) + 10(2/0) = 18(3/1)
  bclr.b     d0,i8(a0,a0.w)               ;  8(1/1) + 10(2/0) = 18(3/1)
  bclr.b     d0,i8(a0,d0.l)               ;  8(1/1) + 10(2/0) = 18(3/1)
  bclr.b     d0,i8(a0,a0.l)               ;  8(1/1) + 10(2/0) = 18(3/1)
  bclr.b     d0,(xxx).w                   ;  8(1/1) +  8(2/0) = 16(3/1)
  bclr.b     d0,(xxx).l                   ;  8(1/1) + 12(3/0) = 20(4/1)
  ; bclr.l     d0,d0                ;  8(1/0) +  0(0/0) =  8(1/0)	; if d0 < 16        TODO
  bclr.l     d0,d0                        ; 10(1/0) +  0(0/0) = 10(1/0)	; if d0 > 15
  bclr.b     #i3,(a0)                     ; 12(2/1) +  4(1/0) = 16(3/1)
  bclr.b     #i3,(a0)+                    ; 12(2/1) +  4(1/0) = 16(3/1)
  bclr.b     #i3,-(a0)                    ; 12(2/1) +  6(1/0) = 18(3/1)
  bclr.b     #i3,i16(a0)                  ; 12(2/1) +  8(2/0) = 20(4/1)
  bclr.b     #i3,i8(a0,d0.w)              ; 12(2/1) + 10(2/0) = 22(4/1)
  bclr.b     #i3,i8(a0,a0.w)              ; 12(2/1) + 10(2/0) = 22(4/1)
  bclr.b     #i3,i8(a0,d0.l)              ; 12(2/1) + 10(2/0) = 22(4/1)
  bclr.b     #i3,i8(a0,a0.l)              ; 12(2/1) + 10(2/0) = 22(4/1)
  bclr.b     #i3,(xxx).w                  ; 12(2/1) +  8(2/0) = 20(4/1)
  bclr.b     #i3,(xxx).l                  ; 12(2/1) + 12(3/0) = 24(5/1)
  ; bclr.l     #i5,d0               ; 12(2/0) +  0(0/0) = 12(2/0)	; if i32 < 16           TODO
  bclr.l     #i5,d0                       ; 14(2/0) +  0(0/0) = 14(2/0)	; if i32 > 15
	; -------------------------------------------------------------------------
  btst.b     d0,(a0)                      ;  4(1/0) +  4(1/0) =  8(2/0)
  btst.b     d0,(a0)+                     ;  4(1/0) +  4(1/0) =  8(2/0)
  btst.b     d0,-(a0)                     ;  4(1/0) +  6(1/0) = 10(2/0)
  btst.b     d0,i16(a0)                   ;  4(1/0) +  8(2/0) = 12(3/0)
  btst.b     d0,i8(a0,d0.w)               ;  4(1/0) + 10(2/0) = 14(3/0)
  btst.b     d0,i8(a0,a0.w)               ;  4(1/0) + 10(2/0) = 14(3/0)
  btst.b     d0,i8(a0,d0.l)               ;  4(1/0) + 10(2/0) = 14(3/0)
  btst.b     d0,i8(a0,a0.l)               ;  4(1/0) + 10(2/0) = 14(3/0)
  btst.b     d0,*+i8(pc,d0.w)             ;  4(1/0) + 10(2/0) = 14(3/0)
  btst.b     d0,*+i8(pc,a0.w)             ;  4(1/0) + 10(2/0) = 14(3/0)
  btst.b     d0,*+i8(pc,d0.l)             ;  4(1/0) + 10(2/0) = 14(3/0)
  btst.b     d0,*+i8(pc,a0.l)             ;  4(1/0) + 10(2/0) = 14(3/0)
  btst.b     d0,(xxx).w                   ;  4(1/0) +  8(2/0) = 12(3/0)
  btst.b     d0,(xxx).l                   ;  4(1/0) + 12(3/0) = 16(4/0)
  btst.b     d0,#255                      ;  6(1/0) +  4(1/0) = 10(2/0)
  btst.l     d0,d0                        ;  6(1/0) +  0(0/0) =  6(1/0)
  btst.b     #i3,(a0)                     ;  8(2/0) +  4(1/0) = 12(3/0)
  btst.b     #i3,(a0)+                    ;  8(2/0) +  4(1/0) = 12(3/0)
  btst.b     #i3,-(a0)                    ;  8(2/0) +  6(1/0) = 14(3/0)
  btst.b     #i3,i16(a0)                  ;  8(2/0) +  8(2/0) = 16(4/0)
  btst.b     #i3,i8(a0,d0.w)              ;  8(2/0) + 10(2/0) = 18(4/0)
  btst.b     #i3,i8(a0,a0.w)              ;  8(2/0) + 10(2/0) = 18(4/0)
  btst.b     #i3,i8(a0,d0.l)              ;  8(2/0) + 10(2/0) = 18(4/0)
  btst.b     #i3,i8(a0,a0.l)              ;  8(2/0) + 10(2/0) = 18(4/0)
  btst.b     #i3,*+i8(pc,d0.w)            ;  8(2/0) + 10(2/0) = 18(4/0)
  btst.b     #i3,*+i8(pc,a0.w)            ;  8(2/0) + 10(2/0) = 18(4/0)
  btst.b     #i3,*+i8(pc,d0.l)            ;  8(2/0) + 10(2/0) = 18(4/0)
  btst.b     #i3,*+i8(pc,a0.l)            ;  8(2/0) + 10(2/0) = 18(4/0)
  btst.b     #i3,(xxx).w                  ;  8(2/0) +  8(2/0) = 16(4/0)
  btst.b     #i3,(xxx).l                  ;  8(2/0) + 12(3/0) = 20(5/0)
  btst.l     #i5,d0                       ; 10(2/0) +  0(0/0) = 10(2/0)
	; -------------------------------------------------------------------------
  movep.w    d0,i16(a0)                   ; 16(2/2)
  movep.l    d0,i16(a0)                   ; 24(2/4)
  movep.w    i16(a0),d0                   ; 16(4/0)
  movep.l    i16(a0),d0                   ; 24(6/0)
	; -------------------------------------------------------------------------
; =============================================================================
; Line %0001, %0010, %0011
; =============================================================================
  move.b     d0,d0                        ;  4(1/0)
  move.b     a0,d0                        ;  4(1/0)
  move.b     (a0),d0                      ;  8(2/0)
  move.b     (a0)+,d0                     ;  8(2/0)
  move.b     -(a0),d0                     ; 10(2/0)
  move.b     i16(a0),d0                   ; 12(3/0)
  move.b     *+i16(pc),d0                 ; 12(3/0)
  move.b     i8(a0,d0.w),d0               ; 14(3/0)
  move.b     i8(a0,a0.w),d0               ; 14(3/0)
  move.b     i8(a0,d0.l),d0               ; 14(3/0)
  move.b     i8(a0,a0.l),d0               ; 14(3/0)
  move.b     *+i8(pc,d0.w),d0             ; 14(3/0)
  move.b     *+i8(pc,a0.w),d0             ; 14(3/0)
  move.b     *+i8(pc,d0.l),d0             ; 14(3/0)
  move.b     *+i8(pc,a0.l),d0             ; 14(3/0)
  move.b     (xxx).w,d0                   ; 12(3/0)
  move.b     (xxx).l,d0                   ; 16(4/0)
  move.b     #i8,d0                       ;  8(2/0)
  move.w     d0,d0                        ;  4(1/0)
  move.w     a0,d0                        ;  4(1/0)
  move.w     (a0),d0                      ;  8(2/0)
  move.w     (a0)+,d0                     ;  8(2/0)
  move.w     -(a0),d0                     ; 10(2/0)
  move.w     i16(a0),d0                   ; 12(3/0)
  move.w     *+i16(pc),d0                 ; 12(3/0)
  move.w     i8(a0,d0.w),d0               ; 14(3/0)
  move.w     i8(a0,a0.w),d0               ; 14(3/0)
  move.w     i8(a0,d0.l),d0               ; 14(3/0)
  move.w     i8(a0,a0.l),d0               ; 14(3/0)
  move.w     *+i8(pc,d0.w),d0             ; 14(3/0)
  move.w     *+i8(pc,a0.w),d0             ; 14(3/0)
  move.w     *+i8(pc,d0.l),d0             ; 14(3/0)
  move.w     *+i8(pc,a0.l),d0             ; 14(3/0)
  move.w     (xxx).w,d0                   ; 12(3/0)
  move.w     (xxx).l,d0                   ; 16(4/0)
  move.w     #i16,d0                      ;  8(2/0)
  move.l     d0,d0                        ;  4(1/0)
  move.l     a0,d0                        ;  4(1/0)
  move.l     (a0),d0                      ; 12(3/0)
  move.l     (a0)+,d0                     ; 12(3/0)
  move.l     -(a0),d0                     ; 14(3/0)
  move.l     i16(a0),d0                   ; 16(4/0)
  move.l     *+i16(pc),d0                 ; 16(4/0)
  move.l     i8(a0,d0.w),d0               ; 18(4/0)
  move.l     i8(a0,a0.w),d0               ; 18(4/0)
  move.l     i8(a0,d0.l),d0               ; 18(4/0)
  move.l     i8(a0,a0.l),d0               ; 18(4/0)
  move.l     *+i8(pc,d0.w),d0             ; 18(4/0)
  move.l     *+i8(pc,a0.w),d0             ; 18(4/0)
  move.l     *+i8(pc,d0.l),d0             ; 18(4/0)
  move.l     *+i8(pc,a0.l),d0             ; 18(4/0)
  move.l     (xxx).w,d0                   ; 16(4/0)
  move.l     (xxx).l,d0                   ; 20(5/0)
  move.l     #i32,d0                      ; 12(3/0)
  move.b     d0,(a0)                      ;  8(1/1)
  move.b     a0,(a0)                      ;  8(1/1)
  move.b     (a0),(a0)                    ; 12(2/1)
  move.b     (a0)+,(a0)                   ; 12(2/1)
  move.b     -(a0),(a0)                   ; 14(2/1)
  move.b     i16(a0),(a0)                 ; 16(3/1)
  move.b     *+i16(pc),(a0)               ; 16(3/1)
  move.b     i8(a0,d0.w),(a0)             ; 18(3/1)
  move.b     i8(a0,a0.w),(a0)             ; 18(3/1)
  move.b     i8(a0,d0.l),(a0)             ; 18(3/1)
  move.b     i8(a0,a0.l),(a0)             ; 18(3/1)
  move.b     *+i8(pc,d0.w),(a0)           ; 18(3/1)
  move.b     *+i8(pc,a0.w),(a0)           ; 18(3/1)
  move.b     *+i8(pc,d0.l),(a0)           ; 18(3/1)
  move.b     *+i8(pc,a0.l),(a0)           ; 18(3/1)
  move.b     (xxx).w,(a0)                 ; 16(3/1)
  move.b     (xxx).l,(a0)                 ; 20(4/1)
  move.b     #i8,(a0)                     ; 12(2/1)
  move.w     d0,(a0)                      ;  8(1/1)
  move.w     a0,(a0)                      ;  8(1/1)
  move.w     (a0),(a0)                    ; 12(2/1)
  move.w     (a0)+,(a0)                   ; 12(2/1)
  move.w     -(a0),(a0)                   ; 14(2/1)
  move.w     i16(a0),(a0)                 ; 16(3/1)
  move.w     *+i16(pc),(a0)               ; 16(3/1)
  move.w     i8(a0,d0.w),(a0)             ; 18(3/1)
  move.w     i8(a0,a0.w),(a0)             ; 18(3/1)
  move.w     i8(a0,d0.l),(a0)             ; 18(3/1)
  move.w     i8(a0,a0.l),(a0)             ; 18(3/1)
  move.w     *+i8(pc,d0.w),(a0)           ; 18(3/1)
  move.w     *+i8(pc,a0.w),(a0)           ; 18(3/1)
  move.w     *+i8(pc,d0.l),(a0)           ; 18(3/1)
  move.w     *+i8(pc,a0.l),(a0)           ; 18(3/1)
  move.w     (xxx).w,(a0)                 ; 16(3/1)
  move.w     (xxx).l,(a0)                 ; 20(4/1)
  move.w     #i16,(a0)                    ; 12(2/1)
  move.l     d0,(a0)                      ; 12(1/2)
  move.l     a0,(a0)                      ; 12(1/2)
  move.l     (a0),(a0)                    ; 20(3/2)
  move.l     (a0)+,(a0)                   ; 20(3/2)
  move.l     -(a0),(a0)                   ; 22(3/2)
  move.l     i16(a0),(a0)                 ; 24(4/2)
  move.l     *+i16(pc),(a0)               ; 24(4/2)
  move.l     i8(a0,d0.w),(a0)             ; 26(4/2)
  move.l     i8(a0,a0.w),(a0)             ; 26(4/2)
  move.l     i8(a0,d0.l),(a0)             ; 26(4/2)
  move.l     i8(a0,a0.l),(a0)             ; 26(4/2)
  move.l     *+i8(pc,d0.w),(a0)           ; 26(4/2)
  move.l     *+i8(pc,a0.w),(a0)           ; 26(4/2)
  move.l     *+i8(pc,d0.l),(a0)           ; 26(4/2)
  move.l     *+i8(pc,a0.l),(a0)           ; 26(4/2)
  move.l     (xxx).w,(a0)                 ; 24(4/2)
  move.l     (xxx).l,(a0)                 ; 28(5/2)
  move.l     #i32,(a0)                    ; 20(3/2)
  move.b     d0,(a0)+                     ;  8(1/1)
  move.b     a0,(a0)+                     ;  8(1/1)
  move.b     (a0),(a0)+                   ; 12(2/1)
  move.b     (a0)+,(a0)+                  ; 12(2/1)
  move.b     -(a0),(a0)+                  ; 14(2/1)
  move.b     i16(a0),(a0)+                ; 16(3/1)
  move.b     *+i16(pc),(a0)+              ; 16(3/1)
  move.b     i8(a0,d0.w),(a0)+            ; 18(3/1)
  move.b     i8(a0,a0.w),(a0)+            ; 18(3/1)
  move.b     i8(a0,d0.l),(a0)+            ; 18(3/1)
  move.b     i8(a0,a0.l),(a0)+            ; 18(3/1)
  move.b     *+i8(pc,d0.w),(a0)+          ; 18(3/1)
  move.b     *+i8(pc,a0.w),(a0)+          ; 18(3/1)
  move.b     *+i8(pc,d0.l),(a0)+          ; 18(3/1)
  move.b     *+i8(pc,a0.l),(a0)+          ; 18(3/1)
  move.b     (xxx).w,(a0)+                ; 16(3/1)
  move.b     (xxx).l,(a0)+                ; 20(4/1)
  move.b     #i8,(a0)+                    ; 12(2/1)
  move.w     d0,(a0)+                     ;  8(1/1)
  move.w     a0,(a0)+                     ;  8(1/1)
  move.w     (a0),(a0)+                   ; 12(2/1)
  move.w     (a0)+,(a0)+                  ; 12(2/1)
  move.w     -(a0),(a0)+                  ; 14(2/1)
  move.w     i16(a0),(a0)+                ; 16(3/1)
  move.w     *+i16(pc),(a0)+              ; 16(3/1)
  move.w     i8(a0,d0.w),(a0)+            ; 18(3/1)
  move.w     i8(a0,a0.w),(a0)+            ; 18(3/1)
  move.w     i8(a0,d0.l),(a0)+            ; 18(3/1)
  move.w     i8(a0,a0.l),(a0)+            ; 18(3/1)
  move.w     *+i8(pc,d0.w),(a0)+          ; 18(3/1)
  move.w     *+i8(pc,a0.w),(a0)+          ; 18(3/1)
  move.w     *+i8(pc,d0.l),(a0)+          ; 18(3/1)
  move.w     *+i8(pc,a0.l),(a0)+          ; 18(3/1)
  move.w     (xxx).w,(a0)+                ; 16(3/1)
  move.w     (xxx).l,(a0)+                ; 20(4/1)
  move.w     #i16,(a0)+                   ; 12(2/1)
  move.l     d0,(a0)+                     ; 12(1/2)
  move.l     a0,(a0)+                     ; 12(1/2)
  move.l     (a0),(a0)+                   ; 20(3/2)
  move.l     (a0)+,(a0)+                  ; 20(3/2)
  move.l     -(a0),(a0)+                  ; 22(3/2)
  move.l     i16(a0),(a0)+                ; 24(4/2)
  move.l     *+i16(pc),(a0)+              ; 24(4/2)
  move.l     i8(a0,d0.w),(a0)+            ; 26(4/2)
  move.l     i8(a0,a0.w),(a0)+            ; 26(4/2)
  move.l     i8(a0,d0.l),(a0)+            ; 26(4/2)
  move.l     i8(a0,a0.l),(a0)+            ; 26(4/2)
  move.l     *+i8(pc,d0.w),(a0)+          ; 26(4/2)
  move.l     *+i8(pc,a0.w),(a0)+          ; 26(4/2)
  move.l     *+i8(pc,d0.l),(a0)+          ; 26(4/2)
  move.l     *+i8(pc,a0.l),(a0)+          ; 26(4/2)
  move.l     (xxx).w,(a0)+                ; 24(4/2)
  move.l     (xxx).l,(a0)+                ; 28(5/2)
  move.l     #i32,(a0)+                   ; 20(3/2)
  move.b     d0,-(a0)                     ;  8(1/1)
  move.b     a0,-(a0)                     ;  8(1/1)
  move.b     (a0),-(a0)                   ; 12(2/1)
  move.b     (a0)+,-(a0)                  ; 12(2/1)
  move.b     -(a0),-(a0)                  ; 14(2/1)
  move.b     i16(a0),-(a0)                ; 16(3/1)
  move.b     *+i16(pc),-(a0)              ; 16(3/1)
  move.b     i8(a0,d0.w),-(a0)            ; 18(3/1)
  move.b     i8(a0,a0.w),-(a0)            ; 18(3/1)
  move.b     i8(a0,d0.l),-(a0)            ; 18(3/1)
  move.b     i8(a0,a0.l),-(a0)            ; 18(3/1)
  move.b     *+i8(pc,d0.w),-(a0)          ; 18(3/1)
  move.b     *+i8(pc,a0.w),-(a0)          ; 18(3/1)
  move.b     *+i8(pc,d0.l),-(a0)          ; 18(3/1)
  move.b     *+i8(pc,a0.l),-(a0)          ; 18(3/1)
  move.b     (xxx).w,-(a0)                ; 16(3/1)
  move.b     (xxx).l,-(a0)                ; 20(4/1)
  move.b     #i8,-(a0)                    ; 12(2/1)
  move.w     d0,-(a0)                     ;  8(1/1)
  move.w     a0,-(a0)                     ;  8(1/1)
  move.w     (a0),-(a0)                   ; 12(2/1)
  move.w     (a0)+,-(a0)                  ; 12(2/1)
  move.w     -(a0),-(a0)                  ; 14(2/1)
  move.w     i16(a0),-(a0)                ; 16(3/1)
  move.w     *+i16(pc),-(a0)              ; 16(3/1)
  move.w     i8(a0,d0.w),-(a0)            ; 18(3/1)
  move.w     i8(a0,a0.w),-(a0)            ; 18(3/1)
  move.w     i8(a0,d0.l),-(a0)            ; 18(3/1)
  move.w     i8(a0,a0.l),-(a0)            ; 18(3/1)
  move.w     *+i8(pc,d0.w),-(a0)          ; 18(3/1)
  move.w     *+i8(pc,a0.w),-(a0)          ; 18(3/1)
  move.w     *+i8(pc,d0.l),-(a0)          ; 18(3/1)
  move.w     *+i8(pc,a0.l),-(a0)          ; 18(3/1)
  move.w     (xxx).w,-(a0)                ; 16(3/1)
  move.w     (xxx).l,-(a0)                ; 20(4/1)
  move.w     #i16,-(a0)                   ; 12(2/1)
  move.l     d0,-(a0)                     ; 12(1/2)
  move.l     a0,-(a0)                     ; 12(1/2)
  move.l     (a0),-(a0)                   ; 20(3/2)
  move.l     (a0)+,-(a0)                  ; 20(3/2)
  move.l     -(a0),-(a0)                  ; 22(3/2)
  move.l     i16(a0),-(a0)                ; 24(4/2)
  move.l     *+i16(pc),-(a0)              ; 24(4/2)
  move.l     i8(a0,d0.w),-(a0)            ; 26(4/2)
  move.l     i8(a0,a0.w),-(a0)            ; 26(4/2)
  move.l     i8(a0,d0.l),-(a0)            ; 26(4/2)
  move.l     i8(a0,a0.l),-(a0)            ; 26(4/2)
  move.l     *+i8(pc,d0.w),-(a0)          ; 26(4/2)
  move.l     *+i8(pc,a0.w),-(a0)          ; 26(4/2)
  move.l     *+i8(pc,d0.l),-(a0)          ; 26(4/2)
  move.l     *+i8(pc,a0.l),-(a0)          ; 26(4/2)
  move.l     (xxx).w,-(a0)                ; 24(4/2)
  move.l     (xxx).l,-(a0)                ; 28(5/2)
  move.l     #i32,-(a0)                   ; 20(3/2)
  move.b     d0,i16(a0)                   ; 12(2/1)
  move.b     a0,i16(a0)                   ; 12(2/1)
  move.b     (a0),i16(a0)                 ; 16(3/1)
  move.b     (a0)+,i16(a0)                ; 16(3/1)
  move.b     -(a0),i16(a0)                ; 18(3/1)
  move.b     i16(a0),i16(a0)              ; 20(4/1)
  move.b     *+i16(pc),i16(a0)            ; 20(4/1)
  move.b     i8(a0,d0.w),i16(a0)          ; 22(4/1)
  move.b     i8(a0,a0.w),i16(a0)          ; 22(4/1)
  move.b     i8(a0,d0.l),i16(a0)          ; 22(4/1)
  move.b     i8(a0,a0.l),i16(a0)          ; 22(4/1)
  move.b     *+i8(pc,d0.w),i16(a0)        ; 22(4/1)
  move.b     *+i8(pc,a0.w),i16(a0)        ; 22(4/1)
  move.b     *+i8(pc,d0.l),i16(a0)        ; 22(4/1)
  move.b     *+i8(pc,a0.l),i16(a0)        ; 22(4/1)
  move.b     (xxx).w,i16(a0)              ; 20(4/1)
  move.b     (xxx).l,i16(a0)              ; 24(5/1)
  move.b     #i8,i16(a0)                  ; 16(3/1)
  move.w     d0,i16(a0)                   ; 12(2/1)
  move.w     a0,i16(a0)                   ; 12(2/1)
  move.w     (a0),i16(a0)                 ; 16(3/1)
  move.w     (a0)+,i16(a0)                ; 16(3/1)
  move.w     -(a0),i16(a0)                ; 18(3/1)
  move.w     i16(a0),i16(a0)              ; 20(4/1)
  move.w     *+i16(pc),i16(a0)            ; 20(4/1)
  move.w     i8(a0,d0.w),i16(a0)          ; 22(4/1)
  move.w     i8(a0,a0.w),i16(a0)          ; 22(4/1)
  move.w     i8(a0,d0.l),i16(a0)          ; 22(4/1)
  move.w     i8(a0,a0.l),i16(a0)          ; 22(4/1)
  move.w     *+i8(pc,d0.w),i16(a0)        ; 22(4/1)
  move.w     *+i8(pc,a0.w),i16(a0)        ; 22(4/1)
  move.w     *+i8(pc,d0.l),i16(a0)        ; 22(4/1)
  move.w     *+i8(pc,a0.l),i16(a0)        ; 22(4/1)
  move.w     (xxx).w,i16(a0)              ; 20(4/1)
  move.w     (xxx).l,i16(a0)              ; 24(5/1)
  move.w     #i16,i16(a0)                 ; 16(3/1)
  move.l     d0,i16(a0)                   ; 16(2/2)
  move.l     a0,i16(a0)                   ; 16(2/2)
  move.l     (a0),i16(a0)                 ; 24(4/2)
  move.l     (a0)+,i16(a0)                ; 24(4/2)
  move.l     -(a0),i16(a0)                ; 26(4/2)
  move.l     i16(a0),i16(a0)              ; 28(5/2)
  move.l     *+i16(pc),i16(a0)            ; 28(5/2)
  move.l     i8(a0,d0.w),i16(a0)          ; 30(5/2)
  move.l     i8(a0,a0.w),i16(a0)          ; 30(5/2)
  move.l     i8(a0,d0.l),i16(a0)          ; 30(5/2)
  move.l     i8(a0,a0.l),i16(a0)          ; 30(5/2)
  move.l     *+i8(pc,d0.w),i16(a0)        ; 30(5/2)
  move.l     *+i8(pc,a0.w),i16(a0)        ; 30(5/2)
  move.l     *+i8(pc,d0.l),i16(a0)        ; 30(5/2)
  move.l     *+i8(pc,a0.l),i16(a0)        ; 30(5/2)
  move.l     (xxx).w,i16(a0)              ; 28(5/2)
  move.l     (xxx).l,i16(a0)              ; 32(6/2)
  move.l     #i32,i16(a0)                 ; 24(4/2)
  move.b     d0,i8(a0,d0.w)               ; 14(2/1)
  move.b     d0,i8(a0,a0.w)               ; 14(2/1)
  move.b     d0,i8(a0,d0.l)               ; 14(2/1)
  move.b     d0,i8(a0,a0.l)               ; 14(2/1)
  move.b     a0,i8(a0,d0.w)               ; 14(2/1)
  move.b     a0,i8(a0,a0.w)               ; 14(2/1)
  move.b     a0,i8(a0,d0.l)               ; 14(2/1)
  move.b     a0,i8(a0,a0.l)               ; 14(2/1)
  move.b     (a0),i8(a0,d0.w)             ; 18(3/1)
  move.b     (a0),i8(a0,a0.w)             ; 18(3/1)
  move.b     (a0),i8(a0,d0.l)             ; 18(3/1)
  move.b     (a0),i8(a0,a0.l)             ; 18(3/1)
  move.b     (a0)+,i8(a0,d0.w)            ; 18(3/1)
  move.b     (a0)+,i8(a0,a0.w)            ; 18(3/1)
  move.b     (a0)+,i8(a0,d0.l)            ; 18(3/1)
  move.b     (a0)+,i8(a0,a0.l)            ; 18(3/1)
  move.b     -(a0),i8(a0,d0.w)            ; 20(3/1)
  move.b     -(a0),i8(a0,a0.w)            ; 20(3/1)
  move.b     -(a0),i8(a0,d0.l)            ; 20(3/1)
  move.b     -(a0),i8(a0,a0.l)            ; 20(3/1)
  move.b     i16(a0),i8(a0,d0.w)          ; 22(4/1)
  move.b     i16(a0),i8(a0,a0.w)          ; 22(4/1)
  move.b     i16(a0),i8(a0,d0.l)          ; 22(4/1)
  move.b     i16(a0),i8(a0,a0.l)          ; 22(4/1)
  move.b     *+i16(pc),i8(a0,d0.w)        ; 22(4/1)
  move.b     *+i16(pc),i8(a0,a0.w)        ; 22(4/1)
  move.b     *+i16(pc),i8(a0,d0.l)        ; 22(4/1)
  move.b     *+i16(pc),i8(a0,a0.l)        ; 22(4/1)
  move.b     i8(a0,d0.w),i8(a0,d0.w)      ; 24(4/1)
  move.b     i8(a0,a0.w),i8(a0,d0.w)      ; 24(4/1)
  move.b     i8(a0,d0.w),i8(a0,a0.w)      ; 24(4/1)
  move.b     i8(a0,a0.w),i8(a0,a0.w)      ; 24(4/1)
  move.b     i8(a0,d0.l),i8(a0,d0.w)      ; 24(4/1)
  move.b     i8(a0,a0.l),i8(a0,d0.w)      ; 24(4/1)
  move.b     i8(a0,d0.l),i8(a0,a0.w)      ; 24(4/1)
  move.b     i8(a0,a0.l),i8(a0,a0.w)      ; 24(4/1)
  move.b     i8(a0,d0.w),i8(a0,d0.l)      ; 24(4/1)
  move.b     i8(a0,a0.w),i8(a0,d0.l)      ; 24(4/1)
  move.b     i8(a0,d0.w),i8(a0,a0.l)      ; 24(4/1)
  move.b     i8(a0,a0.w),i8(a0,a0.l)      ; 24(4/1)
  move.b     i8(a0,d0.l),i8(a0,d0.l)      ; 24(4/1)
  move.b     i8(a0,a0.l),i8(a0,d0.l)      ; 24(4/1)
  move.b     i8(a0,d0.l),i8(a0,a0.l)      ; 24(4/1)
  move.b     i8(a0,a0.l),i8(a0,a0.l)      ; 24(4/1)
  move.b     *+i8(pc,d0.w),i8(a0,d0.w)    ; 24(4/1)
  move.b     *+i8(pc,a0.w),i8(a0,d0.w)    ; 24(4/1)
  move.b     *+i8(pc,d0.w),i8(a0,a0.w)    ; 24(4/1)
  move.b     *+i8(pc,a0.w),i8(a0,a0.w)    ; 24(4/1)
  move.b     *+i8(pc,d0.l),i8(a0,d0.w)    ; 24(4/1)
  move.b     *+i8(pc,a0.l),i8(a0,d0.w)    ; 24(4/1)
  move.b     *+i8(pc,d0.l),i8(a0,a0.w)    ; 24(4/1)
  move.b     *+i8(pc,a0.l),i8(a0,a0.w)    ; 24(4/1)
  move.b     *+i8(pc,d0.w),i8(a0,d0.l)    ; 24(4/1)
  move.b     *+i8(pc,a0.w),i8(a0,d0.l)    ; 24(4/1)
  move.b     *+i8(pc,d0.w),i8(a0,a0.l)    ; 24(4/1)
  move.b     *+i8(pc,a0.w),i8(a0,a0.l)    ; 24(4/1)
  move.b     *+i8(pc,d0.l),i8(a0,d0.l)    ; 24(4/1)
  move.b     *+i8(pc,a0.l),i8(a0,d0.l)    ; 24(4/1)
  move.b     *+i8(pc,d0.l),i8(a0,a0.l)    ; 24(4/1)
  move.b     *+i8(pc,a0.l),i8(a0,a0.l)    ; 24(4/1)
  move.b     (xxx).w,i8(a0,d0.w)          ; 22(4/1)
  move.b     (xxx).w,i8(a0,a0.w)          ; 22(4/1)
  move.b     (xxx).w,i8(a0,d0.l)          ; 22(4/1)
  move.b     (xxx).w,i8(a0,a0.l)          ; 22(4/1)
  move.b     (xxx).l,i8(a0,d0.w)          ; 26(5/1)
  move.b     (xxx).l,i8(a0,a0.w)          ; 26(5/1)
  move.b     (xxx).l,i8(a0,d0.l)          ; 26(5/1)
  move.b     (xxx).l,i8(a0,a0.l)          ; 26(5/1)
  move.b     #i8,i8(a0,d0.w)              ; 18(3/1)
  move.b     #i8,i8(a0,a0.w)              ; 18(3/1)
  move.b     #i8,i8(a0,d0.l)              ; 18(3/1)
  move.b     #i8,i8(a0,a0.l)              ; 18(3/1)
  move.w     d0,i8(a0,d0.w)               ; 14(2/1)
  move.w     d0,i8(a0,a0.w)               ; 14(2/1)
  move.w     d0,i8(a0,d0.l)               ; 14(2/1)
  move.w     d0,i8(a0,a0.l)               ; 14(2/1)
  move.w     a0,i8(a0,d0.w)               ; 14(2/1)
  move.w     a0,i8(a0,a0.w)               ; 14(2/1)
  move.w     a0,i8(a0,d0.l)               ; 14(2/1)
  move.w     a0,i8(a0,a0.l)               ; 14(2/1)
  move.w     (a0),i8(a0,d0.w)             ; 18(3/1)
  move.w     (a0),i8(a0,a0.w)             ; 18(3/1)
  move.w     (a0),i8(a0,d0.l)             ; 18(3/1)
  move.w     (a0),i8(a0,a0.l)             ; 18(3/1)
  move.w     (a0)+,i8(a0,d0.w)            ; 18(3/1)
  move.w     (a0)+,i8(a0,a0.w)            ; 18(3/1)
  move.w     (a0)+,i8(a0,d0.l)            ; 18(3/1)
  move.w     (a0)+,i8(a0,a0.l)            ; 18(3/1)
  move.w     -(a0),i8(a0,d0.w)            ; 20(3/1)
  move.w     -(a0),i8(a0,a0.w)            ; 20(3/1)
  move.w     -(a0),i8(a0,d0.l)            ; 20(3/1)
  move.w     -(a0),i8(a0,a0.l)            ; 20(3/1)
  move.w     i16(a0),i8(a0,d0.w)          ; 22(4/1)
  move.w     i16(a0),i8(a0,a0.w)          ; 22(4/1)
  move.w     i16(a0),i8(a0,d0.l)          ; 22(4/1)
  move.w     i16(a0),i8(a0,a0.l)          ; 22(4/1)
  move.w     *+i16(pc),i8(a0,d0.w)        ; 22(4/1)
  move.w     *+i16(pc),i8(a0,a0.w)        ; 22(4/1)
  move.w     *+i16(pc),i8(a0,d0.l)        ; 22(4/1)
  move.w     *+i16(pc),i8(a0,a0.l)        ; 22(4/1)
  move.w     i8(a0,d0.w),i8(a0,d0.w)      ; 24(4/1)
  move.w     i8(a0,a0.w),i8(a0,d0.w)      ; 24(4/1)
  move.w     i8(a0,d0.w),i8(a0,a0.w)      ; 24(4/1)
  move.w     i8(a0,a0.w),i8(a0,a0.w)      ; 24(4/1)
  move.w     i8(a0,d0.l),i8(a0,d0.w)      ; 24(4/1)
  move.w     i8(a0,a0.l),i8(a0,d0.w)      ; 24(4/1)
  move.w     i8(a0,d0.l),i8(a0,a0.w)      ; 24(4/1)
  move.w     i8(a0,a0.l),i8(a0,a0.w)      ; 24(4/1)
  move.w     i8(a0,d0.w),i8(a0,d0.l)      ; 24(4/1)
  move.w     i8(a0,a0.w),i8(a0,d0.l)      ; 24(4/1)
  move.w     i8(a0,d0.w),i8(a0,a0.l)      ; 24(4/1)
  move.w     i8(a0,a0.w),i8(a0,a0.l)      ; 24(4/1)
  move.w     i8(a0,d0.l),i8(a0,d0.l)      ; 24(4/1)
  move.w     i8(a0,a0.l),i8(a0,d0.l)      ; 24(4/1)
  move.w     i8(a0,d0.l),i8(a0,a0.l)      ; 24(4/1)
  move.w     i8(a0,a0.l),i8(a0,a0.l)      ; 24(4/1)
  move.w     *+i8(pc,d0.w),i8(a0,d0.w)    ; 24(4/1)
  move.w     *+i8(pc,a0.w),i8(a0,d0.w)    ; 24(4/1)
  move.w     *+i8(pc,d0.w),i8(a0,a0.w)    ; 24(4/1)
  move.w     *+i8(pc,a0.w),i8(a0,a0.w)    ; 24(4/1)
  move.w     *+i8(pc,d0.l),i8(a0,d0.w)    ; 24(4/1)
  move.w     *+i8(pc,a0.l),i8(a0,d0.w)    ; 24(4/1)
  move.w     *+i8(pc,d0.l),i8(a0,a0.w)    ; 24(4/1)
  move.w     *+i8(pc,a0.l),i8(a0,a0.w)    ; 24(4/1)
  move.w     *+i8(pc,d0.w),i8(a0,d0.l)    ; 24(4/1)
  move.w     *+i8(pc,a0.w),i8(a0,d0.l)    ; 24(4/1)
  move.w     *+i8(pc,d0.w),i8(a0,a0.l)    ; 24(4/1)
  move.w     *+i8(pc,a0.w),i8(a0,a0.l)    ; 24(4/1)
  move.w     *+i8(pc,d0.l),i8(a0,d0.l)    ; 24(4/1)
  move.w     *+i8(pc,a0.l),i8(a0,d0.l)    ; 24(4/1)
  move.w     *+i8(pc,d0.l),i8(a0,a0.l)    ; 24(4/1)
  move.w     *+i8(pc,a0.l),i8(a0,a0.l)    ; 24(4/1)
  move.w     (xxx).w,i8(a0,d0.w)          ; 22(4/1)
  move.w     (xxx).w,i8(a0,a0.w)          ; 22(4/1)
  move.w     (xxx).w,i8(a0,d0.l)          ; 22(4/1)
  move.w     (xxx).w,i8(a0,a0.l)          ; 22(4/1)
  move.w     (xxx).l,i8(a0,d0.w)          ; 26(5/1)
  move.w     (xxx).l,i8(a0,a0.w)          ; 26(5/1)
  move.w     (xxx).l,i8(a0,d0.l)          ; 26(5/1)
  move.w     (xxx).l,i8(a0,a0.l)          ; 26(5/1)
  move.w     #i16,i8(a0,d0.w)             ; 18(3/1)
  move.w     #i16,i8(a0,a0.w)             ; 18(3/1)
  move.w     #i16,i8(a0,d0.l)             ; 18(3/1)
  move.w     #i16,i8(a0,a0.l)             ; 18(3/1)
  move.l     d0,i8(a0,d0.w)               ; 18(2/2)
  move.l     d0,i8(a0,a0.w)               ; 18(2/2)
  move.l     d0,i8(a0,d0.l)               ; 18(2/2)
  move.l     d0,i8(a0,a0.l)               ; 18(2/2)
  move.l     a0,i8(a0,d0.w)               ; 18(2/2)
  move.l     a0,i8(a0,a0.w)               ; 18(2/2)
  move.l     a0,i8(a0,d0.l)               ; 18(2/2)
  move.l     a0,i8(a0,a0.l)               ; 18(2/2)
  move.l     (a0),i8(a0,d0.w)             ; 26(4/2)
  move.l     (a0),i8(a0,a0.w)             ; 26(4/2)
  move.l     (a0),i8(a0,d0.l)             ; 26(4/2)
  move.l     (a0),i8(a0,a0.l)             ; 26(4/2)
  move.l     (a0)+,i8(a0,d0.w)            ; 26(4/2)
  move.l     (a0)+,i8(a0,a0.w)            ; 26(4/2)
  move.l     (a0)+,i8(a0,d0.l)            ; 26(4/2)
  move.l     (a0)+,i8(a0,a0.l)            ; 26(4/2)
  move.l     -(a0),i8(a0,d0.w)            ; 28(4/2)
  move.l     -(a0),i8(a0,a0.w)            ; 28(4/2)
  move.l     -(a0),i8(a0,d0.l)            ; 28(4/2)
  move.l     -(a0),i8(a0,a0.l)            ; 28(4/2)
  move.l     i16(a0),i8(a0,d0.w)          ; 30(5/2)
  move.l     i16(a0),i8(a0,a0.w)          ; 30(5/2)
  move.l     i16(a0),i8(a0,d0.l)          ; 30(5/2)
  move.l     i16(a0),i8(a0,a0.l)          ; 30(5/2)
  move.l     *+i16(pc),i8(a0,d0.w)        ; 30(5/2)
  move.l     *+i16(pc),i8(a0,a0.w)        ; 30(5/2)
  move.l     *+i16(pc),i8(a0,d0.l)        ; 30(5/2)
  move.l     *+i16(pc),i8(a0,a0.l)        ; 30(5/2)
  move.l     i8(a0,d0.w),i8(a0,d0.w)      ; 32(5/2)
  move.l     i8(a0,a0.w),i8(a0,d0.w)      ; 32(5/2)
  move.l     i8(a0,d0.w),i8(a0,a0.w)      ; 32(5/2)
  move.l     i8(a0,a0.w),i8(a0,a0.w)      ; 32(5/2)
  move.l     i8(a0,d0.l),i8(a0,d0.w)      ; 32(5/2)
  move.l     i8(a0,a0.l),i8(a0,d0.w)      ; 32(5/2)
  move.l     i8(a0,d0.l),i8(a0,a0.w)      ; 32(5/2)
  move.l     i8(a0,a0.l),i8(a0,a0.w)      ; 32(5/2)
  move.l     i8(a0,d0.w),i8(a0,d0.l)      ; 32(5/2)
  move.l     i8(a0,a0.w),i8(a0,d0.l)      ; 32(5/2)
  move.l     i8(a0,d0.w),i8(a0,a0.l)      ; 32(5/2)
  move.l     i8(a0,a0.w),i8(a0,a0.l)      ; 32(5/2)
  move.l     i8(a0,d0.l),i8(a0,d0.l)      ; 32(5/2)
  move.l     i8(a0,a0.l),i8(a0,d0.l)      ; 32(5/2)
  move.l     i8(a0,d0.l),i8(a0,a0.l)      ; 32(5/2)
  move.l     i8(a0,a0.l),i8(a0,a0.l)      ; 32(5/2)
  move.l     *+i8(pc,d0.w),i8(a0,d0.w)    ; 32(5/2)
  move.l     *+i8(pc,a0.w),i8(a0,d0.w)    ; 32(5/2)
  move.l     *+i8(pc,d0.w),i8(a0,a0.w)    ; 32(5/2)
  move.l     *+i8(pc,a0.w),i8(a0,a0.w)    ; 32(5/2)
  move.l     *+i8(pc,d0.l),i8(a0,d0.w)    ; 32(5/2)
  move.l     *+i8(pc,a0.l),i8(a0,d0.w)    ; 32(5/2)
  move.l     *+i8(pc,d0.l),i8(a0,a0.w)    ; 32(5/2)
  move.l     *+i8(pc,a0.l),i8(a0,a0.w)    ; 32(5/2)
  move.l     *+i8(pc,d0.w),i8(a0,d0.l)    ; 32(5/2)
  move.l     *+i8(pc,a0.w),i8(a0,d0.l)    ; 32(5/2)
  move.l     *+i8(pc,d0.w),i8(a0,a0.l)    ; 32(5/2)
  move.l     *+i8(pc,a0.w),i8(a0,a0.l)    ; 32(5/2)
  move.l     *+i8(pc,d0.l),i8(a0,d0.l)    ; 32(5/2)
  move.l     *+i8(pc,a0.l),i8(a0,d0.l)    ; 32(5/2)
  move.l     *+i8(pc,d0.l),i8(a0,a0.l)    ; 32(5/2)
  move.l     *+i8(pc,a0.l),i8(a0,a0.l)    ; 32(5/2)
  move.l     (xxx).w,i8(a0,d0.w)          ; 30(5/2)
  move.l     (xxx).w,i8(a0,a0.w)          ; 30(5/2)
  move.l     (xxx).w,i8(a0,d0.l)          ; 30(5/2)
  move.l     (xxx).w,i8(a0,a0.l)          ; 30(5/2)
  move.l     (xxx).l,i8(a0,d0.w)          ; 34(6/2)
  move.l     (xxx).l,i8(a0,a0.w)          ; 34(6/2)
  move.l     (xxx).l,i8(a0,d0.l)          ; 34(6/2)
  move.l     (xxx).l,i8(a0,a0.l)          ; 34(6/2)
  move.l     #i32,i8(a0,d0.w)             ; 26(4/2)
  move.l     #i32,i8(a0,a0.w)             ; 26(4/2)
  move.l     #i32,i8(a0,d0.l)             ; 26(4/2)
  move.l     #i32,i8(a0,a0.l)             ; 26(4/2)
  move.b     d0,(xxx).w                   ; 12(2/1)
  move.b     a0,(xxx).w                   ; 12(2/1)
  move.b     (a0),(xxx).w                 ; 16(3/1)
  move.b     (a0)+,(xxx).w                ; 16(3/1)
  move.b     -(a0),(xxx).w                ; 18(3/1)
  move.b     i16(a0),(xxx).w              ; 20(4/1)
  move.b     *+i16(pc),(xxx).w            ; 20(4/1)
  move.b     i8(a0,d0.w),(xxx).w          ; 22(4/1)
  move.b     i8(a0,a0.w),(xxx).w          ; 22(4/1)
  move.b     i8(a0,d0.l),(xxx).w          ; 22(4/1)
  move.b     i8(a0,a0.l),(xxx).w          ; 22(4/1)
  move.b     *+i8(pc,d0.w),(xxx).w        ; 22(4/1)
  move.b     *+i8(pc,a0.w),(xxx).w        ; 22(4/1)
  move.b     *+i8(pc,d0.l),(xxx).w        ; 22(4/1)
  move.b     *+i8(pc,a0.l),(xxx).w        ; 22(4/1)
  move.b     (xxx).w,(xxx).w              ; 20(4/1)
  move.b     (xxx).l,(xxx).w              ; 24(5/1)
  move.b     #i8,(xxx).w                  ; 16(3/1)
  move.w     d0,(xxx).w                   ; 12(2/1)
  move.w     a0,(xxx).w                   ; 12(2/1)
  move.w     (a0),(xxx).w                 ; 16(3/1)
  move.w     (a0)+,(xxx).w                ; 16(3/1)
  move.w     -(a0),(xxx).w                ; 18(3/1)
  move.w     i16(a0),(xxx).w              ; 20(4/1)
  move.w     *+i16(pc),(xxx).w            ; 20(4/1)
  move.w     i8(a0,d0.w),(xxx).w          ; 22(4/1)
  move.w     i8(a0,a0.w),(xxx).w          ; 22(4/1)
  move.w     i8(a0,d0.l),(xxx).w          ; 22(4/1)
  move.w     i8(a0,a0.l),(xxx).w          ; 22(4/1)
  move.w     *+i8(pc,d0.w),(xxx).w        ; 22(4/1)
  move.w     *+i8(pc,a0.w),(xxx).w        ; 22(4/1)
  move.w     *+i8(pc,d0.l),(xxx).w        ; 22(4/1)
  move.w     *+i8(pc,a0.l),(xxx).w        ; 22(4/1)
  move.w     (xxx).w,(xxx).w              ; 20(4/1)
  move.w     (xxx).l,(xxx).w              ; 24(5/1)
  move.w     #i16,(xxx).w                 ; 16(3/1)
  move.l     d0,(xxx).w                   ; 16(2/2)
  move.l     a0,(xxx).w                   ; 16(2/2)
  move.l     (a0),(xxx).w                 ; 24(4/2)
  move.l     (a0)+,(xxx).w                ; 24(4/2)
  move.l     -(a0),(xxx).w                ; 26(4/2)
  move.l     i16(a0),(xxx).w              ; 28(5/2)
  move.l     *+i16(pc),(xxx).w            ; 28(5/2)
  move.l     i8(a0,d0.w),(xxx).w          ; 30(5/2)
  move.l     i8(a0,a0.w),(xxx).w          ; 30(5/2)
  move.l     i8(a0,d0.l),(xxx).w          ; 30(5/2)
  move.l     i8(a0,a0.l),(xxx).w          ; 30(5/2)
  move.l     *+i8(pc,d0.w),(xxx).w        ; 30(5/2)
  move.l     *+i8(pc,a0.w),(xxx).w        ; 30(5/2)
  move.l     *+i8(pc,d0.l),(xxx).w        ; 30(5/2)
  move.l     *+i8(pc,a0.l),(xxx).w        ; 30(5/2)
  move.l     (xxx).w,(xxx).w              ; 28(5/2)
  move.l     (xxx).l,(xxx).w              ; 32(6/2)
  move.l     #i32,(xxx).w                 ; 24(4/2)
  move.b     d0,(xxx).l                   ; 16(3/1)
  move.b     a0,(xxx).l                   ; 16(3/1)
  move.b     (a0),(xxx).l                 ; 20(4/1)
  move.b     (a0)+,(xxx).l                ; 20(4/1)
  move.b     -(a0),(xxx).l                ; 22(4/1)
  move.b     i16(a0),(xxx).l              ; 24(5/1)
  move.b     *+i16(pc),(xxx).l            ; 24(5/1)
  move.b     i8(a0,d0.w),(xxx).l          ; 26(5/1)
  move.b     i8(a0,a0.w),(xxx).l          ; 26(5/1)
  move.b     i8(a0,d0.l),(xxx).l          ; 26(5/1)
  move.b     i8(a0,a0.l),(xxx).l          ; 26(5/1)
  move.b     *+i8(pc,d0.w),(xxx).l        ; 26(5/1)
  move.b     *+i8(pc,a0.w),(xxx).l        ; 26(5/1)
  move.b     *+i8(pc,d0.l),(xxx).l        ; 26(5/1)
  move.b     *+i8(pc,a0.l),(xxx).l        ; 26(5/1)
  move.b     (xxx).w,(xxx).l              ; 24(5/1)
  move.b     (xxx).l,(xxx).l              ; 28(6/1)
  move.b     #i8,(xxx).l                  ; 20(4/1)
  move.w     d0,(xxx).l                   ; 16(3/1)
  move.w     a0,(xxx).l                   ; 16(3/1)
  move.w     (a0),(xxx).l                 ; 20(4/1)
  move.w     (a0)+,(xxx).l                ; 20(4/1)
  move.w     -(a0),(xxx).l                ; 22(4/1)
  move.w     i16(a0),(xxx).l              ; 24(5/1)
  move.w     *+i16(pc),(xxx).l            ; 24(5/1)
  move.w     i8(a0,d0.w),(xxx).l          ; 26(5/1)
  move.w     i8(a0,a0.w),(xxx).l          ; 26(5/1)
  move.w     i8(a0,d0.l),(xxx).l          ; 26(5/1)
  move.w     i8(a0,a0.l),(xxx).l          ; 26(5/1)
  move.w     *+i8(pc,d0.w),(xxx).l        ; 26(5/1)
  move.w     *+i8(pc,a0.w),(xxx).l        ; 26(5/1)
  move.w     *+i8(pc,d0.l),(xxx).l        ; 26(5/1)
  move.w     *+i8(pc,a0.l),(xxx).l        ; 26(5/1)
  move.w     (xxx).w,(xxx).l              ; 24(5/1)
  move.w     (xxx).l,(xxx).l              ; 28(6/1)
  move.w     #i16,(xxx).l                 ; 20(4/1)
  move.l     d0,(xxx).l                   ; 20(3/2)
  move.l     a0,(xxx).l                   ; 20(3/2)
  move.l     (a0),(xxx).l                 ; 28(5/2)
  move.l     (a0)+,(xxx).l                ; 28(5/2)
  move.l     -(a0),(xxx).l                ; 30(5/2)
  move.l     i16(a0),(xxx).l              ; 32(6/2)
  move.l     *+i16(pc),(xxx).l            ; 32(6/2)
  move.l     i8(a0,d0.w),(xxx).l          ; 34(6/2)
  move.l     i8(a0,a0.w),(xxx).l          ; 34(6/2)
  move.l     i8(a0,d0.l),(xxx).l          ; 34(6/2)
  move.l     i8(a0,a0.l),(xxx).l          ; 34(6/2)
  move.l     *+i8(pc,d0.w),(xxx).l        ; 34(6/2)
  move.l     *+i8(pc,a0.w),(xxx).l        ; 34(6/2)
  move.l     *+i8(pc,d0.l),(xxx).l        ; 34(6/2)
  move.l     *+i8(pc,a0.l),(xxx).l        ; 34(6/2)
  move.l     (xxx).w,(xxx).l              ; 32(6/2)
  move.l     (xxx).l,(xxx).l              ; 36(7/2)
  move.l     #i32,(xxx).l                 ; 28(5/2)
	; -------------------------------------------------------------------------
  movea.w    a0,a0                        ;  4(1/0)
  movea.w    a0,a0                        ;  4(1/0)
  movea.w    (a0),a0                      ;  8(2/0)
  movea.w    (a0)+,a0                     ;  8(2/0)
  movea.w    -(a0),a0                     ; 10(2/0)
  movea.w    i16(a0),a0                   ; 12(3/0)
  movea.w    *+i16(pc),a0                 ; 12(3/0)
  movea.w    i8(a0,d0.w),a0               ; 14(3/0)
  movea.w    i8(a0,a0.w),a0               ; 14(3/0)
  movea.w    i8(a0,d0.l),a0               ; 14(3/0)
  movea.w    i8(a0,a0.l),a0               ; 14(3/0)
  movea.w    *+i8(pc,d0.w),a0             ; 14(3/0)
  movea.w    *+i8(pc,a0.w),a0             ; 14(3/0)
  movea.w    *+i8(pc,d0.l),a0             ; 14(3/0)
  movea.w    *+i8(pc,a0.l),a0             ; 14(3/0)
  movea.w    (xxx).w,a0                   ; 12(3/0)
  movea.w    (xxx).l,a0                   ; 16(4/0)
  movea.w    #i16,a0                      ;  8(2/0)
  movea.l    a0,a0                        ;  4(1/0)
  movea.l    a0,a0                        ;  4(1/0)
  movea.l    (a0),a0                      ; 12(3/0)
  movea.l    (a0)+,a0                     ; 12(3/0)
  movea.l    -(a0),a0                     ; 14(3/0)
  movea.l    i16(a0),a0                   ; 16(4/0)
  movea.l    *+i16(pc),a0                 ; 16(4/0)
  movea.l    i8(a0,d0.w),a0               ; 18(4/0)
  movea.l    i8(a0,a0.w),a0               ; 18(4/0)
  movea.l    i8(a0,d0.l),a0               ; 18(4/0)
  movea.l    i8(a0,a0.l),a0               ; 18(4/0)
  movea.l    *+i8(pc,d0.w),a0             ; 18(4/0)
  movea.l    *+i8(pc,a0.w),a0             ; 18(4/0)
  movea.l    *+i8(pc,d0.l),a0             ; 18(4/0)
  movea.l    *+i8(pc,a0.l),a0             ; 18(4/0)
  movea.l    (xxx).w,a0                   ; 16(4/0)
  movea.l    (xxx).l,a0                   ; 20(5/0)
  movea.l    #i32,a0                      ; 12(3/0)
  move.w     a0,a0                        ;  4(1/0)
  move.w     a0,a0                        ;  4(1/0)
  move.w     (a0),a0                      ;  8(2/0)
  move.w     (a0)+,a0                     ;  8(2/0)
  move.w     -(a0),a0                     ; 10(2/0)
  move.w     i16(a0),a0                   ; 12(3/0)
  move.w     *+i16(pc),a0                 ; 12(3/0)
  move.w     i8(a0,d0.w),a0               ; 14(3/0)
  move.w     i8(a0,a0.w),a0               ; 14(3/0)
  move.w     i8(a0,d0.l),a0               ; 14(3/0)
  move.w     i8(a0,a0.l),a0               ; 14(3/0)
  move.w     *+i8(pc,d0.w),a0             ; 14(3/0)
  move.w     *+i8(pc,a0.w),a0             ; 14(3/0)
  move.w     *+i8(pc,d0.l),a0             ; 14(3/0)
  move.w     *+i8(pc,a0.l),a0             ; 14(3/0)
  move.w     (xxx).w,a0                   ; 12(3/0)
  move.w     (xxx).l,a0                   ; 16(4/0)
  move.w     #i16,a0                      ;  8(2/0)
  move.l     a0,a0                        ;  4(1/0)
  move.l     a0,a0                        ;  4(1/0)
  move.l     (a0),a0                      ; 12(3/0)
  move.l     (a0)+,a0                     ; 12(3/0)
  move.l     -(a0),a0                     ; 14(3/0)
  move.l     i16(a0),a0                   ; 16(4/0)
  move.l     *+i16(pc),a0                 ; 16(4/0)
  move.l     i8(a0,d0.w),a0               ; 18(4/0)
  move.l     i8(a0,a0.w),a0               ; 18(4/0)
  move.l     i8(a0,d0.l),a0               ; 18(4/0)
  move.l     i8(a0,a0.l),a0               ; 18(4/0)
  move.l     *+i8(pc,d0.w),a0             ; 18(4/0)
  move.l     *+i8(pc,a0.w),a0             ; 18(4/0)
  move.l     *+i8(pc,d0.l),a0             ; 18(4/0)
  move.l     *+i8(pc,a0.l),a0             ; 18(4/0)
  move.l     (xxx).w,a0                   ; 16(4/0)
  move.l     (xxx).l,a0                   ; 20(5/0)
  move.l     #i32,a0                      ; 12(3/0)
; =============================================================================
; Line %0100
; =============================================================================
  clr.b      d0                           ;  4(1/0) +  0(0/0) =  4(1/0)
  clr.b      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)
  clr.b      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)
  clr.b      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)
  clr.b      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)
  clr.b      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  clr.b      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  clr.b      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  clr.b      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  clr.b      (xxx).w                      ;  8(1/1) +  8(2/0) = 16(3/1)
  clr.b      (xxx).l                      ;  8(1/1) + 12(3/0) = 20(4/1)
  clr.w      d0                           ;  4(1/0) +  0(0/0) =  4(1/0)
  clr.w      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)
  clr.w      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)
  clr.w      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)
  clr.w      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)
  clr.w      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  clr.w      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  clr.w      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  clr.w      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  clr.w      (xxx).w                      ;  8(1/1) +  8(2/0) = 16(3/1)
  clr.w      (xxx).l                      ;  8(1/1) + 12(3/0) = 20(4/1)
  clr.l      d0                           ;  6(1/0) +  0(0/0) =  6(1/0)
  clr.l      (a0)                         ; 12(1/2) +  8(2/0) = 20(3/2)
  clr.l      (a0)+                        ; 12(1/2) +  8(2/0) = 20(3/2)
  clr.l      -(a0)                        ; 12(1/2) + 10(2/0) = 22(3/2)
  clr.l      i16(a0)                      ; 12(1/2) + 12(3/0) = 24(4/2)
  clr.l      i8(a0,d0.w)                  ; 12(1/2) + 14(3/0) = 26(4/2)
  clr.l      i8(a0,a0.w)                  ; 12(1/2) + 14(3/0) = 26(4/2)
  clr.l      i8(a0,d0.l)                  ; 12(1/2) + 14(3/0) = 26(4/2)
  clr.l      i8(a0,a0.l)                  ; 12(1/2) + 14(3/0) = 26(4/2)
  clr.l      (xxx).w                      ; 12(1/2) + 12(3/0) = 24(4/2)
  clr.l      (xxx).l                      ; 12(1/2) + 16(4/0) = 28(5/2)
	; -------------------------------------------------------------------------
  neg.b      d0                           ;  4(1/0) +  0(0/0) =  4(1/0)
  neg.b      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)
  neg.b      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)
  neg.b      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)
  neg.b      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)
  neg.b      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  neg.b      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  neg.b      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  neg.b      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  neg.b      (xxx).w                      ;  8(1/1) +  8(2/0) = 16(3/1)
  neg.b      (xxx).l                      ;  8(1/1) + 12(3/0) = 20(4/1)
  neg.w      d0                           ;  4(1/0) +  0(0/0) =  4(1/0)
  neg.w      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)
  neg.w      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)
  neg.w      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)
  neg.w      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)
  neg.w      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  neg.w      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  neg.w      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  neg.w      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  neg.w      (xxx).w                      ;  8(1/1) +  8(2/0) = 16(3/1)
  neg.w      (xxx).l                      ;  8(1/1) + 12(3/0) = 20(4/1)
  neg.l      d0                           ;  6(1/0) +  0(0/0) =  6(1/0)
  neg.l      (a0)                         ; 12(1/2) +  8(2/0) = 20(3/2)
  neg.l      (a0)+                        ; 12(1/2) +  8(2/0) = 20(3/2)
  neg.l      -(a0)                        ; 12(1/2) + 10(2/0) = 22(3/2)
  neg.l      i16(a0)                      ; 12(1/2) + 12(3/0) = 24(4/2)
  neg.l      i8(a0,d0.w)                  ; 12(1/2) + 14(3/0) = 26(4/2)
  neg.l      i8(a0,a0.w)                  ; 12(1/2) + 14(3/0) = 26(4/2)
  neg.l      i8(a0,d0.l)                  ; 12(1/2) + 14(3/0) = 26(4/2)
  neg.l      i8(a0,a0.l)                  ; 12(1/2) + 14(3/0) = 26(4/2)
  neg.l      (xxx).w                      ; 12(1/2) + 12(3/0) = 24(4/2)
  neg.l      (xxx).l                      ; 12(1/2) + 16(4/0) = 28(5/2)
	; -------------------------------------------------------------------------
  negx.b     d0                           ;  4(1/0) +  0(0/0) =  4(1/0)
  negx.b     (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)
  negx.b     (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)
  negx.b     -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)
  negx.b     i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)
  negx.b     i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  negx.b     i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  negx.b     i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  negx.b     i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  negx.b     (xxx).w                      ;  8(1/1) +  8(2/0) = 16(3/1)
  negx.b     (xxx).l                      ;  8(1/1) + 12(3/0) = 20(4/1)
  negx.w     d0                           ;  4(1/0) +  0(0/0) =  4(1/0)
  negx.w     (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)
  negx.w     (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)
  negx.w     -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)
  negx.w     i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)
  negx.w     i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  negx.w     i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  negx.w     i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  negx.w     i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  negx.w     (xxx).w                      ;  8(1/1) +  8(2/0) = 16(3/1)
  negx.w     (xxx).l                      ;  8(1/1) + 12(3/0) = 20(4/1)
  negx.l     d0                           ;  6(1/0) +  0(0/0) =  6(1/0)
  negx.l     (a0)                         ; 12(1/2) +  8(2/0) = 20(3/2)
  negx.l     (a0)+                        ; 12(1/2) +  8(2/0) = 20(3/2)
  negx.l     -(a0)                        ; 12(1/2) + 10(2/0) = 22(3/2)
  negx.l     i16(a0)                      ; 12(1/2) + 12(3/0) = 24(4/2)
  negx.l     i8(a0,d0.w)                  ; 12(1/2) + 14(3/0) = 26(4/2)
  negx.l     i8(a0,a0.w)                  ; 12(1/2) + 14(3/0) = 26(4/2)
  negx.l     i8(a0,d0.l)                  ; 12(1/2) + 14(3/0) = 26(4/2)
  negx.l     i8(a0,a0.l)                  ; 12(1/2) + 14(3/0) = 26(4/2)
  negx.l     (xxx).w                      ; 12(1/2) + 12(3/0) = 24(4/2)
  negx.l     (xxx).l                      ; 12(1/2) + 16(4/0) = 28(5/2)
	; -------------------------------------------------------------------------
  not.b      d0                           ;  4(1/0) +  0(0/0) =  4(1/0)
  not.b      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)
  not.b      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)
  not.b      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)
  not.b      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)
  not.b      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  not.b      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  not.b      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  not.b      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  not.b      (xxx).w                      ;  8(1/1) +  8(2/0) = 16(3/1)
  not.b      (xxx).l                      ;  8(1/1) + 12(3/0) = 20(4/1)
  not.w      d0                           ;  4(1/0) +  0(0/0) =  4(1/0)
  not.w      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)
  not.w      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)
  not.w      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)
  not.w      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)
  not.w      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  not.w      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  not.w      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  not.w      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  not.w      (xxx).w                      ;  8(1/1) +  8(2/0) = 16(3/1)
  not.w      (xxx).l                      ;  8(1/1) + 12(3/0) = 20(4/1)
  not.l      d0                           ;  6(1/0) +  0(0/0) =  6(1/0)
  not.l      (a0)                         ; 12(1/2) +  8(2/0) = 20(3/2)
  not.l      (a0)+                        ; 12(1/2) +  8(2/0) = 20(3/2)
  not.l      -(a0)                        ; 12(1/2) + 10(2/0) = 22(3/2)
  not.l      i16(a0)                      ; 12(1/2) + 12(3/0) = 24(4/2)
  not.l      i8(a0,d0.w)                  ; 12(1/2) + 14(3/0) = 26(4/2)
  not.l      i8(a0,a0.w)                  ; 12(1/2) + 14(3/0) = 26(4/2)
  not.l      i8(a0,d0.l)                  ; 12(1/2) + 14(3/0) = 26(4/2)
  not.l      i8(a0,a0.l)                  ; 12(1/2) + 14(3/0) = 26(4/2)
  not.l      (xxx).w                      ; 12(1/2) + 12(3/0) = 24(4/2)
  not.l      (xxx).l                      ; 12(1/2) + 16(4/0) = 28(5/2)
	; -------------------------------------------------------------------------
  move.w     d0,ccr                       ; 12(1/0) +  0(0/0) = 12(1/0)
  move.w     (a0),ccr                     ; 12(1/0) +  4(1/0) = 16(2/0)
  move.w     (a0)+,ccr                    ; 12(1/0) +  4(1/0) = 16(2/0)
  move.w     -(a0),ccr                    ; 12(1/0) +  6(1/0) = 18(2/0)
  move.w     i16(a0),ccr                  ; 12(1/0) +  8(2/0) = 20(3/0)
  move.w     *+i16(pc),ccr                ; 12(1/0) +  8(2/0) = 20(3/0)
  move.w     i8(a0,d0.w),ccr              ; 12(1/0) + 10(2/0) = 22(3/0)
  move.w     i8(a0,a0.w),ccr              ; 12(1/0) + 10(2/0) = 22(3/0)
  move.w     i8(a0,d0.l),ccr              ; 12(1/0) + 10(2/0) = 22(3/0)
  move.w     i8(a0,a0.l),ccr              ; 12(1/0) + 10(2/0) = 22(3/0)
  move.w     *+i8(pc,d0.w),ccr            ; 12(1/0) + 10(2/0) = 22(3/0)
  move.w     *+i8(pc,a0.w),ccr            ; 12(1/0) + 10(2/0) = 22(3/0)
  move.w     *+i8(pc,d0.l),ccr            ; 12(1/0) + 10(2/0) = 22(3/0)
  move.w     *+i8(pc,a0.l),ccr            ; 12(1/0) + 10(2/0) = 22(3/0)
  move.w     (xxx).w,ccr                  ; 12(1/0) +  8(2/0) = 20(3/0)
  move.w     (xxx).l,ccr                  ; 12(1/0) + 12(3/0) = 24(4/0)
  move.w     #i8,ccr                      ; 12(1/0) +  4(1/0) = 16(2/0)
	; -------------------------------------------------------------------------
  move.w     d0,sr                        ; 12(1/0) +  0(0/0) = 12(1/0)
  move.w     (a0),sr                      ; 12(1/0) +  4(1/0) = 16(2/0)
  move.w     (a0)+,sr                     ; 12(1/0) +  4(1/0) = 16(2/0)
  move.w     -(a0),sr                     ; 12(1/0) +  6(1/0) = 18(2/0)
  move.w     i16(a0),sr                   ; 12(1/0) +  8(2/0) = 20(3/0)
  move.w     *+i16(pc),sr                 ; 12(1/0) +  8(2/0) = 20(3/0)
  move.w     i8(a0,d0.w),sr               ; 12(1/0) + 10(2/0) = 22(3/0)
  move.w     i8(a0,a0.w),sr               ; 12(1/0) + 10(2/0) = 22(3/0)
  move.w     i8(a0,d0.l),sr               ; 12(1/0) + 10(2/0) = 22(3/0)
  move.w     i8(a0,a0.l),sr               ; 12(1/0) + 10(2/0) = 22(3/0)
  move.w     *+i8(pc,d0.w),sr             ; 12(1/0) + 10(2/0) = 22(3/0)
  move.w     *+i8(pc,a0.w),sr             ; 12(1/0) + 10(2/0) = 22(3/0)
  move.w     *+i8(pc,d0.l),sr             ; 12(1/0) + 10(2/0) = 22(3/0)
  move.w     *+i8(pc,a0.l),sr             ; 12(1/0) + 10(2/0) = 22(3/0)
  move.w     (xxx).w,sr                   ; 12(1/0) +  8(2/0) = 20(3/0)
  move.w     (xxx).l,sr                   ; 12(1/0) + 12(3/0) = 24(4/0)
  move.w     #i16,sr                      ; 12(1/0) +  4(1/0) = 16(2/0)
	; -------------------------------------------------------------------------
  nbcd.b     d0                           ;  6(1/0) +  0(0/0) =  6(1/0)
  nbcd.b     (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)
  nbcd.b     (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)
  nbcd.b     -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)
  nbcd.b     i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)
  nbcd.b     i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  nbcd.b     i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  nbcd.b     i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  nbcd.b     i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  nbcd.b     (xxx).w                      ;  8(1/1) +  8(2/0) = 16(3/1)
  nbcd.b     (xxx).l                      ;  8(1/1) + 12(3/0) = 20(4/1)
	; -------------------------------------------------------------------------
  pea        (a0)                         ; 12(1/2)
  pea        i16(a0)                      ; 16(2/2)
  pea        *+i16(pc)                    ; 16(2/2)
  pea        i8(a0,d0.w)                  ; 20(2/2)
  pea        i8(a0,a0.w)                  ; 20(2/2)
  pea        i8(a0,d0.l)                  ; 20(2/2)
  pea        i8(a0,a0.l)                  ; 20(2/2)
  pea        *+i8(pc,d0.w)                ; 20(2/2)
  pea        *+i8(pc,a0.w)                ; 20(2/2)
  pea        *+i8(pc,d0.l)                ; 20(2/2)
  pea        *+i8(pc,a0.l)                ; 20(2/2)
  pea        (xxx).w                      ; 16(2/2)
  pea        (xxx).l                      ; 20(3/2)
	; -------------------------------------------------------------------------
  swap       d0                           ;  4(1/0)
; 	; -------------------------------------------------------------------------
  movem.w    (a0),d0-a0/a3/a5             ; 12+4m(3+m/0)
  movem.w    (a0)+,d0-a0/a3/a5            ; 12+4m(3+m/0)
  movem.w    i16(a0),d0-a0/a3/a5          ; 16+4m(4+m/0)
  movem.w    *+i16(pc),d0-a0/a3/a5        ; 16+4m(4+m/0)
  movem.w    i8(a0,d0.w),d0-a0/a3/a5      ; 18+4m(4+m/0)
  movem.w    i8(a0,a0.w),d0-a0/a3/a5      ; 18+4m(4+m/0)
  movem.w    i8(a0,d0.l),d0-a0/a3/a5      ; 18+4m(4+m/0)
  movem.w    i8(a0,a0.l),d0-a0/a3/a5      ; 18+4m(4+m/0)
  movem.w    *+i8(pc,d0.w),d0-a0/a3/a5    ; 18+4m(4+m/0)
  movem.w    *+i8(pc,a0.w),d0-a0/a3/a5    ; 18+4m(4+m/0)
  movem.w    *+i8(pc,d0.l),d0-a0/a3/a5    ; 18+4m(4+m/0)
  movem.w    *+i8(pc,a0.l),d0-a0/a3/a5    ; 18+4m(4+m/0)
  movem.w    (xxx).w,d0-a0/a3/a5          ; 16+4m(4+m/0)
  movem.w    (xxx).l,d0-a0/a3/a5          ; 20+4m(5+m/0)
  movem.l    (a0),d0-a0/a3/a5             ; 12+8m(3+2m/0)
  movem.l    (a0)+,d0-a0/a3/a5            ; 12+8m(3+2m/0)
  movem.l    i16(a0),d0-a0/a3/a5          ; 16+8m(4+2m/0)
  movem.l    *+i16(pc),d0-a0/a3/a5        ; 16+8m(4+2m/0)
  movem.l    i8(a0,d0.w),d0-a0/a3/a5      ; 18+8m(4+2m/0)
  movem.l    i8(a0,a0.w),d0-a0/a3/a5      ; 18+8m(4+2m/0)
  movem.l    i8(a0,d0.l),d0-a0/a3/a5      ; 18+8m(4+2m/0)
  movem.l    i8(a0,a0.l),d0-a0/a3/a5      ; 18+8m(4+2m/0)
  movem.l    *+i8(pc,d0.w),d0-a0/a3/a5    ; 18+8m(4+2m/0)
  movem.l    *+i8(pc,a0.w),d0-a0/a3/a5    ; 18+8m(4+2m/0)
  movem.l    *+i8(pc,d0.l),d0-a0/a3/a5    ; 18+8m(4+2m/0)
  movem.l    *+i8(pc,a0.l),d0-a0/a3/a5    ; 18+8m(4+2m/0)
  movem.l    (xxx).w,d0-a0/a3/a5          ; 16+8m(4+2m/0)
  movem.l    (xxx).l,d0-a0/a3/a5          ; 20+8m(5+2m/0)
  movem.w    d0-a0/a3/a5,(a0)             ;  8+4m(2/m)
  movem.w    d0-a0/a3/a5,-(a0)            ;  8+4m(2/m)
  movem.w    d0-a0/a3/a5,i16(a0)          ; 12+4m(3/m)
  movem.w    d0-a0/a3/a5,i8(a0,d0.w)      ; 14+4m(3/m)
  movem.w    d0-a0/a3/a5,i8(a0,a0.w)      ; 14+4m(3/m)
  movem.w    d0-a0/a3/a5,i8(a0,d0.l)      ; 14+4m(3/m)
  movem.w    d0-a0/a3/a5,i8(a0,a0.l)      ; 14+4m(3/m)
  movem.w    d0-a0/a3/a5,(xxx).w          ; 12+4m(3/m)
  movem.w    d0-a0/a3/a5,(xxx).l          ; 16+4m(4/m)
  movem.l    d0-a0/a3/a5,(a0)             ;  8+8m(2/2m)
  movem.l    d0-a0/a3/a5,-(a0)            ;  8+8m(2/2m)
  movem.l    d0-a0/a3/a5,i16(a0)          ; 12+8m(3/2m)
  movem.l    d0-a0/a3/a5,i8(a0,d0.w)      ; 14+8m(3/2m)
  movem.l    d0-a0/a3/a5,i8(a0,a0.w)      ; 14+8m(3/2m)
  movem.l    d0-a0/a3/a5,i8(a0,d0.l)      ; 14+8m(3/2m)
  movem.l    d0-a0/a3/a5,i8(a0,a0.l)      ; 14+8m(3/2m)
  movem.l    d0-a0/a3/a5,(xxx).w          ; 12+8m(3/2m)
  movem.l    d0-a0/a3/a5,(xxx).l          ; 16+8m(4/2m)
	; -------------------------------------------------------------------------
  ext.w      d0                           ;  4(1/0)
  ext.l      d0                           ;  4(1/0)
	; -------------------------------------------------------------------------
  tst.b      d0                           ;  4(1/0) +  0(0/0) =  4(1/0)
  tst.b      (a0)                         ;  4(1/0) +  4(1/0) =  8(2/0)
  tst.b      (a0)+                        ;  4(1/0) +  4(1/0) =  8(2/0)
  tst.b      -(a0)                        ;  4(1/0) +  6(1/0) = 10(2/0)
  tst.b      i16(a0)                      ;  4(1/0) +  8(2/0) = 12(3/0)
  tst.b      i8(a0,d0.w)                  ;  4(1/0) + 10(2/0) = 14(3/0)
  tst.b      i8(a0,a0.w)                  ;  4(1/0) + 10(2/0) = 14(3/0)
  tst.b      i8(a0,d0.l)                  ;  4(1/0) + 10(2/0) = 14(3/0)
  tst.b      i8(a0,a0.l)                  ;  4(1/0) + 10(2/0) = 14(3/0)
  tst.b      (xxx).W                      ;  4(1/0) +  8(2/0) = 12(3/0)
  tst.b      (xxx).L                      ;  4(1/0) + 12(3/0) = 16(4/0)
  tst.w      d0                           ;  4(1/0) +  0(0/0) =  4(1/0)
  tst.w      (a0)                         ;  4(1/0) +  4(1/0) =  8(2/0)
  tst.w      (a0)+                        ;  4(1/0) +  4(1/0) =  8(2/0)
  tst.w      -(a0)                        ;  4(1/0) +  6(1/0) = 10(2/0)
  tst.w      i16(a0)                      ;  4(1/0) +  8(2/0) = 12(3/0)
  tst.w      i8(a0,d0.w)                  ;  4(1/0) + 10(2/0) = 14(3/0)
  tst.w      i8(a0,a0.w)                  ;  4(1/0) + 10(2/0) = 14(3/0)
  tst.w      i8(a0,d0.l)                  ;  4(1/0) + 10(2/0) = 14(3/0)
  tst.w      i8(a0,a0.l)                  ;  4(1/0) + 10(2/0) = 14(3/0)
  tst.w      (xxx).W                      ;  4(1/0) +  8(2/0) = 12(3/0)
  tst.w      (xxx).L                      ;  4(1/0) + 12(3/0) = 16(4/0)
  tst.l      d0                           ;  4(1/0) +  0(0/0) =  4(1/0)
  tst.l      (a0)                         ;  4(1/0) +  8(2/0) = 12(3/0)
  tst.l      (a0)+                        ;  4(1/0) +  8(2/0) = 12(3/0)
  tst.l      -(a0)                        ;  4(1/0) + 10(2/0) = 14(3/0)
  tst.l      i16(a0)                      ;  4(1/0) + 12(3/0) = 16(4/0)
  tst.l      i8(a0,d0.w)                  ;  4(1/0) + 14(3/0) = 18(4/0)
  tst.l      i8(a0,a0.w)                  ;  4(1/0) + 14(3/0) = 18(4/0)
  tst.l      i8(a0,d0.l)                  ;  4(1/0) + 14(3/0) = 18(4/0)
  tst.l      i8(a0,a0.l)                  ;  4(1/0) + 14(3/0) = 18(4/0)
  tst.l      (xxx).W                      ;  4(1/0) + 12(3/0) = 16(4/0)
  tst.l      (xxx).L                      ;  4(1/0) + 16(4/0) = 20(5/0)
	; -------------------------------------------------------------------------
  tas.b      d0                           ;  4(1/0) +  0(0/0) =  4(1/0)
  tas.b      (a0)                         ; 10(1/1) +  4(1/0) = 14(2/1)
  tas.b      (a0)+                        ; 10(1/1) +  4(1/0) = 14(2/1)
  tas.b      -(a0)                        ; 10(1/1) +  6(1/0) = 16(2/1)
  tas.b      i16(a0)                      ; 10(1/1) +  8(2/0) = 18(3/1)
  tas.b      i8(a0,d0.w)                  ; 10(1/1) + 10(2/0) = 20(3/1)
  tas.b      i8(a0,a0.w)                  ; 10(1/1) + 10(2/0) = 20(3/1)
  tas.b      i8(a0,d0.l)                  ; 10(1/1) + 10(2/0) = 20(3/1)
  tas.b      i8(a0,a0.l)                  ; 10(1/1) + 10(2/0) = 20(3/1)
  tas.b      (xxx).W                      ; 10(1/1) +  8(1/0) = 18(2/1)
  tas.b      (xxx).L                      ; 10(1/1) + 12(2/0) = 22(3/1)
	; -------------------------------------------------------------------------
  chk.w      d0,d0                        ; 10(1/0) +  0(0/0) = 10(1/0)	; No trap
  chk.w      (a0),d0                      ; 10(1/0) +  4(1/0) = 14(2/0)	; No trap
  chk.w      (a0)+,d0                     ; 10(1/0) +  4(1/0) = 14(2/0)	; No trap
  chk.w      -(a0),d0                     ; 10(1/0) +  6(1/0) = 16(2/0)	; No trap
  chk.w      i16(a0),d0                   ; 10(1/0) +  8(2/0) = 18(3/0)	; No trap
  chk.w      *+i16(pc),d0                 ; 10(1/0) +  8(2/0) = 18(3/0)	; No trap
  chk.w      i8(a0,d0.w),d0               ; 10(1/0) + 10(2/0) = 20(3/0)	; No trap
  chk.w      i8(a0,a0.w),d0               ; 10(1/0) + 10(2/0) = 20(3/0)	; No trap
  chk.w      i8(a0,d0.l),d0               ; 10(1/0) + 10(2/0) = 20(3/0)	; No trap
  chk.w      i8(a0,a0.l),d0               ; 10(1/0) + 10(2/0) = 20(3/0)	; No trap
  chk.w      *+i8(pc,d0.w),d0             ; 10(1/0) + 10(2/0) = 20(3/0)	; No trap
  chk.w      *+i8(pc,a0.w),d0             ; 10(1/0) + 10(2/0) = 20(3/0)	; No trap
  chk.w      *+i8(pc,d0.l),d0             ; 10(1/0) + 10(2/0) = 20(3/0)	; No trap
  chk.w      *+i8(pc,a0.l),d0             ; 10(1/0) + 10(2/0) = 20(3/0)	; No trap
  chk.w      (xxx).W,d0                   ; 10(1/0) +  8(2/0) = 18(3/0)	; No trap
  chk.w      (xxx).L,d0                   ; 10(1/0) + 12(2/0) = 22(3/0)	; No trap
  chk.w      #255,d0                      ; 10(1/0) +  4(1/0) = 14(2/0)	; No trap
  chk.w      d0,d0                        ; 38(5/3) +  0(0/0) = 38(5/3)	; Trap, d0 > <ea>
  chk.w      (a0),d0                      ; 38(5/3) +  4(1/0) = 42(6/3)	; Trap, d0 > <ea>
  chk.w      (a0)+,d0                     ; 38(5/3) +  4(1/0) = 42(6/3)	; Trap, d0 > <ea>
  chk.w      -(a0),d0                     ; 38(5/3) +  6(1/0) = 44(6/3)	; Trap, d0 > <ea>
  chk.w      i16(a0),d0                   ; 38(5/3) +  8(2/0) = 46(7/3)	; Trap, d0 > <ea>
  chk.w      *+i16(pc),d0                 ; 38(5/3) +  8(2/0) = 46(7/3)	; Trap, d0 > <ea>
  chk.w      i8(a0,d0.w),d0               ; 38(5/3) + 10(2/0) = 48(7/3)	; Trap, d0 > <ea>
  chk.w      i8(a0,a0.w),d0               ; 38(5/3) + 10(2/0) = 48(7/3)	; Trap, d0 > <ea>
  chk.w      i8(a0,d0.l),d0               ; 38(5/3) + 10(2/0) = 48(7/3)	; Trap, d0 > <ea>
  chk.w      i8(a0,a0.l),d0               ; 38(5/3) + 10(2/0) = 48(7/3)	; Trap, d0 > <ea>
  chk.w      *+i8(pc,d0.w),d0             ; 38(5/3) + 10(2/0) = 48(7/3)	; Trap, d0 > <ea>
  chk.w      *+i8(pc,a0.w),d0             ; 38(5/3) + 10(2/0) = 48(7/3)	; Trap, d0 > <ea>
  chk.w      *+i8(pc,d0.l),d0             ; 38(5/3) + 10(2/0) = 48(7/3)	; Trap, d0 > <ea>
  chk.w      *+i8(pc,a0.l),d0             ; 38(5/3) + 10(2/0) = 48(7/3)	; Trap, d0 > <ea>
  chk.w      (xxx).W,d0                   ; 38(5/3) +  8(2/0) = 46(7/3)	; Trap, d0 > <ea>
  chk.w      (xxx).L,d0                   ; 38(5/3) + 12(2/0) = 50(7/3)	; Trap, d0 > <ea>
  chk.w      #255,d0                      ; 38(5/3) +  4(1/0) = 42(6/3)	; Trap, d0 > <ea>
  chk.w      d0,d0                        ; 40(5/3) +  0(0/0) = 40(5/3)	; Trap, d0 < 0
  chk.w      (a0),d0                      ; 40(5/3) +  4(1/0) = 44(6/3)	; Trap, d0 < 0
  chk.w      (a0)+,d0                     ; 40(5/3) +  4(1/0) = 44(6/3)	; Trap, d0 < 0
  chk.w      -(a0),d0                     ; 40(5/3) +  6(1/0) = 46(6/3)	; Trap, d0 < 0
  chk.w      i16(a0),d0                   ; 40(5/3) +  8(2/0) = 48(7/3)	; Trap, d0 < 0
  chk.w      *+i16(pc),d0                 ; 40(5/3) +  8(2/0) = 48(7/3)	; Trap, d0 < 0
  chk.w      i8(a0,d0.w),d0               ; 40(5/3) + 10(2/0) = 50(7/3)	; Trap, d0 < 0
  chk.w      i8(a0,a0.w),d0               ; 40(5/3) + 10(2/0) = 50(7/3)	; Trap, d0 < 0
  chk.w      i8(a0,d0.l),d0               ; 40(5/3) + 10(2/0) = 50(7/3)	; Trap, d0 < 0
  chk.w      i8(a0,a0.l),d0               ; 40(5/3) + 10(2/0) = 50(7/3)	; Trap, d0 < 0
  chk.w      *+i8(pc,d0.w),d0             ; 40(5/3) + 10(2/0) = 50(7/3)	; Trap, d0 < 0
  chk.w      *+i8(pc,a0.w),d0             ; 40(5/3) + 10(2/0) = 50(7/3)	; Trap, d0 < 0
  chk.w      *+i8(pc,d0.l),d0             ; 40(5/3) + 10(2/0) = 50(7/3)	; Trap, d0 < 0
  chk.w      *+i8(pc,a0.l),d0             ; 40(5/3) + 10(2/0) = 50(7/3)	; Trap, d0 < 0
  chk.w      (xxx).W,d0                   ; 40(5/3) +  8(2/0) = 48(7/3)	; Trap, d0 < 0
  chk.w      (xxx).L,d0                   ; 40(5/3) + 12(2/0) = 52(7/3)	; Trap, d0 < 0
  chk.w      #255,d0                      ; 40(5/3) +  4(1/0) = 44(6/3)	; Trap, d0 < 0
	; -------------------------------------------------------------------------
  lea        (a0),a0                      ;  4(1/0)
  lea        i16(a0),a0                   ;  8(2/0)
  lea        *+i16(pc),a0                 ;  8(2/0)
  lea        i8(a0,d0.w),a0               ; 12(2/0)
  lea        i8(a0,a0.w),a0               ; 12(2/0)
  lea        i8(a0,d0.l),a0               ; 12(2/0)
  lea        i8(a0,a0.l),a0               ; 12(2/0)
  lea        *+i8(pc,d0.w),a0             ; 12(2/0)
  lea        *+i8(pc,a0.w),a0             ; 12(2/0)
  lea        *+i8(pc,d0.l),a0             ; 12(2/0)
  lea        *+i8(pc,a0.l),a0             ; 12(2/0)
  lea        (xxx).w,a0                   ;  8(2/0)
  lea        (xxx).l,a0                   ; 12(3/0)
	; -------------------------------------------------------------------------
  jsr        (a0)                         ; 16(2/2)
  jsr        i16(a0)                      ; 18(2/2)
  jsr        *+i16(pc)                    ; 18(2/2)
  jsr        i8(a0,d0.w)                  ; 22(2/2)
  jsr        i8(a0,a0.w)                  ; 22(2/2)
  jsr        i8(a0,d0.l)                  ; 22(2/2)
  jsr        i8(a0,a0.l)                  ; 22(2/2)
  jsr        *+i8(pc,d0.w)                ; 22(2/2)
  jsr        *+i8(pc,a0.w)                ; 22(2/2)
  jsr        *+i8(pc,d0.l)                ; 22(2/2)
  jsr        *+i8(pc,a0.l)                ; 22(2/2)
  jsr        (xxx).w                      ; 18(2/2)
  jsr        (xxx).l                      ; 20(3/2)
	; -------------------------------------------------------------------------
  jmp        (a0)                         ;  8(2/0)
  jmp        i16(a0)                      ; 10(2/0)
  jmp        *+i16(pc)                    ; 10(2/0)
  jmp        i8(a0,d0.w)                  ; 14(2/0)
  jmp        i8(a0,a0.w)                  ; 14(2/0)
  jmp        i8(a0,d0.l)                  ; 14(2/0)
  jmp        i8(a0,a0.l)                  ; 14(2/0)
  jmp        *+i8(pc,d0.w)                ; 14(2/0)
  jmp        *+i8(pc,a0.w)                ; 14(2/0)
  jmp        *+i8(pc,d0.l)                ; 14(2/0)
  jmp        *+i8(pc,a0.l)                ; 14(2/0)
  jmp        (xxx).w                      ; 10(2/0)
  jmp        (xxx).l                      ; 12(3/0)
	; -------------------------------------------------------------------------
  move.l     a0,usp                       ;  4(1/0)
  move.l     usp,a0                       ;  4(1/0)
; 	; -------------------------------------------------------------------------
  reset                                   ; 132(1/0)
	; -------------------------------------------------------------------------
  nop                                     ;  4(1/0)
	; -------------------------------------------------------------------------
  stop       #i16                         ;  4(1/0)
	; -------------------------------------------------------------------------
  rte                                     ; 20(5/0)
  rtr                                     ; 20(5/0)
	; -------------------------------------------------------------------------
  rts                                     ; 16(4/0)
	; -------------------------------------------------------------------------
  trapv                                   ;  4(1/0)	; No trap
  trapv                                   ; 34(5/3)	; Trap
	; -------------------------------------------------------------------------
  link       a0,#i16                      ; 16(2/2)
	; -------------------------------------------------------------------------
  unlk       a0                           ; 12(3/0)
	; -------------------------------------------------------------------------
  illegal                                 ; 34(4/3)
	; -------------------------------------------------------------------------
  trap       #i3                          ; 34(4/3)
; =============================================================================
; Line %0101
; =============================================================================
	; -------------------------------------------------------------------------
  addq.b     #i3,d0                       ;  4(1/0) +  0(0/0) =  4(1/0)
  addq.b     #i3,(a0)                     ;  8(1/1) +  4(1/0) = 12(2/1)
  addq.b     #i3,(a0)+                    ;  8(1/1) +  4(1/0) = 12(2/1)
  addq.b     #i3,-(a0)                    ;  8(1/1) +  6(1/0) = 14(2/1)
  addq.b     #i3,i16(a0)                  ;  8(1/1) +  8(2/0) = 16(3/1)
  addq.b     #i3,i8(a0,d0.w)              ;  8(1/1) + 10(2/0) = 18(3/1)
  addq.b     #i3,i8(a0,a0.w)              ;  8(1/1) + 10(2/0) = 18(3/1)
  addq.b     #i3,i8(a0,d0.l)              ;  8(1/1) + 10(2/0) = 18(3/1)
  addq.b     #i3,i8(a0,a0.l)              ;  8(1/1) + 10(2/0) = 18(3/1)
  addq.b     #i3,(xxx).w                  ;  8(1/1) +  8(2/0) = 16(3/1)
  addq.b     #i3,(xxx).l                  ;  8(1/1) + 12(3/0) = 20(4/1)
  addq.w     #i3,d0                       ;  4(1/0) +  0(0/0) =  4(1/0)
  addq.w     #i3,a0                       ;  8(1/0) +  0(0/0) =  8(1/0)
  addq.w     #i3,(a0)                     ;  8(1/1) +  4(1/0) = 12(2/1)
  addq.w     #i3,(a0)+                    ;  8(1/1) +  4(1/0) = 12(2/1)
  addq.w     #i3,-(a0)                    ;  8(1/1) +  6(1/0) = 14(2/1)
  addq.w     #i3,i16(a0)                  ;  8(1/1) +  8(2/0) = 16(3/1)
  addq.w     #i3,i8(a0,d0.w)              ;  8(1/1) + 10(2/0) = 18(3/1)
  addq.w     #i3,i8(a0,a0.w)              ;  8(1/1) + 10(2/0) = 18(3/1)
  addq.w     #i3,i8(a0,d0.l)              ;  8(1/1) + 10(2/0) = 18(3/1)
  addq.w     #i3,i8(a0,a0.l)              ;  8(1/1) + 10(2/0) = 18(3/1)
  addq.w     #i3,(xxx).w                  ;  8(1/1) +  8(2/0) = 16(3/1)
  addq.w     #i3,(xxx).l                  ;  8(1/1) + 12(3/0) = 20(4/1)
  addq.l     #i3,d0                       ;  8(1/0) +  0(0/0) =  8(1/0)
  addq.l     #i3,a0                       ;  8(1/0) +  0(0/0) =  8(1/0)
  addq.l     #i3,(a0)                     ; 12(1/2) +  8(2/0) = 20(3/2)
  addq.l     #i3,(a0)+                    ; 12(1/2) +  8(2/0) = 20(3/2)
  addq.l     #i3,-(a0)                    ; 12(1/2) + 10(2/0) = 22(3/2)
  addq.l     #i3,i16(a0)                  ; 12(1/2) + 12(3/0) = 24(4/2)
  addq.l     #i3,i8(a0,d0.w)              ; 12(1/2) + 14(3/0) = 26(4/2)
  addq.l     #i3,i8(a0,a0.w)              ; 12(1/2) + 14(3/0) = 26(4/2)
  addq.l     #i3,i8(a0,d0.l)              ; 12(1/2) + 14(3/0) = 26(4/2)
  addq.l     #i3,i8(a0,a0.l)              ; 12(1/2) + 14(3/0) = 26(4/2)
  addq.l     #i3,(xxx).w                  ; 12(1/2) + 12(3/0) = 24(4/2)
  addq.l     #i3,(xxx).l                  ; 12(1/2) + 16(4/0) = 28(5/2)
	; -------------------------------------------------------------------------
  subq.b     #i3,d0                       ;  4(1/0) +  0(0/0) =  4(1/0)
  subq.b     #i3,(a0)                     ;  8(1/1) +  4(1/0) = 12(2/1)
  subq.b     #i3,(a0)+                    ;  8(1/1) +  4(1/0) = 12(2/1)
  subq.b     #i3,-(a0)                    ;  8(1/1) +  6(1/0) = 14(2/1)
  subq.b     #i3,i16(a0)                  ;  8(1/1) +  8(2/0) = 16(3/1)
  subq.b     #i3,i8(a0,d0.w)              ;  8(1/1) + 10(2/0) = 18(3/1)
  subq.b     #i3,i8(a0,a0.w)              ;  8(1/1) + 10(2/0) = 18(3/1)
  subq.b     #i3,i8(a0,d0.l)              ;  8(1/1) + 10(2/0) = 18(3/1)
  subq.b     #i3,i8(a0,a0.l)              ;  8(1/1) + 10(2/0) = 18(3/1)
  subq.b     #i3,(xxx).w                  ;  8(1/1) +  8(2/0) = 16(3/1)
  subq.b     #i3,(xxx).l                  ;  8(1/1) + 12(3/0) = 20(4/1)
  subq.w     #i3,d0                       ;  4(1/0) +  0(0/0) =  4(1/0)
  subq.w     #i3,a0                       ;  8(1/0) +  0(0/0) =  8(1/0)
  subq.w     #i3,(a0)                     ;  8(1/1) +  4(1/0) = 12(2/1)
  subq.w     #i3,(a0)+                    ;  8(1/1) +  4(1/0) = 12(2/1)
  subq.w     #i3,-(a0)                    ;  8(1/1) +  6(1/0) = 14(2/1)
  subq.w     #i3,i16(a0)                  ;  8(1/1) +  8(2/0) = 16(3/1)
  subq.w     #i3,i8(a0,d0.w)              ;  8(1/1) + 10(2/0) = 18(3/1)
  subq.w     #i3,i8(a0,a0.w)              ;  8(1/1) + 10(2/0) = 18(3/1)
  subq.w     #i3,i8(a0,d0.l)              ;  8(1/1) + 10(2/0) = 18(3/1)
  subq.w     #i3,i8(a0,a0.l)              ;  8(1/1) + 10(2/0) = 18(3/1)
  subq.w     #i3,(xxx).w                  ;  8(1/1) +  8(2/0) = 16(3/1)
  subq.w     #i3,(xxx).l                  ;  8(1/1) + 12(3/0) = 20(4/1)
  subq.l     #i3,d0                       ;  8(1/0) +  0(0/0) =  8(1/0)
  subq.l     #i3,a0                       ;  8(1/0) +  0(0/0) =  8(1/0)
  subq.l     #i3,(a0)                     ; 12(1/2) +  8(2/0) = 20(3/2)
  subq.l     #i3,(a0)+                    ; 12(1/2) +  8(2/0) = 20(3/2)
  subq.l     #i3,-(a0)                    ; 12(1/2) + 10(2/0) = 22(3/2)
  subq.l     #i3,i16(a0)                  ; 12(1/2) + 12(3/0) = 24(4/2)
  subq.l     #i3,i8(a0,d0.w)              ; 12(1/2) + 14(3/0) = 26(4/2)
  subq.l     #i3,i8(a0,a0.w)              ; 12(1/2) + 14(3/0) = 26(4/2)
  subq.l     #i3,i8(a0,d0.l)              ; 12(1/2) + 14(3/0) = 26(4/2)
  subq.l     #i3,i8(a0,a0.l)              ; 12(1/2) + 14(3/0) = 26(4/2)
  subq.l     #i3,(xxx).w                  ; 12(1/2) + 12(3/0) = 24(4/2)
  subq.l     #i3,(xxx).l                  ; 12(1/2) + 16(4/0) = 28(5/2)
	; -------------------------------------------------------------------------
; yyy:
  dbt        d0,yyy                       ; 12(2/0)	; Branch not taken, cc true
  dbra       d0,yyy                       ; 10(2/0)	; Branch taken
  dbra       d0,yyy                       ; 14(3/0)	; Branch not taken, counter expired
  dbf        d0,yyy                       ; 10(2/0)	; Branch taken
  dbf        d0,yyy                       ; 14(3/0)	; Branch not taken, counter expired
  dbcc       d0,yyy                       ; 10(2/0)	; Branch taken
  dbcc       d0,yyy                       ; 12(2/0)	; Branch not taken, cc true
  dbcc       d0,yyy                       ; 14(3/0)	; Branch not taken, counter expired
  dbhs       d0,yyy                       ; 10(2/0)	; Branch taken
  dbhs       d0,yyy                       ; 12(2/0)	; Branch not taken, cc true
  dbhs       d0,yyy                       ; 14(3/0)	; Branch not taken, counter expired
  dbcs       d0,yyy                       ; 10(2/0)	; Branch taken
  dbcs       d0,yyy                       ; 12(2/0)	; Branch not taken, cc true
  dbcs       d0,yyy                       ; 14(3/0)	; Branch not taken, counter expired
  dblo       d0,yyy                       ; 10(2/0)	; Branch taken
  dblo       d0,yyy                       ; 12(2/0)	; Branch not taken, cc true
  dblo       d0,yyy                       ; 14(3/0)	; Branch not taken, counter expired
  dbeq       d0,yyy                       ; 10(2/0)	; Branch taken
  dbeq       d0,yyy                       ; 12(2/0)	; Branch not taken, cc true
  dbeq       d0,yyy                       ; 14(3/0)	; Branch not taken, counter expired
  dbge       d0,yyy                       ; 10(2/0)	; Branch taken
  dbge       d0,yyy                       ; 12(2/0)	; Branch not taken, cc true
  dbge       d0,yyy                       ; 14(3/0)	; Branch not taken, counter expired
  dbgt       d0,yyy                       ; 10(2/0)	; Branch taken
  dbgt       d0,yyy                       ; 12(2/0)	; Branch not taken, cc true
  dbgt       d0,yyy                       ; 14(3/0)	; Branch not taken, counter expired
  dbhi       d0,yyy                       ; 10(2/0)	; Branch taken
  dbhi       d0,yyy                       ; 12(2/0)	; Branch not taken, cc true
  dbhi       d0,yyy                       ; 14(3/0)	; Branch not taken, counter expired
  dble       d0,yyy                       ; 10(2/0)	; Branch taken
  dble       d0,yyy                       ; 12(2/0)	; Branch not taken, cc true
  dble       d0,yyy                       ; 14(3/0)	; Branch not taken, counter expired
  dbls       d0,yyy                       ; 10(2/0)	; Branch taken
  dbls       d0,yyy                       ; 12(2/0)	; Branch not taken, cc true
  dbls       d0,yyy                       ; 14(3/0)	; Branch not taken, counter expired
  dblt       d0,yyy                       ; 10(2/0)	; Branch taken
  dblt       d0,yyy                       ; 12(2/0)	; Branch not taken, cc true
  dblt       d0,yyy                       ; 14(3/0)	; Branch not taken, counter expired
  dbmi       d0,yyy                       ; 10(2/0)	; Branch taken
  dbmi       d0,yyy                       ; 12(2/0)	; Branch not taken, cc true
  dbmi       d0,yyy                       ; 14(3/0)	; Branch not taken, counter expired
  dbne       d0,yyy                       ; 10(2/0)	; Branch taken
  dbne       d0,yyy                       ; 12(2/0)	; Branch not taken, cc true
  dbne       d0,yyy                       ; 14(3/0)	; Branch not taken, counter expired
  dbpl       d0,yyy                       ; 10(2/0)	; Branch taken
  dbpl       d0,yyy                       ; 12(2/0)	; Branch not taken, cc true
  dbpl       d0,yyy                       ; 14(3/0)	; Branch not taken, counter expired
  dbvc       d0,yyy                       ; 10(2/0)	; Branch taken
  dbvc       d0,yyy                       ; 12(2/0)	; Branch not taken, cc true
  dbvc       d0,yyy                       ; 14(3/0)	; Branch not taken, counter expired
  dbvs       d0,yyy                       ; 10(2/0)	; Branch taken
  dbvs       d0,yyy                       ; 12(2/0)	; Branch not taken, cc true
  dbvs       d0,yyy                       ; 14(3/0)	; Branch not taken, counter expired
	; -------------------------------------------------------------------------
  st.b       d0                           ;  6(1/0) +  0(0/0) =  6(1/0)	; cc true
  st.b       (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)	; cc true
  st.b       (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)	; cc true
  st.b       -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)	; cc true
  st.b       i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc true
  st.b       i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  st.b       i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  st.b       i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  st.b       i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  st.b       (xxx).W                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc true
  st.b       (xxx).L                      ;  8(1/1) + 12(3/0) = 20(4/1)	; cc true
  sf.b       d0                           ;  4(1/0) +  0(0/0) =  4(1/0)	; cc false
  sf.b       (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)	; cc false
  sf.b       (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)	; cc false
  sf.b       -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)	; cc false
  sf.b       i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc false
  sf.b       i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  sf.b       i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  sf.b       i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  sf.b       i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  sf.b       (xxx).W                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc false
  sf.b       (xxx).L                      ;  8(1/1) + 12(3/0) = 20(4/1)	; cc false
  scc.b      d0                           ;  4(1/0) +  0(0/0) =  4(1/0)	; cc false
  scc.b      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)	; cc false
  scc.b      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)	; cc false
  scc.b      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)	; cc false
  scc.b      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc false
  scc.b      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  scc.b      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  scc.b      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  scc.b      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  scc.b      (xxx).W                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc false
  scc.b      (xxx).L                      ;  8(1/1) + 12(3/0) = 20(4/1)	; cc false
  scc.b      d0                           ;  6(1/0) +  0(0/0) =  6(1/0)	; cc true
  scc.b      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)	; cc true
  scc.b      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)	; cc true
  scc.b      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)	; cc true
  scc.b      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc true
  scc.b      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  scc.b      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  scc.b      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  scc.b      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  scc.b      (xxx).W                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc true
  scc.b      (xxx).L                      ;  8(1/1) + 12(3/0) = 20(4/1)	; cc true
  shs.b      d0                           ;  4(1/0) +  0(0/0) =  4(1/0)	; cc false
  shs.b      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)	; cc false
  shs.b      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)	; cc false
  shs.b      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)	; cc false
  shs.b      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc false
  shs.b      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  shs.b      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  shs.b      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  shs.b      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  shs.b      (xxx).W                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc false
  shs.b      (xxx).L                      ;  8(1/1) + 12(3/0) = 20(4/1)	; cc false
  shs.b      d0                           ;  6(1/0) +  0(0/0) =  6(1/0)	; cc true
  shs.b      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)	; cc true
  shs.b      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)	; cc true
  shs.b      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)	; cc true
  shs.b      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc true
  shs.b      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  shs.b      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  shs.b      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  shs.b      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  shs.b      (xxx).W                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc true
  shs.b      (xxx).L                      ;  8(1/1) + 12(3/0) = 20(4/1)	; cc true
  scs.b      d0                           ;  4(1/0) +  0(0/0) =  4(1/0)	; cc false
  scs.b      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)	; cc false
  scs.b      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)	; cc false
  scs.b      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)	; cc false
  scs.b      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc false
  scs.b      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  scs.b      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  scs.b      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  scs.b      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  scs.b      (xxx).W                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc false
  scs.b      (xxx).L                      ;  8(1/1) + 12(3/0) = 20(4/1)	; cc false
  scs.b      d0                           ;  6(1/0) +  0(0/0) =  6(1/0)	; cc true
  scs.b      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)	; cc true
  scs.b      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)	; cc true
  scs.b      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)	; cc true
  scs.b      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc true
  scs.b      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  scs.b      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  scs.b      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  scs.b      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  scs.b      (xxx).W                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc true
  scs.b      (xxx).L                      ;  8(1/1) + 12(3/0) = 20(4/1)	; cc true
  slo.b      d0                           ;  4(1/0) +  0(0/0) =  4(1/0)	; cc false
  slo.b      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)	; cc false
  slo.b      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)	; cc false
  slo.b      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)	; cc false
  slo.b      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc false
  slo.b      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  slo.b      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  slo.b      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  slo.b      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  slo.b      (xxx).W                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc false
  slo.b      (xxx).L                      ;  8(1/1) + 12(3/0) = 20(4/1)	; cc false
  slo.b      d0                           ;  6(1/0) +  0(0/0) =  6(1/0)	; cc true
  slo.b      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)	; cc true
  slo.b      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)	; cc true
  slo.b      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)	; cc true
  slo.b      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc true
  slo.b      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  slo.b      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  slo.b      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  slo.b      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  slo.b      (xxx).W                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc true
  slo.b      (xxx).L                      ;  8(1/1) + 12(3/0) = 20(4/1)	; cc true
  seq.b      d0                           ;  4(1/0) +  0(0/0) =  4(1/0)	; cc false
  seq.b      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)	; cc false
  seq.b      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)	; cc false
  seq.b      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)	; cc false
  seq.b      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc false
  seq.b      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  seq.b      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  seq.b      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  seq.b      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  seq.b      (xxx).W                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc false
  seq.b      (xxx).L                      ;  8(1/1) + 12(3/0) = 20(4/1)	; cc false
  seq.b      d0                           ;  6(1/0) +  0(0/0) =  6(1/0)	; cc true
  seq.b      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)	; cc true
  seq.b      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)	; cc true
  seq.b      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)	; cc true
  seq.b      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc true
  seq.b      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  seq.b      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  seq.b      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  seq.b      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  seq.b      (xxx).W                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc true
  seq.b      (xxx).L                      ;  8(1/1) + 12(3/0) = 20(4/1)	; cc true
  sge.b      d0                           ;  4(1/0) +  0(0/0) =  4(1/0)	; cc false
  sge.b      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)	; cc false
  sge.b      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)	; cc false
  sge.b      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)	; cc false
  sge.b      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc false
  sge.b      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  sge.b      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  sge.b      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  sge.b      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  sge.b      (xxx).W                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc false
  sge.b      (xxx).L                      ;  8(1/1) + 12(3/0) = 20(4/1)	; cc false
  sge.b      d0                           ;  6(1/0) +  0(0/0) =  6(1/0)	; cc true
  sge.b      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)	; cc true
  sge.b      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)	; cc true
  sge.b      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)	; cc true
  sge.b      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc true
  sge.b      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  sge.b      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  sge.b      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  sge.b      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  sge.b      (xxx).W                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc true
  sge.b      (xxx).L                      ;  8(1/1) + 12(3/0) = 20(4/1)	; cc true
  sgt.b      d0                           ;  4(1/0) +  0(0/0) =  4(1/0)	; cc false
  sgt.b      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)	; cc false
  sgt.b      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)	; cc false
  sgt.b      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)	; cc false
  sgt.b      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc false
  sgt.b      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  sgt.b      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  sgt.b      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  sgt.b      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  sgt.b      (xxx).W                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc false
  sgt.b      (xxx).L                      ;  8(1/1) + 12(3/0) = 20(4/1)	; cc false
  sgt.b      d0                           ;  6(1/0) +  0(0/0) =  6(1/0)	; cc true
  sgt.b      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)	; cc true
  sgt.b      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)	; cc true
  sgt.b      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)	; cc true
  sgt.b      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc true
  sgt.b      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  sgt.b      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  sgt.b      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  sgt.b      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  sgt.b      (xxx).W                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc true
  sgt.b      (xxx).L                      ;  8(1/1) + 12(3/0) = 20(4/1)	; cc true
  shi.b      d0                           ;  4(1/0) +  0(0/0) =  4(1/0)	; cc false
  shi.b      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)	; cc false
  shi.b      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)	; cc false
  shi.b      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)	; cc false
  shi.b      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc false
  shi.b      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  shi.b      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  shi.b      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  shi.b      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  shi.b      (xxx).W                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc false
  shi.b      (xxx).L                      ;  8(1/1) + 12(3/0) = 20(4/1)	; cc false
  shi.b      d0                           ;  6(1/0) +  0(0/0) =  6(1/0)	; cc true
  shi.b      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)	; cc true
  shi.b      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)	; cc true
  shi.b      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)	; cc true
  shi.b      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc true
  shi.b      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  shi.b      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  shi.b      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  shi.b      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  shi.b      (xxx).W                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc true
  shi.b      (xxx).L                      ;  8(1/1) + 12(3/0) = 20(4/1)	; cc true
  sle.b      d0                           ;  4(1/0) +  0(0/0) =  4(1/0)	; cc false
  sle.b      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)	; cc false
  sle.b      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)	; cc false
  sle.b      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)	; cc false
  sle.b      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc false
  sle.b      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  sle.b      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  sle.b      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  sle.b      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  sle.b      (xxx).W                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc false
  sle.b      (xxx).L                      ;  8(1/1) + 12(3/0) = 20(4/1)	; cc false
  sle.b      d0                           ;  6(1/0) +  0(0/0) =  6(1/0)	; cc true
  sle.b      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)	; cc true
  sle.b      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)	; cc true
  sle.b      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)	; cc true
  sle.b      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc true
  sle.b      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  sle.b      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  sle.b      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  sle.b      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  sle.b      (xxx).W                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc true
  sle.b      (xxx).L                      ;  8(1/1) + 12(3/0) = 20(4/1)	; cc true
  sls.b      d0                           ;  4(1/0) +  0(0/0) =  4(1/0)	; cc false
  sls.b      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)	; cc false
  sls.b      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)	; cc false
  sls.b      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)	; cc false
  sls.b      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc false
  sls.b      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  sls.b      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  sls.b      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  sls.b      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  sls.b      (xxx).W                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc false
  sls.b      (xxx).L                      ;  8(1/1) + 12(3/0) = 20(4/1)	; cc false
  sls.b      d0                           ;  6(1/0) +  0(0/0) =  6(1/0)	; cc true
  sls.b      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)	; cc true
  sls.b      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)	; cc true
  sls.b      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)	; cc true
  sls.b      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc true
  sls.b      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  sls.b      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  sls.b      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  sls.b      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  sls.b      (xxx).W                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc true
  sls.b      (xxx).L                      ;  8(1/1) + 12(3/0) = 20(4/1)	; cc true
  slt.b      d0                           ;  4(1/0) +  0(0/0) =  4(1/0)	; cc false
  slt.b      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)	; cc false
  slt.b      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)	; cc false
  slt.b      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)	; cc false
  slt.b      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc false
  slt.b      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  slt.b      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  slt.b      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  slt.b      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  slt.b      (xxx).W                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc false
  slt.b      (xxx).L                      ;  8(1/1) + 12(3/0) = 20(4/1)	; cc false
  slt.b      d0                           ;  6(1/0) +  0(0/0) =  6(1/0)	; cc true
  slt.b      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)	; cc true
  slt.b      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)	; cc true
  slt.b      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)	; cc true
  slt.b      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc true
  slt.b      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  slt.b      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  slt.b      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  slt.b      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  slt.b      (xxx).W                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc true
  slt.b      (xxx).L                      ;  8(1/1) + 12(3/0) = 20(4/1)	; cc true
  smi.b      d0                           ;  4(1/0) +  0(0/0) =  4(1/0)	; cc false
  smi.b      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)	; cc false
  smi.b      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)	; cc false
  smi.b      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)	; cc false
  smi.b      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc false
  smi.b      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  smi.b      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  smi.b      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  smi.b      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  smi.b      (xxx).W                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc false
  smi.b      (xxx).L                      ;  8(1/1) + 12(3/0) = 20(4/1)	; cc false
  smi.b      d0                           ;  6(1/0) +  0(0/0) =  6(1/0)	; cc true
  smi.b      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)	; cc true
  smi.b      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)	; cc true
  smi.b      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)	; cc true
  smi.b      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc true
  smi.b      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  smi.b      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  smi.b      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  smi.b      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  smi.b      (xxx).W                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc true
  smi.b      (xxx).L                      ;  8(1/1) + 12(3/0) = 20(4/1)	; cc true
  sne.b      d0                           ;  4(1/0) +  0(0/0) =  4(1/0)	; cc false
  sne.b      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)	; cc false
  sne.b      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)	; cc false
  sne.b      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)	; cc false
  sne.b      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc false
  sne.b      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  sne.b      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  sne.b      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  sne.b      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  sne.b      (xxx).W                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc false
  sne.b      (xxx).L                      ;  8(1/1) + 12(3/0) = 20(4/1)	; cc false
  sne.b      d0                           ;  6(1/0) +  0(0/0) =  6(1/0)	; cc true
  sne.b      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)	; cc true
  sne.b      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)	; cc true
  sne.b      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)	; cc true
  sne.b      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc true
  sne.b      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  sne.b      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  sne.b      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  sne.b      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  sne.b      (xxx).W                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc true
  sne.b      (xxx).L                      ;  8(1/1) + 12(3/0) = 20(4/1)	; cc true
  spl.b      d0                           ;  4(1/0) +  0(0/0) =  4(1/0)	; cc false
  spl.b      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)	; cc false
  spl.b      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)	; cc false
  spl.b      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)	; cc false
  spl.b      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc false
  spl.b      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  spl.b      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  spl.b      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  spl.b      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  spl.b      (xxx).W                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc false
  spl.b      (xxx).L                      ;  8(1/1) + 12(3/0) = 20(4/1)	; cc false
  spl.b      d0                           ;  6(1/0) +  0(0/0) =  6(1/0)	; cc true
  spl.b      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)	; cc true
  spl.b      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)	; cc true
  spl.b      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)	; cc true
  spl.b      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc true
  spl.b      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  spl.b      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  spl.b      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  spl.b      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  spl.b      (xxx).W                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc true
  spl.b      (xxx).L                      ;  8(1/1) + 12(3/0) = 20(4/1)	; cc true
  svc.b      d0                           ;  4(1/0) +  0(0/0) =  4(1/0)	; cc false
  svc.b      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)	; cc false
  svc.b      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)	; cc false
  svc.b      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)	; cc false
  svc.b      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc false
  svc.b      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  svc.b      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  svc.b      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  svc.b      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  svc.b      (xxx).W                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc false
  svc.b      (xxx).L                      ;  8(1/1) + 12(3/0) = 20(4/1)	; cc false
  svc.b      d0                           ;  6(1/0) +  0(0/0) =  6(1/0)	; cc true
  svc.b      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)	; cc true
  svc.b      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)	; cc true
  svc.b      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)	; cc true
  svc.b      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc true
  svc.b      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  svc.b      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  svc.b      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  svc.b      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  svc.b      (xxx).W                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc true
  svc.b      (xxx).L                      ;  8(1/1) + 12(3/0) = 20(4/1)	; cc true
  svs.b      d0                           ;  4(1/0) +  0(0/0) =  4(1/0)	; cc false
  svs.b      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)	; cc false
  svs.b      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)	; cc false
  svs.b      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)	; cc false
  svs.b      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc false
  svs.b      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  svs.b      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  svs.b      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  svs.b      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc false
  svs.b      (xxx).W                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc false
  svs.b      (xxx).L                      ;  8(1/1) + 12(3/0) = 20(4/1)	; cc false
  svs.b      d0                           ;  6(1/0) +  0(0/0) =  6(1/0)	; cc true
  svs.b      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)	; cc true
  svs.b      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)	; cc true
  svs.b      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)	; cc true
  svs.b      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc true
  svs.b      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  svs.b      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  svs.b      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  svs.b      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)	; cc true
  svs.b      (xxx).W                      ;  8(1/1) +  8(2/0) = 16(3/1)	; cc true
  svs.b      (xxx).L                      ;  8(1/1) + 12(3/0) = 20(4/1)	; cc true
	; ------------------------------------------------------------------------
aaa:
  bra.s      aaa                          ; 10(2/0)
  bra.b      aaa                          ; 10(2/0)
  bra.w      aaa                          ; 10(2/0)
	; -------------------------------------------------------------------------
  bsr.s      aaa                          ; 18(2/2)
  bsr.b      aaa                          ; 18(2/2)
  bsr.w      aaa                          ; 18(2/2)
	; -------------------------------------------------------------------------
  bcc.s      aaa                          ; 10(2/0)	; Branch taken
  bcc.s      aaa                          ;  8(1/0)	; Branch not taken
  bcc.b      aaa                          ; 10(2/0)	; Branch taken
  bcc.b      aaa                          ;  8(1/0)	; Branch not taken
  bcc.w      aaa                          ; 10(2/0)	; Branch taken
  bcc.w      aaa                          ; 12(2/0)	; Branch not taken
  bhs.s      aaa                          ; 10(2/0)	; Branch taken
  bhs.s      aaa                          ;  8(1/0)	; Branch not taken
  bhs.b      aaa                          ; 10(2/0)	; Branch taken
  bhs.b      aaa                          ;  8(1/0)	; Branch not taken
  bhs.w      aaa                          ; 10(2/0)	; Branch taken
  bhs.w      aaa                          ; 12(2/0)	; Branch not taken
  bcs.s      aaa                          ; 10(2/0)	; Branch taken
  bcs.s      aaa                          ;  8(1/0)	; Branch not taken
  bcs.b      aaa                          ; 10(2/0)	; Branch taken
  bcs.b      aaa                          ;  8(1/0)	; Branch not taken
  bcs.w      aaa                          ; 10(2/0)	; Branch taken
  bcs.w      aaa                          ; 12(2/0)	; Branch not taken
  blo.s      aaa                          ; 10(2/0)	; Branch taken
  blo.s      aaa                          ;  8(1/0)	; Branch not taken
  blo.b      aaa                          ; 10(2/0)	; Branch taken
  blo.b      aaa                          ;  8(1/0)	; Branch not taken
  blo.w      aaa                          ; 10(2/0)	; Branch taken
  blo.w      aaa                          ; 12(2/0)	; Branch not taken
; bbb:
  beq.s      bbb                          ; 10(2/0)	; Branch taken
  beq.s      bbb                          ;  8(1/0)	; Branch not taken
  beq.b      bbb                          ; 10(2/0)	; Branch taken
  beq.b      bbb                          ;  8(1/0)	; Branch not taken
  beq.w      bbb                          ; 10(2/0)	; Branch taken
  beq.w      bbb                          ; 12(2/0)	; Branch not taken
  bge.s      bbb                          ; 10(2/0)	; Branch taken
  bge.s      bbb                          ;  8(1/0)	; Branch not taken
  bge.b      bbb                          ; 10(2/0)	; Branch taken
  bge.b      bbb                          ;  8(1/0)	; Branch not taken
  bge.w      bbb                          ; 10(2/0)	; Branch taken
  bge.w      bbb                          ; 12(2/0)	; Branch not taken
  bgt.s      bbb                          ; 10(2/0)	; Branch taken
  bgt.s      bbb                          ;  8(1/0)	; Branch not taken
  bgt.b      bbb                          ; 10(2/0)	; Branch taken
  bgt.b      bbb                          ;  8(1/0)	; Branch not taken
  bgt.w      bbb                          ; 10(2/0)	; Branch taken
  bgt.w      bbb                          ; 12(2/0)	; Branch not taken
  bhi.s      bbb                          ; 10(2/0)	; Branch taken
  bhi.s      bbb                          ;  8(1/0)	; Branch not taken
  bhi.b      bbb                          ; 10(2/0)	; Branch taken
  bhi.b      bbb                          ;  8(1/0)	; Branch not taken
  bhi.w      bbb                          ; 10(2/0)	; Branch taken
  bhi.w      bbb                          ; 12(2/0)	; Branch not taken
ccc:
  ble.s      ccc                          ; 10(2/0)	; Branch taken
  ble.s      ccc                          ;  8(1/0)	; Branch not taken
  ble.b      ccc                          ; 10(2/0)	; Branch taken
  ble.b      ccc                          ;  8(1/0)	; Branch not taken
  ble.w      ccc                          ; 10(2/0)	; Branch taken
  ble.w      ccc                          ; 12(2/0)	; Branch not taken
  bls.s      ccc                          ; 10(2/0)	; Branch taken
  bls.s      ccc                          ;  8(1/0)	; Branch not taken
  bls.b      ccc                          ; 10(2/0)	; Branch taken
  bls.b      ccc                          ;  8(1/0)	; Branch not taken
  bls.w      ccc                          ; 10(2/0)	; Branch taken
  bls.w      ccc                          ; 12(2/0)	; Branch not taken
  blt.s      ccc                          ; 10(2/0)	; Branch taken
  blt.s      ccc                          ;  8(1/0)	; Branch not taken
  blt.b      ccc                          ; 10(2/0)	; Branch taken
  blt.b      ccc                          ;  8(1/0)	; Branch not taken
  blt.w      ccc                          ; 10(2/0)	; Branch taken
  blt.w      ccc                          ; 12(2/0)	; Branch not taken
  bmi.s      ccc                          ; 10(2/0)	; Branch taken
  bmi.s      ccc                          ;  8(1/0)	; Branch not taken
  bmi.b      ccc                          ; 10(2/0)	; Branch taken
  bmi.b      ccc                          ;  8(1/0)	; Branch not taken
  bmi.w      ccc                          ; 10(2/0)	; Branch taken
  bmi.w      ccc                          ; 12(2/0)	; Branch not taken
ddd:
  bne.s      ddd                          ; 10(2/0)	; Branch taken
  bne.s      ddd                          ;  8(1/0)	; Branch not taken
  bne.b      ddd                          ; 10(2/0)	; Branch taken
  bne.b      ddd                          ;  8(1/0)	; Branch not taken
  bne.w      ddd                          ; 10(2/0)	; Branch taken
  bne.w      ddd                          ; 12(2/0)	; Branch not taken
  bpl.s      ddd                          ; 10(2/0)	; Branch taken
  bpl.s      ddd                          ;  8(1/0)	; Branch not taken
  bpl.b      ddd                          ; 10(2/0)	; Branch taken
  bpl.b      ddd                          ;  8(1/0)	; Branch not taken
  bpl.w      ddd                          ; 10(2/0)	; Branch taken
  bpl.w      ddd                          ; 12(2/0)	; Branch not taken
  bvc.s      ddd                          ; 10(2/0)	; Branch taken
  bvc.s      ddd                          ;  8(1/0)	; Branch not taken
  bvc.b      ddd                          ; 10(2/0)	; Branch taken
  bvc.b      ddd                          ;  8(1/0)	; Branch not taken
  bvc.w      ddd                          ; 10(2/0)	; Branch taken
  bvc.w      ddd                          ; 12(2/0)	; Branch not taken
  bvs.s      ddd                          ; 10(2/0)	; Branch taken
  bvs.s      ddd                          ;  8(1/0)	; Branch not taken
  bvs.b      ddd                          ; 10(2/0)	; Branch taken
  bvs.b      ddd                          ;  8(1/0)	; Branch not taken
  bvs.w      ddd                          ; 10(2/0)	; Branch taken
  bvs.w      ddd                          ; 12(2/0)	; Branch not taken
; =============================================================================
; Line %0111
; =============================================================================
  moveq      #i8,d0                       ;  4(1/0)
; =============================================================================
; Line %1000
; =============================================================================
	; -------------------------------------------------------------------------
  abcd.b     d0,d0                        ;  6(1/0)
  abcd.b     -(a0),-(a0)                  ; 18(3/1)
	; -------------------------------------------------------------------------
  sbcd.b     d0,d0                        ;  6(1/0)
  sbcd.b     -(a0),-(a0)                  ; 18(3/1)
	; -------------------------------------------------------------------------
  and.b      d0,d0                        ;  4(1/0) +  0(0/0) =  4(1/0)
  and.b      (a0),d0                      ;  4(1/0) +  4(1/0) =  8(2/0)
  and.b      (a0)+,d0                     ;  4(1/0) +  4(1/0) =  8(2/0)
  and.b      -(a0),d0                     ;  4(1/0) +  6(1/0) = 10(2/0)
  and.b      i16(a0),d0                   ;  4(1/0) +  8(2/0) = 12(3/0)
  and.b      *+i16(pc),d0                 ;  4(1/0) +  8(2/0) = 12(3/0)
  and.b      i8(a0,d0.w),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  and.b      i8(a0,a0.w),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  and.b      i8(a0,d0.l),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  and.b      i8(a0,a0.l),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  and.b      *+i8(pc,d0.w),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  and.b      *+i8(pc,a0.w),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  and.b      *+i8(pc,d0.l),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  and.b      *+i8(pc,a0.l),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  and.b      (xxx).w,d0                   ;  4(1/0) +  8(2/0) = 12(3/0)
  and.b      (xxx).l,d0                   ;  4(1/0) + 12(3/0) = 16(4/0)
  and.b      #i8,d0                       ;  4(1/0) +  4(1/0) =  8(2/0)
  and.w      d0,d0                        ;  4(1/0) +  0(0/0) =  4(1/0)
  and.w      (a0),d0                      ;  4(1/0) +  4(1/0) =  8(2/0)
  and.w      (a0)+,d0                     ;  4(1/0) +  4(1/0) =  8(2/0)
  and.w      -(a0),d0                     ;  4(1/0) +  6(1/0) = 10(2/0)
  and.w      i16(a0),d0                   ;  4(1/0) +  8(2/0) = 12(3/0)
  and.w      *+i16(pc),d0                 ;  4(1/0) +  8(2/0) = 12(3/0)
  and.w      i8(a0,d0.w),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  and.w      i8(a0,a0.w),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  and.w      i8(a0,d0.l),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  and.w      i8(a0,a0.l),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  and.w      *+i8(pc,d0.w),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  and.w      *+i8(pc,a0.w),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  and.w      *+i8(pc,d0.l),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  and.w      *+i8(pc,a0.l),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  and.w      (xxx).w,d0                   ;  4(1/0) +  8(2/0) = 12(3/0)
  and.w      (xxx).l,d0                   ;  4(1/0) + 12(3/0) = 16(4/0)
  and.w      #i16,d0                      ;  4(1/0) +  4(1/0) =  8(2/0)
  and.l      d0,d0                        ;  8(1/0) +  0(0/0) =  8(1/0)
  and.l      (a0),d0                      ;  6(1/0) +  8(2/0) = 14(3/0)
  and.l      (a0)+,d0                     ;  6(1/0) +  8(2/0) = 14(3/0)
  and.l      -(a0),d0                     ;  6(1/0) + 10(2/0) = 16(3/0)
  and.l      i16(a0),d0                   ;  6(1/0) + 12(3/0) = 18(4/0)
  and.l      *+i16(pc),d0                 ;  6(1/0) + 12(3/0) = 18(4/0)
  and.l      i8(a0,d0.w),d0               ;  6(1/0) + 14(3/0) = 20(4/0)
  and.l      i8(a0,a0.w),d0               ;  6(1/0) + 14(3/0) = 20(4/0)
  and.l      i8(a0,d0.l),d0               ;  6(1/0) + 14(3/0) = 20(4/0)
  and.l      i8(a0,a0.l),d0               ;  6(1/0) + 14(3/0) = 20(4/0)
  and.l      *+i8(pc,d0.w),d0             ;  6(1/0) + 14(3/0) = 20(4/0)
  and.l      *+i8(pc,a0.w),d0             ;  6(1/0) + 14(3/0) = 20(4/0)
  and.l      *+i8(pc,d0.l),d0             ;  6(1/0) + 14(3/0) = 20(4/0)
  and.l      *+i8(pc,a0.l),d0             ;  6(1/0) + 14(3/0) = 20(4/0)
  and.l      (xxx).w,d0                   ;  6(1/0) + 12(3/0) = 18(4/0)
  and.l      (xxx).l,d0                   ;  6(1/0) + 16(4/0) = 22(5/0)
  and.l      #i32,d0                      ;  8(1/0) +  8(2/0) = 16(3/0)
  and.b      d0,(a0)                      ;  8(1/1) +  4(1/0) = 12(2/1)
  and.b      d0,(a0)+                     ;  8(1/1) +  4(1/0) = 12(2/1)
  and.b      d0,-(a0)                     ;  8(1/1) +  6(1/0) = 14(2/1)
  and.b      d0,i16(a0)                   ;  8(1/1) +  8(2/0) = 16(3/1)
  and.b      d0,i8(a0,d0.w)               ;  8(1/1) + 10(2/0) = 18(3/1)
  and.b      d0,i8(a0,a0.w)               ;  8(1/1) + 10(2/0) = 18(3/1)
  and.b      d0,i8(a0,d0.l)               ;  8(1/1) + 10(2/0) = 18(3/1)
  and.b      d0,i8(a0,a0.l)               ;  8(1/1) + 10(2/0) = 18(3/1)
  and.b      d0,(xxx).w                   ;  8(1/1) +  8(2/0) = 16(3/1)
  and.b      d0,(xxx).l                   ;  8(1/1) + 12(3/0) = 20(4/1)
  and.w      d0,(a0)                      ;  8(1/1) +  4(1/0) = 12(2/1)
  and.w      d0,(a0)+                     ;  8(1/1) +  4(1/0) = 12(2/1)
  and.w      d0,-(a0)                     ;  8(1/1) +  6(1/0) = 14(2/1)
  and.w      d0,i16(a0)                   ;  8(1/1) +  8(2/0) = 16(3/1)
  and.w      d0,i8(a0,d0.w)               ;  8(1/1) + 10(2/0) = 18(3/1)
  and.w      d0,i8(a0,a0.w)               ;  8(1/1) + 10(2/0) = 18(3/1)
  and.w      d0,i8(a0,d0.l)               ;  8(1/1) + 10(2/0) = 18(3/1)
  and.w      d0,i8(a0,a0.l)               ;  8(1/1) + 10(2/0) = 18(3/1)
  and.w      d0,(xxx).w                   ;  8(1/1) +  8(2/0) = 16(3/1)
  and.w      d0,(xxx).l                   ;  8(1/1) + 12(3/0) = 20(4/1)
  and.l      d0,(a0)                      ; 12(1/2) +  8(2/0) = 20(3/2)
  and.l      d0,(a0)+                     ; 12(1/2) +  8(2/0) = 20(3/2)
  and.l      d0,-(a0)                     ; 12(1/2) + 10(2/0) = 22(3/2)
  and.l      d0,i16(a0)                   ; 12(1/2) + 12(3/0) = 24(4/2)
  and.l      d0,i8(a0,d0.w)               ; 12(1/2) + 14(3/0) = 26(4/2)
  and.l      d0,i8(a0,a0.w)               ; 12(1/2) + 14(3/0) = 26(4/2)
  and.l      d0,i8(a0,d0.l)               ; 12(1/2) + 14(3/0) = 26(4/2)
  and.l      d0,i8(a0,a0.l)               ; 12(1/2) + 14(3/0) = 26(4/2)
  and.l      d0,(xxx).w                   ; 12(1/2) + 12(3/0) = 24(4/2)
  and.l      d0,(xxx).l                   ; 12(1/2) + 16(4/0) = 28(5/2)
	; -------------------------------------------------------------------------
  or.b       d0,d0                        ;  4(1/0) +  0(0/0) =  4(1/0)
  or.b       (a0),d0                      ;  4(1/0) +  4(1/0) =  8(2/0)
  or.b       (a0)+,d0                     ;  4(1/0) +  4(1/0) =  8(2/0)
  or.b       -(a0),d0                     ;  4(1/0) +  6(1/0) = 10(2/0)
  or.b       i16(a0),d0                   ;  4(1/0) +  8(2/0) = 12(3/0)
  or.b       *+i16(pc),d0                 ;  4(1/0) +  8(2/0) = 12(3/0)
  or.b       i8(a0,d0.w),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  or.b       i8(a0,a0.w),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  or.b       i8(a0,d0.l),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  or.b       i8(a0,a0.l),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  or.b       *+i8(pc,d0.w),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  or.b       *+i8(pc,a0.w),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  or.b       *+i8(pc,d0.l),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  or.b       *+i8(pc,a0.l),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  or.b       (xxx).w,d0                   ;  4(1/0) +  8(2/0) = 12(3/0)
  or.b       (xxx).l,d0                   ;  4(1/0) + 12(3/0) = 16(4/0)
  or.b       #i8,d0                       ;  4(1/0) +  4(1/0) =  8(2/0)
  or.w       d0,d0                        ;  4(1/0) +  0(0/0) =  4(1/0)
  or.w       (a0),d0                      ;  4(1/0) +  4(1/0) =  8(2/0)
  or.w       (a0)+,d0                     ;  4(1/0) +  4(1/0) =  8(2/0)
  or.w       -(a0),d0                     ;  4(1/0) +  6(1/0) = 10(2/0)
  or.w       i16(a0),d0                   ;  4(1/0) +  8(2/0) = 12(3/0)
  or.w       *+i16(pc),d0                 ;  4(1/0) +  8(2/0) = 12(3/0)
  or.w       i8(a0,d0.w),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  or.w       i8(a0,a0.w),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  or.w       i8(a0,d0.l),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  or.w       i8(a0,a0.l),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  or.w       *+i8(pc,d0.w),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  or.w       *+i8(pc,a0.w),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  or.w       *+i8(pc,d0.l),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  or.w       *+i8(pc,a0.l),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  or.w       (xxx).w,d0                   ;  4(1/0) +  8(2/0) = 12(3/0)
  or.w       (xxx).l,d0                   ;  4(1/0) + 12(3/0) = 16(4/0)
  or.w       #i16,d0                      ;  4(1/0) +  4(1/0) =  8(2/0)
  or.l       d0,d0                        ;  8(1/0) +  0(0/0) =  8(1/0)
  or.l       (a0),d0                      ;  6(1/0) +  8(2/0) = 14(3/0)
  or.l       (a0)+,d0                     ;  6(1/0) +  8(2/0) = 14(3/0)
  or.l       -(a0),d0                     ;  6(1/0) + 10(2/0) = 16(3/0)
  or.l       i16(a0),d0                   ;  6(1/0) + 12(3/0) = 18(4/0)
  or.l       *+i16(pc),d0                 ;  6(1/0) + 12(3/0) = 18(4/0)
  or.l       i8(a0,d0.w),d0               ;  6(1/0) + 14(3/0) = 20(4/0)
  or.l       i8(a0,a0.w),d0               ;  6(1/0) + 14(3/0) = 20(4/0)
  or.l       i8(a0,d0.l),d0               ;  6(1/0) + 14(3/0) = 20(4/0)
  or.l       i8(a0,a0.l),d0               ;  6(1/0) + 14(3/0) = 20(4/0)
  or.l       *+i8(pc,d0.w),d0             ;  6(1/0) + 14(3/0) = 20(4/0)
  or.l       *+i8(pc,a0.w),d0             ;  6(1/0) + 14(3/0) = 20(4/0)
  or.l       *+i8(pc,d0.l),d0             ;  6(1/0) + 14(3/0) = 20(4/0)
  or.l       *+i8(pc,a0.l),d0             ;  6(1/0) + 14(3/0) = 20(4/0)
  or.l       (xxx).w,d0                   ;  6(1/0) + 12(3/0) = 18(4/0)
  or.l       (xxx).l,d0                   ;  6(1/0) + 16(4/0) = 22(5/0)
  or.l       #i32,d0                      ;  8(1/0) +  8(2/0) = 16(3/0)
  or.b       d0,(a0)                      ;  8(1/1) +  4(1/0) = 12(2/1)
  or.b       d0,(a0)+                     ;  8(1/1) +  4(1/0) = 12(2/1)
  or.b       d0,-(a0)                     ;  8(1/1) +  6(1/0) = 14(2/1)
  or.b       d0,i16(a0)                   ;  8(1/1) +  8(2/0) = 16(3/1)
  or.b       d0,i8(a0,d0.w)               ;  8(1/1) + 10(2/0) = 18(3/1)
  or.b       d0,i8(a0,a0.w)               ;  8(1/1) + 10(2/0) = 18(3/1)
  or.b       d0,i8(a0,d0.l)               ;  8(1/1) + 10(2/0) = 18(3/1)
  or.b       d0,i8(a0,a0.l)               ;  8(1/1) + 10(2/0) = 18(3/1)
  or.b       d0,(xxx).w                   ;  8(1/1) +  8(2/0) = 16(3/1)
  or.b       d0,(xxx).l                   ;  8(1/1) + 12(3/0) = 20(4/1)
  or.w       d0,(a0)                      ;  8(1/1) +  4(1/0) = 12(2/1)
  or.w       d0,(a0)+                     ;  8(1/1) +  4(1/0) = 12(2/1)
  or.w       d0,-(a0)                     ;  8(1/1) +  6(1/0) = 14(2/1)
  or.w       d0,i16(a0)                   ;  8(1/1) +  8(2/0) = 16(3/1)
  or.w       d0,i8(a0,d0.w)               ;  8(1/1) + 10(2/0) = 18(3/1)
  or.w       d0,i8(a0,a0.w)               ;  8(1/1) + 10(2/0) = 18(3/1)
  or.w       d0,i8(a0,d0.l)               ;  8(1/1) + 10(2/0) = 18(3/1)
  or.w       d0,i8(a0,a0.l)               ;  8(1/1) + 10(2/0) = 18(3/1)
  or.w       d0,(xxx).w                   ;  8(1/1) +  8(2/0) = 16(3/1)
  or.w       d0,(xxx).l                   ;  8(1/1) + 12(3/0) = 20(4/1)
  or.l       d0,(a0)                      ; 12(1/2) +  8(2/0) = 20(3/2)
  or.l       d0,(a0)+                     ; 12(1/2) +  8(2/0) = 20(3/2)
  or.l       d0,-(a0)                     ; 12(1/2) + 10(2/0) = 22(3/2)
  or.l       d0,i16(a0)                   ; 12(1/2) + 12(3/0) = 24(4/2)
  or.l       d0,i8(a0,d0.w)               ; 12(1/2) + 14(3/0) = 26(4/2)
  or.l       d0,i8(a0,a0.w)               ; 12(1/2) + 14(3/0) = 26(4/2)
  or.l       d0,i8(a0,d0.l)               ; 12(1/2) + 14(3/0) = 26(4/2)
  or.l       d0,i8(a0,a0.l)               ; 12(1/2) + 14(3/0) = 26(4/2)
  or.l       d0,(xxx).w                   ; 12(1/2) + 12(3/0) = 24(4/2)
  or.l       d0,(xxx).l                   ; 12(1/2) + 16(4/0) = 28(5/2)
	; -------------------------------------------------------------------------
;   divu.w     d0,d0                        ; 76+?(1/0) +  0(0/0) = 76+?(1/0)     TODO
;   divu.w     (a0),d0                      ; 76+?(1/0) +  4(1/0) = 80+?(2/0)
;   divu.w     (a0)+,d0                     ; 76+?(1/0) +  4(1/0) = 80+?(2/0)
;   divu.w     -(a0),d0                     ; 76+?(1/0) +  6(1/0) = 82+?(2/0)
;   divu.w     i16(a0),d0                   ; 76+?(1/0) +  8(2/0) = 84+?(3/0)
;   divu.w     *+i16(pc),d0                 ; 76+?(1/0) +  8(2/0) = 84+?(3/0)
;   divu.w     i8(a0,d0.w),d0               ; 76+?(1/0) + 10(2/0) = 86+?(3/0)
;   divu.w     i8(a0,a0.w),d0               ; 76+?(1/0) + 10(2/0) = 86+?(3/0)
;   divu.w     i8(a0,d0.l),d0               ; 76+?(1/0) + 10(2/0) = 86+?(3/0)
;   divu.w     i8(a0,a0.l),d0               ; 76+?(1/0) + 10(2/0) = 86+?(3/0)
;   divu.w     *+i8(pc,d0.w),d0             ; 76+?(1/0) + 10(2/0) = 86+?(3/0)
;   divu.w     *+i8(pc,a0.w),d0             ; 76+?(1/0) + 10(2/0) = 86+?(3/0)
;   divu.w     *+i8(pc,d0.l),d0             ; 76+?(1/0) + 10(2/0) = 86+?(3/0)
;   divu.w     *+i8(pc,a0.l),d0             ; 76+?(1/0) + 10(2/0) = 86+?(3/0)
;   divu.w     (xxx).w,d0                   ; 76+?(1/0) +  8(2/0) = 84+?(3/0)
;   divu.w     (xxx).l,d0                   ; 76+?(1/0) + 12(2/0) = 88+?(3/0)
;   divu.w     #i16,d0                      ; 76+?(1/0) +  8(2/0) = 84+?(3/0)
; 	; -------------------------------------------------------------------------
;   divs.w     d0,d0                        ; 120+?(1/0) +  0(0/0) = 120+?(1/0)
;   divs.w     (a0),d0                      ; 120+?(1/0) +  4(1/0) = 124+?(2/0)
;   divs.w     (a0)+,d0                     ; 120+?(1/0) +  4(1/0) = 124+?(2/0)
;   divs.w     -(a0),d0                     ; 120+?(1/0) +  6(1/0) = 126+?(2/0)
;   divs.w     i16(a0),d0                   ; 120+?(1/0) +  8(2/0) = 128+?(3/0)
;   divs.w     *+i16(pc),d0                 ; 120+?(1/0) +  8(2/0) = 128+?(3/0)
;   divs.w     i8(a0,d0.w),d0               ; 120+?(1/0) + 10(2/0) = 130+?(3/0)
;   divs.w     i8(a0,a0.w),d0               ; 120+?(1/0) + 10(2/0) = 130+?(3/0)
;   divs.w     i8(a0,d0.l),d0               ; 120+?(1/0) + 10(2/0) = 130+?(3/0)
;   divs.w     i8(a0,a0.l),d0               ; 120+?(1/0) + 10(2/0) = 130+?(3/0)
;   divs.w     *+i8(pc,d0.w),d0             ; 120+?(1/0) + 10(2/0) = 130+?(3/0)
;   divs.w     *+i8(pc,a0.w),d0             ; 120+?(1/0) + 10(2/0) = 130+?(3/0)
;   divs.w     *+i8(pc,d0.l),d0             ; 120+?(1/0) + 10(2/0) = 130+?(3/0)
;   divs.w     *+i8(pc,a0.l),d0             ; 120+?(1/0) + 10(2/0) = 130+?(3/0)
;   divs.w     (xxx).w,d0                   ; 120+?(1/0) +  8(2/0) = 128+?(3/0)
;   divs.w     (xxx).l,d0                   ; 120+?(1/0) + 12(2/0) = 132+?(3/0)
;   divs.w     #i16,d0                      ; 120+?(1/0) +  8(2/0) = 128+?(3/0)
	; -------------------------------------------------------------------------
  exg.l      d0,d0                        ;  6(1/0)
  exg.l      a0,a0                        ;  6(1/0)
  exg.l      d0,a0                        ;  6(1/0)
	; -------------------------------------------------------------------------
  mulu.w     d0,d0                        ; 38+2m(1/0) +  0(0/0) = 38+2m(1/0) ; m = popcount(src)       TODO
  mulu.w     (a0),d0                      ; 38+2m(1/0) +  4(1/0) = 42+2m(2/0) ; m = popcount(src)
  mulu.w     (a0)+,d0                     ; 38+2m(1/0) +  4(1/0) = 42+2m(2/0) ; m = popcount(src)
  mulu.w     -(a0),d0                     ; 38+2m(1/0) +  6(1/0) = 44+2m(2/0) ; m = popcount(src)
  mulu.w     i16(a0),d0                   ; 38+2m(1/0) +  8(2/0) = 46+2m(3/0) ; m = popcount(src)
  mulu.w     *+i16(pc),d0                 ; 38+2m(1/0) +  8(2/0) = 46+2m(3/0) ; m = popcount(src)
  mulu.w     i8(a0,d0.w),d0               ; 38+2m(1/0) + 10(2/0) = 48+2m(3/0) ; m = popcount(src)
  mulu.w     i8(a0,a0.w),d0               ; 38+2m(1/0) + 10(2/0) = 48+2m(3/0) ; m = popcount(src)
  mulu.w     i8(a0,d0.l),d0               ; 38+2m(1/0) + 10(2/0) = 48+2m(3/0) ; m = popcount(src)
  mulu.w     i8(a0,a0.l),d0               ; 38+2m(1/0) + 10(2/0) = 48+2m(3/0) ; m = popcount(src)
  mulu.w     *+i8(pc,d0.w),d0             ; 38+2m(1/0) + 10(2/0) = 48+2m(3/0) ; m = popcount(src)
  mulu.w     *+i8(pc,a0.w),d0             ; 38+2m(1/0) + 10(2/0) = 48+2m(3/0) ; m = popcount(src)
  mulu.w     *+i8(pc,d0.l),d0             ; 38+2m(1/0) + 10(2/0) = 48+2m(3/0) ; m = popcount(src)
  mulu.w     *+i8(pc,a0.l),d0             ; 38+2m(1/0) + 10(2/0) = 48+2m(3/0) ; m = popcount(src)
  mulu.w     (xxx).w,d0                   ; 38+2m(1/0) +  8(2/0) = 46+2m(3/0) ; m = popcount(src)
  mulu.w     (xxx).l,d0                   ; 38+2m(1/0) + 12(2/0) = 50+2m(3/0) ; m = popcount(src)
  mulu.w     #i16,d0                      ; 38+2m(1/0) + 4(1/0)  = 42+2m(2/0) ; m = popcount(src) TODO - check inconsistency
	; -------------------------------------------------------------------------
  muls.w     d0,d0                        ; 38+2m(1/0) +  0(0/0) = 38+2m(1/0)	; m = popcount((src^(src<<1))&0xFFFF)
  muls.w     (a0),d0                      ; 38+2m(1/0) +  4(1/0) = 42+2m(2/0)	; m = popcount((src^(src<<1))&0xFFFF)
  muls.w     (a0)+,d0                     ; 38+2m(1/0) +  4(1/0) = 42+2m(2/0)	; m = popcount((src^(src<<1))&0xFFFF)
  muls.w     -(a0),d0                     ; 38+2m(1/0) +  6(1/0) = 44+2m(2/0)	; m = popcount((src^(src<<1))&0xFFFF)
  muls.w     i16(a0),d0                   ; 38+2m(1/0) +  8(2/0) = 46+2m(3/0)	; m = popcount((src^(src<<1))&0xFFFF)
  muls.w     *+i16(pc),d0                 ; 38+2m(1/0) +  8(2/0) = 46+2m(3/0)	; m = popcount((src^(src<<1))&0xFFFF)
  muls.w     i8(a0,d0.w),d0               ; 38+2m(1/0) + 10(2/0) = 48+2m(3/0)	; m = popcount((src^(src<<1))&0xFFFF)
  muls.w     i8(a0,a0.w),d0               ; 38+2m(1/0) + 10(2/0) = 48+2m(3/0)	; m = popcount((src^(src<<1))&0xFFFF)
  muls.w     i8(a0,d0.l),d0               ; 38+2m(1/0) + 10(2/0) = 48+2m(3/0)	; m = popcount((src^(src<<1))&0xFFFF)
  muls.w     i8(a0,a0.l),d0               ; 38+2m(1/0) + 10(2/0) = 48+2m(3/0)	; m = popcount((src^(src<<1))&0xFFFF)
  muls.w     *+i8(pc,d0.w),d0             ; 38+2m(1/0) + 10(2/0) = 48+2m(3/0)	; m = popcount((src^(src<<1))&0xFFFF)
  muls.w     *+i8(pc,a0.w),d0             ; 38+2m(1/0) + 10(2/0) = 48+2m(3/0)	; m = popcount((src^(src<<1))&0xFFFF)
  muls.w     *+i8(pc,d0.l),d0             ; 38+2m(1/0) + 10(2/0) = 48+2m(3/0)	; m = popcount((src^(src<<1))&0xFFFF)
  muls.w     *+i8(pc,a0.l),d0             ; 38+2m(1/0) + 10(2/0) = 48+2m(3/0)	; m = popcount((src^(src<<1))&0xFFFF)
  muls.w     (xxx).w,d0                   ; 38+2m(1/0) +  8(2/0) = 46+2m(3/0)	; m = popcount((src^(src<<1))&0xFFFF)
  muls.w     (xxx).l,d0                   ; 38+2m(1/0) + 12(2/0) = 50+2m(3/0)	; m = popcount((src^(src<<1))&0xFFFF)
  muls.w     #i16,d0                      ; 38+2m(1/0) +  4(1/0) = 42+2m(2/0)	; m = popcount((src^(src<<1))&0xFFFF) TODO - check inconsistency
	; -------------------------------------------------------------------------
  add.b      d0,d0                        ;  4(1/0) +  0(0/0) =  4(1/0)
  add.b      (a0),d0                      ;  4(1/0) +  4(1/0) =  8(2/0)
  add.b      (a0)+,d0                     ;  4(1/0) +  4(1/0) =  8(2/0)
  add.b      -(a0),d0                     ;  4(1/0) +  6(1/0) = 10(2/0)
  add.b      i16(a0),d0                   ;  4(1/0) +  8(2/0) = 12(3/0)
  add.b      *+i16(pc),d0                 ;  4(1/0) +  8(2/0) = 12(3/0)
  add.b      i8(a0,d0.w),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  add.b      i8(a0,a0.w),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  add.b      i8(a0,d0.l),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  add.b      i8(a0,a0.l),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  add.b      *+i8(pc,d0.w),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  add.b      *+i8(pc,a0.w),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  add.b      *+i8(pc,d0.l),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  add.b      *+i8(pc,a0.l),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  add.b      (xxx).w,d0                   ;  4(1/0) +  8(2/0) = 12(3/0)
  add.b      (xxx).l,d0                   ;  4(1/0) + 12(3/0) = 16(4/0)
  add.b      #i8,d0                       ;  4(1/0) +  4(1/0) =  8(2/0)
  add.w      d0,d0                        ;  4(1/0) +  0(0/0) =  4(1/0)
  add.w      (a0),d0                      ;  4(1/0) +  4(1/0) =  8(2/0)
  add.w      (a0)+,d0                     ;  4(1/0) +  4(1/0) =  8(2/0)
  add.w      -(a0),d0                     ;  4(1/0) +  6(1/0) = 10(2/0)
  add.w      i16(a0),d0                   ;  4(1/0) +  8(2/0) = 12(3/0)
  add.w      *+i16(pc),d0                 ;  4(1/0) +  8(2/0) = 12(3/0)
  add.w      i8(a0,d0.w),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  add.w      i8(a0,a0.w),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  add.w      i8(a0,d0.l),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  add.w      i8(a0,a0.l),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  add.w      *+i8(pc,d0.w),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  add.w      *+i8(pc,a0.w),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  add.w      *+i8(pc,d0.l),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  add.w      *+i8(pc,a0.l),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  add.w      (xxx).w,d0                   ;  4(1/0) +  8(2/0) = 12(3/0)
  add.w      (xxx).l,d0                   ;  4(1/0) + 12(3/0) = 16(4/0)
  add.w      #i16,d0                      ;  4(1/0) +  4(1/0) =  8(2/0)
  add.l      d0,d0                        ;  8(1/0) +  0(0/0) =  8(1/0)
  add.l      (a0),d0                      ;  6(1/0) +  8(2/0) = 14(3/0)
  add.l      (a0)+,d0                     ;  6(1/0) +  8(2/0) = 14(3/0)
  add.l      -(a0),d0                     ;  6(1/0) + 10(2/0) = 16(3/0)
  add.l      i16(a0),d0                   ;  6(1/0) + 12(3/0) = 18(4/0)
  add.l      *+i16(pc),d0                 ;  6(1/0) + 12(3/0) = 18(4/0)
  add.l      i8(a0,d0.w),d0               ;  6(1/0) + 14(3/0) = 20(4/0)
  add.l      i8(a0,a0.w),d0               ;  6(1/0) + 14(3/0) = 20(4/0)
  add.l      i8(a0,d0.l),d0               ;  6(1/0) + 14(3/0) = 20(4/0)
  add.l      i8(a0,a0.l),d0               ;  6(1/0) + 14(3/0) = 20(4/0)
  add.l      *+i8(pc,d0.w),d0             ;  6(1/0) + 14(3/0) = 20(4/0)
  add.l      *+i8(pc,a0.w),d0             ;  6(1/0) + 14(3/0) = 20(4/0)
  add.l      *+i8(pc,d0.l),d0             ;  6(1/0) + 14(3/0) = 20(4/0)
  add.l      *+i8(pc,a0.l),d0             ;  6(1/0) + 14(3/0) = 20(4/0)
  add.l      (xxx).w,d0                   ;  6(1/0) + 12(3/0) = 18(4/0)
  add.l      (xxx).l,d0                   ;  6(1/0) + 16(4/0) = 22(5/0)
  add.l      #i32,d0                      ;  8(1/0) +  8(2/0) = 16(3/0)
  add.b      d0,(a0)                      ;  8(1/1) +  4(1/0) = 12(2/1)
  add.b      d0,(a0)+                     ;  8(1/1) +  4(1/0) = 12(2/1)
  add.b      d0,-(a0)                     ;  8(1/1) +  6(1/0) = 14(2/1)
  add.b      d0,i16(a0)                   ;  8(1/1) +  8(2/0) = 16(3/1)
  add.b      d0,i8(a0,d0.w)               ;  8(1/1) + 10(2/0) = 18(3/1)
  add.b      d0,i8(a0,a0.w)               ;  8(1/1) + 10(2/0) = 18(3/1)
  add.b      d0,i8(a0,d0.l)               ;  8(1/1) + 10(2/0) = 18(3/1)
  add.b      d0,i8(a0,a0.l)               ;  8(1/1) + 10(2/0) = 18(3/1)
  add.b      d0,(xxx).w                   ;  8(1/1) +  8(2/0) = 16(3/1)
  add.b      d0,(xxx).l                   ;  8(1/1) + 12(3/0) = 20(4/1)
  add.w      d0,(a0)                      ;  8(1/1) +  4(1/0) = 12(2/1)
  add.w      d0,(a0)+                     ;  8(1/1) +  4(1/0) = 12(2/1)
  add.w      d0,-(a0)                     ;  8(1/1) +  6(1/0) = 14(2/1)
  add.w      d0,i16(a0)                   ;  8(1/1) +  8(2/0) = 16(3/1)
  add.w      d0,i8(a0,d0.w)               ;  8(1/1) + 10(2/0) = 18(3/1)
  add.w      d0,i8(a0,a0.w)               ;  8(1/1) + 10(2/0) = 18(3/1)
  add.w      d0,i8(a0,d0.l)               ;  8(1/1) + 10(2/0) = 18(3/1)
  add.w      d0,i8(a0,a0.l)               ;  8(1/1) + 10(2/0) = 18(3/1)
  add.w      d0,(xxx).w                   ;  8(1/1) +  8(2/0) = 16(3/1)
  add.w      d0,(xxx).l                   ;  8(1/1) + 12(3/0) = 20(4/1)
  add.l      d0,(a0)                      ; 12(1/2) +  8(2/0) = 20(3/2)
  add.l      d0,(a0)+                     ; 12(1/2) +  8(2/0) = 20(3/2)
  add.l      d0,-(a0)                     ; 12(1/2) + 10(2/0) = 22(3/2)
  add.l      d0,i16(a0)                   ; 12(1/2) + 12(3/0) = 24(4/2)
  add.l      d0,i8(a0,d0.w)               ; 12(1/2) + 14(3/0) = 26(4/2)
  add.l      d0,i8(a0,a0.w)               ; 12(1/2) + 14(3/0) = 26(4/2)
  add.l      d0,i8(a0,d0.l)               ; 12(1/2) + 14(3/0) = 26(4/2)
  add.l      d0,i8(a0,a0.l)               ; 12(1/2) + 14(3/0) = 26(4/2)
  add.l      d0,(xxx).w                   ; 12(1/2) + 12(3/0) = 24(4/2)
  add.l      d0,(xxx).l                   ; 12(1/2) + 16(4/0) = 28(5/2)
	; -------------------------------------------------------------------------
  sub.b      d0,d0                        ;  4(1/0) +  0(0/0) =  4(1/0)
  sub.b      (a0),d0                      ;  4(1/0) +  4(1/0) =  8(2/0)
  sub.b      (a0)+,d0                     ;  4(1/0) +  4(1/0) =  8(2/0)
  sub.b      -(a0),d0                     ;  4(1/0) +  6(1/0) = 10(2/0)
  sub.b      i16(a0),d0                   ;  4(1/0) +  8(2/0) = 12(3/0)
  sub.b      *+i16(pc),d0                 ;  4(1/0) +  8(2/0) = 12(3/0)
  sub.b      i8(a0,d0.w),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  sub.b      i8(a0,a0.w),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  sub.b      i8(a0,d0.l),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  sub.b      i8(a0,a0.l),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  sub.b      *+i8(pc,d0.w),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  sub.b      *+i8(pc,a0.w),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  sub.b      *+i8(pc,d0.l),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  sub.b      *+i8(pc,a0.l),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  sub.b      (xxx).w,d0                   ;  4(1/0) +  8(2/0) = 12(3/0)
  sub.b      (xxx).l,d0                   ;  4(1/0) + 12(3/0) = 16(4/0)
  sub.b      #i8,d0                       ;  4(1/0) +  4(1/0) =  8(2/0)
  sub.w      d0,d0                        ;  4(1/0) +  0(0/0) =  4(1/0)
  sub.w      (a0),d0                      ;  4(1/0) +  4(1/0) =  8(2/0)
  sub.w      (a0)+,d0                     ;  4(1/0) +  4(1/0) =  8(2/0)
  sub.w      -(a0),d0                     ;  4(1/0) +  6(1/0) = 10(2/0)
  sub.w      i16(a0),d0                   ;  4(1/0) +  8(2/0) = 12(3/0)
  sub.w      *+i16(pc),d0                 ;  4(1/0) +  8(2/0) = 12(3/0)
  sub.w      i8(a0,d0.w),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  sub.w      i8(a0,a0.w),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  sub.w      i8(a0,d0.l),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  sub.w      i8(a0,a0.l),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  sub.w      *+i8(pc,d0.w),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  sub.w      *+i8(pc,a0.w),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  sub.w      *+i8(pc,d0.l),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  sub.w      *+i8(pc,a0.l),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  sub.w      (xxx).w,d0                   ;  4(1/0) +  8(2/0) = 12(3/0)
  sub.w      (xxx).l,d0                   ;  4(1/0) + 12(3/0) = 16(4/0)
  sub.w      #i16,d0                      ;  4(1/0) +  4(1/0) =  8(2/0)
  sub.l      d0,d0                        ;  8(1/0) +  0(0/0) =  8(1/0)
  sub.l      (a0),d0                      ;  6(1/0) +  8(2/0) = 14(3/0)
  sub.l      (a0)+,d0                     ;  6(1/0) +  8(2/0) = 14(3/0)
  sub.l      -(a0),d0                     ;  6(1/0) + 10(2/0) = 16(3/0)
  sub.l      i16(a0),d0                   ;  6(1/0) + 12(3/0) = 18(4/0)
  sub.l      *+i16(pc),d0                 ;  6(1/0) + 12(3/0) = 18(4/0)
  sub.l      i8(a0,d0.w),d0               ;  6(1/0) + 14(3/0) = 20(4/0)
  sub.l      i8(a0,a0.w),d0               ;  6(1/0) + 14(3/0) = 20(4/0)
  sub.l      i8(a0,d0.l),d0               ;  6(1/0) + 14(3/0) = 20(4/0)
  sub.l      i8(a0,a0.l),d0               ;  6(1/0) + 14(3/0) = 20(4/0)
  sub.l      *+i8(pc,d0.w),d0             ;  6(1/0) + 14(3/0) = 20(4/0)
  sub.l      *+i8(pc,a0.w),d0             ;  6(1/0) + 14(3/0) = 20(4/0)
  sub.l      *+i8(pc,d0.l),d0             ;  6(1/0) + 14(3/0) = 20(4/0)
  sub.l      *+i8(pc,a0.l),d0             ;  6(1/0) + 14(3/0) = 20(4/0)
  sub.l      (xxx).w,d0                   ;  6(1/0) + 12(3/0) = 18(4/0)
  sub.l      (xxx).l,d0                   ;  6(1/0) + 16(4/0) = 22(5/0)
  sub.l      #i32,d0                      ;  8(1/0) +  8(2/0) = 16(3/0)
  sub.b      d0,(a0)                      ;  8(1/1) +  4(1/0) = 12(2/1)
  sub.b      d0,(a0)+                     ;  8(1/1) +  4(1/0) = 12(2/1)
  sub.b      d0,-(a0)                     ;  8(1/1) +  6(1/0) = 14(2/1)
  sub.b      d0,i16(a0)                   ;  8(1/1) +  8(2/0) = 16(3/1)
  sub.b      d0,i8(a0,d0.w)               ;  8(1/1) + 10(2/0) = 18(3/1)
  sub.b      d0,i8(a0,a0.w)               ;  8(1/1) + 10(2/0) = 18(3/1)
  sub.b      d0,i8(a0,d0.l)               ;  8(1/1) + 10(2/0) = 18(3/1)
  sub.b      d0,i8(a0,a0.l)               ;  8(1/1) + 10(2/0) = 18(3/1)
  sub.b      d0,(xxx).w                   ;  8(1/1) +  8(2/0) = 16(3/1)
  sub.b      d0,(xxx).l                   ;  8(1/1) + 12(3/0) = 20(4/1)
  sub.w      d0,(a0)                      ;  8(1/1) +  4(1/0) = 12(2/1)
  sub.w      d0,(a0)+                     ;  8(1/1) +  4(1/0) = 12(2/1)
  sub.w      d0,-(a0)                     ;  8(1/1) +  6(1/0) = 14(2/1)
  sub.w      d0,i16(a0)                   ;  8(1/1) +  8(2/0) = 16(3/1)
  sub.w      d0,i8(a0,d0.w)               ;  8(1/1) + 10(2/0) = 18(3/1)
  sub.w      d0,i8(a0,a0.w)               ;  8(1/1) + 10(2/0) = 18(3/1)
  sub.w      d0,i8(a0,d0.l)               ;  8(1/1) + 10(2/0) = 18(3/1)
  sub.w      d0,i8(a0,a0.l)               ;  8(1/1) + 10(2/0) = 18(3/1)
  sub.w      d0,(xxx).w                   ;  8(1/1) +  8(2/0) = 16(3/1)
  sub.w      d0,(xxx).l                   ;  8(1/1) + 12(3/0) = 20(4/1)
  sub.l      d0,(a0)                      ; 12(1/2) +  8(2/0) = 20(3/2)
  sub.l      d0,(a0)+                     ; 12(1/2) +  8(2/0) = 20(3/2)
  sub.l      d0,-(a0)                     ; 12(1/2) + 10(2/0) = 22(3/2)
  sub.l      d0,i16(a0)                   ; 12(1/2) + 12(3/0) = 24(4/2)
  sub.l      d0,i8(a0,d0.w)               ; 12(1/2) + 14(3/0) = 26(4/2)
  sub.l      d0,i8(a0,a0.w)               ; 12(1/2) + 14(3/0) = 26(4/2)
  sub.l      d0,i8(a0,d0.l)               ; 12(1/2) + 14(3/0) = 26(4/2)
  sub.l      d0,i8(a0,a0.l)               ; 12(1/2) + 14(3/0) = 26(4/2)
  sub.l      d0,(xxx).w                   ; 12(1/2) + 12(3/0) = 24(4/2)
  sub.l      d0,(xxx).l                   ; 12(1/2) + 16(4/0) = 28(5/2)
	; -------------------------------------------------------------------------
  adda.w     d0,a0                        ;  8(1/0) +  0(0/0) =  8(1/0)
  adda.w     a0,a0                        ;  8(1/0) +  0(0/0) =  8(1/0)
  adda.w     (a0),a0                      ;  8(1/0) +  4(1/0) = 12(2/0)
  adda.w     (a0)+,a0                     ;  8(1/0) +  4(1/0) = 12(2/0)
  adda.w     -(a0),a0                     ;  8(1/0) +  6(1/0) = 14(2/0)
  adda.w     i16(a0),a0                   ;  8(1/0) +  8(2/0) = 16(3/0)
  adda.w     *+i16(pc),a0                 ;  8(1/0) +  8(2/0) = 16(3/0)
  adda.w     i8(a0,d0.w),a0               ;  8(1/0) + 10(2/0) = 18(3/0)
  adda.w     i8(a0,a0.w),a0               ;  8(1/0) + 10(2/0) = 18(3/0)
  adda.w     i8(a0,d0.l),a0               ;  8(1/0) + 10(2/0) = 18(3/0)
  adda.w     i8(a0,a0.l),a0               ;  8(1/0) + 10(2/0) = 18(3/0)
  adda.w     *+i8(pc,d0.w),a0             ;  8(1/0) + 10(2/0) = 18(3/0)
  adda.w     *+i8(pc,a0.w),a0             ;  8(1/0) + 10(2/0) = 18(3/0)
  adda.w     *+i8(pc,d0.l),a0             ;  8(1/0) + 10(2/0) = 18(3/0)
  adda.w     *+i8(pc,a0.l),a0             ;  8(1/0) + 10(2/0) = 18(3/0)
  adda.w     (xxx).w,a0                   ;  8(1/0) +  8(2/0) = 16(3/0)
  adda.w     (xxx).l,a0                   ;  8(1/0) + 12(3/0) = 20(4/0)
  adda.w     #i16,a0                      ;  8(1/0) +  4(1/0) = 12(2/0)
  adda.l     d0,a0                        ;  8(1/0) +  0(0/0) =  8(1/0)
  adda.l     a0,a0                        ;  8(1/0) +  0(0/0) =  8(1/0)
  adda.l     (a0),a0                      ;  6(1/0) +  8(2/0) = 14(3/0)
  adda.l     (a0)+,a0                     ;  6(1/0) +  8(2/0) = 14(3/0)
  adda.l     -(a0),a0                     ;  6(1/0) + 10(2/0) = 16(3/0)
  adda.l     i16(a0),a0                   ;  6(1/0) + 12(3/0) = 18(4/0)
  adda.l     *+i16(pc),a0                 ;  6(1/0) + 12(3/0) = 18(4/0)
  adda.l     i8(a0,d0.w),a0               ;  6(1/0) + 14(3/0) = 20(4/0)
  adda.l     i8(a0,a0.w),a0               ;  6(1/0) + 14(3/0) = 20(4/0)
  adda.l     i8(a0,d0.l),a0               ;  6(1/0) + 14(3/0) = 20(4/0)
  adda.l     i8(a0,a0.l),a0               ;  6(1/0) + 14(3/0) = 20(4/0)
  adda.l     *+i8(pc,d0.w),a0             ;  6(1/0) + 14(3/0) = 20(4/0)
  adda.l     *+i8(pc,a0.w),a0             ;  6(1/0) + 14(3/0) = 20(4/0)
  adda.l     *+i8(pc,d0.l),a0             ;  6(1/0) + 14(3/0) = 20(4/0)
  adda.l     *+i8(pc,a0.l),a0             ;  6(1/0) + 14(3/0) = 20(4/0)
  adda.l     (xxx).w,a0                   ;  6(1/0) + 12(3/0) = 18(4/0)
  adda.l     (xxx).l,a0                   ;  6(1/0) + 16(4/0) = 22(5/0)
  adda.l     #i32,a0                      ;  8(1/0) +  8(2/0) = 16(3/0)
  add.w      d0,a0                        ;  8(1/0) +  0(0/0) =  8(1/0)
  add.w      a0,a0                        ;  8(1/0) +  0(0/0) =  8(1/0)
  add.w      (a0),a0                      ;  8(1/0) +  4(1/0) = 12(2/0)
  add.w      (a0)+,a0                     ;  8(1/0) +  4(1/0) = 12(2/0)
  add.w      -(a0),a0                     ;  8(1/0) +  6(1/0) = 14(2/0)
  add.w      i16(a0),a0                   ;  8(1/0) +  8(2/0) = 16(3/0)
  add.w      *+i16(pc),a0                 ;  8(1/0) +  8(2/0) = 16(3/0)
  add.w      i8(a0,d0.w),a0               ;  8(1/0) + 10(2/0) = 18(3/0)
  add.w      i8(a0,a0.w),a0               ;  8(1/0) + 10(2/0) = 18(3/0)
  add.w      i8(a0,d0.l),a0               ;  8(1/0) + 10(2/0) = 18(3/0)
  add.w      i8(a0,a0.l),a0               ;  8(1/0) + 10(2/0) = 18(3/0)
  add.w      *+i8(pc,d0.w),a0             ;  8(1/0) + 10(2/0) = 18(3/0)
  add.w      *+i8(pc,a0.w),a0             ;  8(1/0) + 10(2/0) = 18(3/0)
  add.w      *+i8(pc,d0.l),a0             ;  8(1/0) + 10(2/0) = 18(3/0)
  add.w      *+i8(pc,a0.l),a0             ;  8(1/0) + 10(2/0) = 18(3/0)
  add.w      (xxx).w,a0                   ;  8(1/0) +  8(2/0) = 16(3/0)
  add.w      (xxx).l,a0                   ;  8(1/0) + 12(3/0) = 20(4/0)
  add.w      #i16,a0                      ;  8(1/0) +  4(1/0) = 12(2/0)
  add.l      d0,a0                        ;  8(1/0) +  0(0/0) =  8(1/0)
  add.l      a0,a0                        ;  8(1/0) +  0(0/0) =  8(1/0)
  add.l      (a0),a0                      ;  6(1/0) +  8(2/0) = 14(3/0)
  add.l      (a0)+,a0                     ;  6(1/0) +  8(2/0) = 14(3/0)
  add.l      -(a0),a0                     ;  6(1/0) + 10(2/0) = 16(3/0)
  add.l      i16(a0),a0                   ;  6(1/0) + 12(3/0) = 18(4/0)
  add.l      *+i16(pc),a0                 ;  6(1/0) + 12(3/0) = 18(4/0)
  add.l      i8(a0,d0.w),a0               ;  6(1/0) + 14(3/0) = 20(4/0)
  add.l      i8(a0,a0.w),a0               ;  6(1/0) + 14(3/0) = 20(4/0)
  add.l      i8(a0,d0.l),a0               ;  6(1/0) + 14(3/0) = 20(4/0)
  add.l      i8(a0,a0.l),a0               ;  6(1/0) + 14(3/0) = 20(4/0)
  add.l      *+i8(pc,d0.w),a0             ;  6(1/0) + 14(3/0) = 20(4/0)
  add.l      *+i8(pc,a0.w),a0             ;  6(1/0) + 14(3/0) = 20(4/0)
  add.l      *+i8(pc,d0.l),a0             ;  6(1/0) + 14(3/0) = 20(4/0)
  add.l      *+i8(pc,a0.l),a0             ;  6(1/0) + 14(3/0) = 20(4/0)
  add.l      (xxx).w,a0                   ;  6(1/0) + 12(3/0) = 18(4/0)
  add.l      (xxx).l,a0                   ;  6(1/0) + 16(4/0) = 22(5/0)
  add.l      #i32,a0                      ;  8(1/0) +  8(2/0) = 16(3/0)
	; -------------------------------------------------------------------------
  addx.b     d0,d0                        ;  4(1/0)
  addx.w     d0,d0                        ;  4(1/0)
  addx.l     d0,d0                        ;  8(1/0)
  addx.b     -(a0),-(a0)                  ; 18(3/1)
  addx.w     -(a0),-(a0)                  ; 18(3/1)
  addx.l     -(a0),-(a0)                  ; 30(5/2)
	; -------------------------------------------------------------------------
  subx.b     d0,d0                        ;  4(1/0)
  subx.w     d0,d0                        ;  4(1/0)
  subx.l     d0,d0                        ;  8(1/0)
  subx.b     -(a0),-(a0)                  ; 18(3/1)
  subx.w     -(a0),-(a0)                  ; 18(3/1)
  subx.l     -(a0),-(a0)                  ; 30(5/2)
; =============================================================================
; Line %1011
; =============================================================================
  cmp.b      d0,d0                        ;  4(1/0) +  0(0/0) =  4(1/0)
  cmp.b      a0,d0                        ;  4(1/0) +  0(0/0) =  4(1/0)
  cmp.b      (a0),d0                      ;  4(1/0) +  4(1/0) =  8(2/0)
  cmp.b      (a0)+,d0                     ;  4(1/0) +  4(1/0) =  8(2/0)
  cmp.b      -(a0),d0                     ;  4(1/0) +  6(1/0) = 10(2/0)
  cmp.b      i16(a0),d0                   ;  4(1/0) +  8(2/0) = 12(3/0)
  cmp.b      *+i16(pc),d0                 ;  4(1/0) +  8(2/0) = 12(3/0)
  cmp.b      i8(a0,d0.w),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  cmp.b      i8(a0,a0.w),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  cmp.b      i8(a0,d0.l),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  cmp.b      i8(a0,a0.l),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  cmp.b      *+i8(pc,d0.w),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  cmp.b      *+i8(pc,a0.w),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  cmp.b      *+i8(pc,d0.l),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  cmp.b      *+i8(pc,a0.l),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  cmp.b      (xxx).w,d0                   ;  4(1/0) +  8(2/0) = 12(3/0)
  cmp.b      (xxx).l,d0                   ;  4(1/0) + 12(3/0) = 16(4/0)
  cmp.b      #i8,d0                       ;  4(1/0) +  4(1/0) =  8(2/0)
  cmp.w      d0,d0                        ;  4(1/0) +  0(0/0) =  4(1/0)
  cmp.w      a0,d0                        ;  4(1/0) +  0(0/0) =  4(1/0)
  cmp.w      (a0),d0                      ;  4(1/0) +  4(1/0) =  8(2/0)
  cmp.w      (a0)+,d0                     ;  4(1/0) +  4(1/0) =  8(2/0)
  cmp.w      -(a0),d0                     ;  4(1/0) +  6(1/0) = 10(2/0)
  cmp.w      i16(a0),d0                   ;  4(1/0) +  8(2/0) = 12(3/0)
  cmp.w      *+i16(pc),d0                 ;  4(1/0) +  8(2/0) = 12(3/0)
  cmp.w      i8(a0,d0.w),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  cmp.w      i8(a0,a0.w),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  cmp.w      i8(a0,d0.l),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  cmp.w      i8(a0,a0.l),d0               ;  4(1/0) + 10(2/0) = 14(3/0)
  cmp.w      *+i8(pc,d0.w),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  cmp.w      *+i8(pc,a0.w),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  cmp.w      *+i8(pc,d0.l),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  cmp.w      *+i8(pc,a0.l),d0             ;  4(1/0) + 10(2/0) = 14(3/0)
  cmp.w      (xxx).w,d0                   ;  4(1/0) +  8(2/0) = 12(3/0)
  cmp.w      (xxx).l,d0                   ;  4(1/0) + 12(3/0) = 16(4/0)
  cmp.w      #i16,d0                      ;  4(1/0) +  4(1/0) =  8(2/0)
  cmp.l      d0,d0                        ;  6(1/0) +  0(0/0) =  6(1/0)
  cmp.l      a0,d0                        ;  6(1/0) +  0(0/0) =  6(1/0)
  cmp.l      (a0),d0                      ;  6(1/0) +  8(2/0) = 14(3/0)
  cmp.l      (a0)+,d0                     ;  6(1/0) +  8(2/0) = 14(3/0)
  cmp.l      -(a0),d0                     ;  6(1/0) + 10(2/0) = 16(3/0)
  cmp.l      i16(a0),d0                   ;  6(1/0) + 12(3/0) = 18(4/0)
  cmp.l      *+i16(pc),d0                 ;  6(1/0) + 12(3/0) = 18(4/0)
  cmp.l      i8(a0,d0.w),d0               ;  6(1/0) + 14(3/0) = 20(4/0)
  cmp.l      i8(a0,a0.w),d0               ;  6(1/0) + 14(3/0) = 20(4/0)
  cmp.l      i8(a0,d0.l),d0               ;  6(1/0) + 14(3/0) = 20(4/0)
  cmp.l      i8(a0,a0.l),d0               ;  6(1/0) + 14(3/0) = 20(4/0)
  cmp.l      *+i8(pc,d0.w),d0             ;  6(1/0) + 14(3/0) = 20(4/0)
  cmp.l      *+i8(pc,a0.w),d0             ;  6(1/0) + 14(3/0) = 20(4/0)
  cmp.l      *+i8(pc,d0.l),d0             ;  6(1/0) + 14(3/0) = 20(4/0)
  cmp.l      *+i8(pc,a0.l),d0             ;  6(1/0) + 14(3/0) = 20(4/0)
  cmp.l      (xxx).w,d0                   ;  6(1/0) + 12(3/0) = 18(4/0)
  cmp.l      (xxx).l,d0                   ;  6(1/0) + 16(4/0) = 22(5/0)
  cmp.l      #i32,d0                      ;  6(1/0) +  8(2/0) = 14(3/0)
	; -------------------------------------------------------------------------
  cmpa.w     d0,a0                        ;  6(1/0) +  0(0/0) =  6(1/0)
  cmpa.w     a0,a0                        ;  6(1/0) +  0(0/0) =  6(1/0)
  cmpa.w     (a0),a0                      ;  6(1/0) +  4(1/0) = 10(2/0)
  cmpa.w     (a0)+,a0                     ;  6(1/0) +  4(1/0) = 10(2/0)
  cmpa.w     -(a0),a0                     ;  6(1/0) +  6(1/0) = 12(2/0)
  cmpa.w     i16(a0),a0                   ;  6(1/0) +  8(2/0) = 14(3/0)
  cmpa.w     *+i16(pc),a0                 ;  6(1/0) +  8(2/0) = 14(3/0)
  cmpa.w     i8(a0,d0.w),a0               ;  6(1/0) + 10(2/0) = 16(3/0)
  cmpa.w     i8(a0,a0.w),a0               ;  6(1/0) + 10(2/0) = 16(3/0)
  cmpa.w     i8(a0,d0.l),a0               ;  6(1/0) + 10(2/0) = 16(3/0)
  cmpa.w     i8(a0,a0.l),a0               ;  6(1/0) + 10(2/0) = 16(3/0)
  cmpa.w     *+i8(pc,d0.w),a0             ;  6(1/0) + 10(2/0) = 16(3/0)
  cmpa.w     *+i8(pc,a0.w),a0             ;  6(1/0) + 10(2/0) = 16(3/0)
  cmpa.w     *+i8(pc,d0.l),a0             ;  6(1/0) + 10(2/0) = 16(3/0)
  cmpa.w     *+i8(pc,a0.l),a0             ;  6(1/0) + 10(2/0) = 16(3/0)
  cmpa.w     (xxx).w,a0                   ;  6(1/0) +  8(2/0) = 14(3/0)
  cmpa.w     (xxx).l,a0                   ;  6(1/0) + 12(3/0) = 18(4/0)
  cmpa.w     #i16,a0                      ;  6(1/0) +  4(1/0) = 10(2/0)
  cmpa.l     d0,a0                        ;  6(1/0) +  0(0/0) =  6(1/0)
  cmpa.l     a0,a0                        ;  6(1/0) +  0(0/0) =  6(1/0)
  cmpa.l     (a0),a0                      ;  6(1/0) +  8(2/0) = 14(3/0)
  cmpa.l     (a0)+,a0                     ;  6(1/0) +  8(2/0) = 14(3/0)
  cmpa.l     -(a0),a0                     ;  6(1/0) + 10(2/0) = 16(3/0)
  cmpa.l     i16(a0),a0                   ;  6(1/0) + 12(3/0) = 18(4/0)
  cmpa.l     *+i16(pc),a0                 ;  6(1/0) + 12(3/0) = 18(4/0)
  cmpa.l     i8(a0,d0.w),a0               ;  6(1/0) + 14(3/0) = 20(4/0)
  cmpa.l     i8(a0,a0.w),a0               ;  6(1/0) + 14(3/0) = 20(4/0)
  cmpa.l     i8(a0,d0.l),a0               ;  6(1/0) + 14(3/0) = 20(4/0)
  cmpa.l     i8(a0,a0.l),a0               ;  6(1/0) + 14(3/0) = 20(4/0)
  cmpa.l     *+i8(pc,d0.w),a0             ;  6(1/0) + 14(3/0) = 20(4/0)
  cmpa.l     *+i8(pc,a0.w),a0             ;  6(1/0) + 14(3/0) = 20(4/0)
  cmpa.l     *+i8(pc,d0.l),a0             ;  6(1/0) + 14(3/0) = 20(4/0)
  cmpa.l     *+i8(pc,a0.l),a0             ;  6(1/0) + 14(3/0) = 20(4/0)
  cmpa.l     (xxx).w,a0                   ;  6(1/0) + 12(3/0) = 18(4/0)
  cmpa.l     (xxx).l,a0                   ;  6(1/0) + 16(4/0) = 22(5/0)
  cmpa.l     #i32,a0                      ;  6(1/0) +  8(2/0) = 14(3/0)
  cmpa.w     d0,a0                        ;  6(1/0) +  0(0/0) =  6(1/0)
  cmp.w      a0,a0                        ;  6(1/0) +  0(0/0) =  6(1/0)
  cmp.w      (a0),a0                      ;  6(1/0) +  4(1/0) = 10(2/0)
  cmp.w      (a0)+,a0                     ;  6(1/0) +  4(1/0) = 10(2/0)
  cmp.w      -(a0),a0                     ;  6(1/0) +  6(1/0) = 12(2/0)
  cmp.w      i16(a0),a0                   ;  6(1/0) +  8(2/0) = 14(3/0)
  cmp.w      *+i16(pc),a0                 ;  6(1/0) +  8(2/0) = 14(3/0)
  cmp.w      i8(a0,d0.w),a0               ;  6(1/0) + 10(2/0) = 16(3/0)
  cmp.w      i8(a0,a0.w),a0               ;  6(1/0) + 10(2/0) = 16(3/0)
  cmp.w      i8(a0,d0.l),a0               ;  6(1/0) + 10(2/0) = 16(3/0)
  cmp.w      i8(a0,a0.l),a0               ;  6(1/0) + 10(2/0) = 16(3/0)
  cmp.w      *+i8(pc,d0.w),a0             ;  6(1/0) + 10(2/0) = 16(3/0)
  cmp.w      *+i8(pc,a0.w),a0             ;  6(1/0) + 10(2/0) = 16(3/0)
  cmp.w      *+i8(pc,d0.l),a0             ;  6(1/0) + 10(2/0) = 16(3/0)
  cmp.w      *+i8(pc,a0.l),a0             ;  6(1/0) + 10(2/0) = 16(3/0)
  cmp.w      (xxx).w,a0                   ;  6(1/0) +  8(2/0) = 14(3/0)
  cmp.w      (xxx).l,a0                   ;  6(1/0) + 12(3/0) = 18(4/0)
  cmp.w      #i16,a0                      ;  6(1/0) +  4(1/0) = 10(2/0)
  cmp.l      d0,a0                        ;  6(1/0) +  0(0/0) =  6(1/0)
  cmp.l      a0,a0                        ;  6(1/0) +  0(0/0) =  6(1/0)
  cmp.l      (a0),a0                      ;  6(1/0) +  8(2/0) = 14(3/0)
  cmp.l      (a0)+,a0                     ;  6(1/0) +  8(2/0) = 14(3/0)
  cmp.l      -(a0),a0                     ;  6(1/0) + 10(2/0) = 16(3/0)
  cmp.l      i16(a0),a0                   ;  6(1/0) + 12(3/0) = 18(4/0)
  cmp.l      *+i16(pc),a0                 ;  6(1/0) + 12(3/0) = 18(4/0)
  cmp.l      i8(a0,d0.w),a0               ;  6(1/0) + 14(3/0) = 20(4/0)
  cmp.l      i8(a0,a0.w),a0               ;  6(1/0) + 14(3/0) = 20(4/0)
  cmp.l      i8(a0,d0.l),a0               ;  6(1/0) + 14(3/0) = 20(4/0)
  cmp.l      i8(a0,a0.l),a0               ;  6(1/0) + 14(3/0) = 20(4/0)
  cmp.l      *+i8(pc,d0.w),a0             ;  6(1/0) + 14(3/0) = 20(4/0)
  cmp.l      *+i8(pc,a0.w),a0             ;  6(1/0) + 14(3/0) = 20(4/0)
  cmp.l      *+i8(pc,d0.l),a0             ;  6(1/0) + 14(3/0) = 20(4/0)
  cmp.l      *+i8(pc,a0.l),a0             ;  6(1/0) + 14(3/0) = 20(4/0)
  cmp.l      (xxx).w,a0                   ;  6(1/0) + 12(3/0) = 18(4/0)
  cmp.l      (xxx).l,a0                   ;  6(1/0) + 16(4/0) = 22(5/0)
  cmp.l      #i32,a0                      ;  6(1/0) +  8(2/0) = 14(3/0)
	; -------------------------------------------------------------------------
  cmpm.b     (a0)+,(a0)+                  ; 12(3/0)
  cmpm.w     (a0)+,(a0)+                  ; 12(3/0)
  cmpm.l     (a0)+,(a0)+                  ; 20(5/0)
	; -------------------------------------------------------------------------
  eor.b      d0,d0                        ;  4(1/0) +  0(0/0) =  4(1/0)
  eor.b      d0,(a0)                      ;  8(1/1) +  4(1/0) = 12(2/1)
  eor.b      d0,(a0)+                     ;  8(1/1) +  4(1/0) = 12(2/1)
  eor.b      d0,-(a0)                     ;  8(1/1) +  6(1/0) = 14(2/1)
  eor.b      d0,i16(a0)                   ;  8(1/1) +  8(2/0) = 16(3/1)
  eor.b      d0,i8(a0,d0.w)               ;  8(1/1) + 10(2/0) = 18(3/1)
  eor.b      d0,i8(a0,a0.w)               ;  8(1/1) + 10(2/0) = 18(3/1)
  eor.b      d0,i8(a0,d0.l)               ;  8(1/1) + 10(2/0) = 18(3/1)
  eor.b      d0,i8(a0,a0.l)               ;  8(1/1) + 10(2/0) = 18(3/1)
  eor.b      d0,(xxx).w                   ;  8(1/1) +  8(2/0) = 16(3/1)
  eor.b      d0,(xxx).l                   ;  8(1/1) + 12(3/0) = 20(4/1)
  eor.w      d0,d0                        ;  4(1/0) +  0(0/0) =  4(1/0)
  eor.w      d0,(a0)                      ;  8(1/1) +  4(1/0) = 12(2/1)
  eor.w      d0,(a0)+                     ;  8(1/1) +  4(1/0) = 12(2/1)
  eor.w      d0,-(a0)                     ;  8(1/1) +  6(1/0) = 14(2/1)
  eor.w      d0,i16(a0)                   ;  8(1/1) +  8(2/0) = 16(3/1)
  eor.w      d0,i8(a0,d0.w)               ;  8(1/1) + 10(2/0) = 18(3/1)
  eor.w      d0,i8(a0,a0.w)               ;  8(1/1) + 10(2/0) = 18(3/1)
  eor.w      d0,i8(a0,d0.l)               ;  8(1/1) + 10(2/0) = 18(3/1)
  eor.w      d0,i8(a0,a0.l)               ;  8(1/1) + 10(2/0) = 18(3/1)
  eor.w      d0,(xxx).w                   ;  8(1/1) +  8(2/0) = 16(3/1)
  eor.w      d0,(xxx).l                   ;  8(1/1) + 12(3/0) = 20(4/1)
  eor.l      d0,d0                        ;  8(1/0) +  0(0/0) =  8(1/0)
  eor.l      d0,(a0)                      ; 12(1/2) +  8(2/0) = 20(3/2)
  eor.l      d0,(a0)+                     ; 12(1/2) +  8(2/0) = 20(3/2)
  eor.l      d0,-(a0)                     ; 12(1/2) + 10(2/0) = 22(3/2)
  eor.l      d0,i16(a0)                   ; 12(1/2) + 12(3/0) = 24(4/2)
  eor.l      d0,i8(a0,d0.w)               ; 12(1/2) + 14(3/0) = 26(4/2)
  eor.l      d0,i8(a0,a0.w)               ; 12(1/2) + 14(3/0) = 26(4/2)
  eor.l      d0,i8(a0,d0.l)               ; 12(1/2) + 14(3/0) = 26(4/2)
  eor.l      d0,i8(a0,a0.l)               ; 12(1/2) + 14(3/0) = 26(4/2)
  eor.l      d0,(xxx).w                   ; 12(1/2) + 12(3/0) = 24(4/2)
  eor.l      d0,(xxx).l                   ; 12(1/2) + 16(4/0) = 28(5/2)
; =============================================================================
; Line %1110
; =============================================================================
  asl.b      d0,d0                        ;  6+2m(1/0)
  asl.w      d0,d0                        ;  6+2m(1/0)
  asl.l      d0,d0                        ;  8+2m(1/0)
  asl.b      #i3,d0                       ;  6+2m(1/0)
  asl.w      #i3,d0                       ;  6+2m(1/0)
  asl.l      #i3,d0                       ;  8+2m(1/0)
  asl.w      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)
  asl.w      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)
  asl.w      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)
  asl.w      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)
  asl.w      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  asl.w      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  asl.w      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  asl.w      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  asl.w      (xxx).w                      ;  8(1/1) +  8(2/0) = 16(3/1)
  asl.w      (xxx).l                      ;  8(1/1) + 12(3/0) = 20(4/1)
	; -------------------------------------------------------------------------
  asr.b      d0,d0                        ;  6+2m(1/0)
  asr.w      d0,d0                        ;  6+2m(1/0)
  asr.l      d0,d0                        ;  8+2m(1/0)
  asr.b      #i3,d0                       ;  6+2m(1/0)
  asr.w      #i3,d0                       ;  6+2m(1/0)
  asr.l      #i3,d0                       ;  8+2m(1/0)
  asr.w      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)
  asr.w      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)
  asr.w      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)
  asr.w      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)
  asr.w      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  asr.w      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  asr.w      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  asr.w      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  asr.w      (xxx).w                      ;  8(1/1) +  8(2/0) = 16(3/1)
  asr.w      (xxx).l                      ;  8(1/1) + 12(3/0) = 20(4/1)
	; -------------------------------------------------------------------------
  lsl.b      d0,d0                        ;  6+2m(1/0)
  lsl.w      d0,d0                        ;  6+2m(1/0)
  lsl.l      d0,d0                        ;  8+2m(1/0)
  lsl.b      #i3,d0                       ;  6+2m(1/0)
  lsl.w      #i3,d0                       ;  6+2m(1/0)
  lsl.l      #i3,d0                       ;  8+2m(1/0)
  lsl.w      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)
  lsl.w      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)
  lsl.w      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)
  lsl.w      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)
  lsl.w      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  lsl.w      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  lsl.w      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  lsl.w      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  lsl.w      (xxx).w                      ;  8(1/1) +  8(2/0) = 16(3/1)
  lsl.w      (xxx).l                      ;  8(1/1) + 12(3/0) = 20(4/1)
	; -------------------------------------------------------------------------
  lsr.b      d0,d0                        ;  6+2m(1/0)
  lsr.w      d0,d0                        ;  6+2m(1/0)
  lsr.l      d0,d0                        ;  8+2m(1/0)
  lsr.b      #i3,d0                       ;  6+2m(1/0)
  lsr.w      #i3,d0                       ;  6+2m(1/0)
  lsr.l      #i3,d0                       ;  8+2m(1/0)
  lsr.w      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)
  lsr.w      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)
  lsr.w      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)
  lsr.w      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)
  lsr.w      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  lsr.w      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  lsr.w      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  lsr.w      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  lsr.w      (xxx).w                      ;  8(1/1) +  8(2/0) = 16(3/1)
  lsr.w      (xxx).l                      ;  8(1/1) + 12(3/0) = 20(4/1)
	; -------------------------------------------------------------------------
  rol.b      d0,d0                        ;  6+2m(1/0)
  rol.w      d0,d0                        ;  6+2m(1/0)
  rol.l      d0,d0                        ;  8+2m(1/0)
  rol.b      #i3,d0                       ;  6+2m(1/0)
  rol.w      #i3,d0                       ;  6+2m(1/0)
  rol.l      #i3,d0                       ;  8+2m(1/0)
  rol.w      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)
  rol.w      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)
  rol.w      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)
  rol.w      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)
  rol.w      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  rol.w      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  rol.w      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  rol.w      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  rol.w      (xxx).w                      ;  8(1/1) +  8(2/0) = 16(3/1)
  rol.w      (xxx).l                      ;  8(1/1) + 12(3/0) = 20(4/1)
	; -------------------------------------------------------------------------
  ror.b      d0,d0                        ;  6+2m(1/0)
  ror.w      d0,d0                        ;  6+2m(1/0)
  ror.l      d0,d0                        ;  8+2m(1/0)
  ror.b      #i3,d0                       ;  6+2m(1/0)
  ror.w      #i3,d0                       ;  6+2m(1/0)
  ror.l      #i3,d0                       ;  8+2m(1/0)
  ror.w      (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)
  ror.w      (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)
  ror.w      -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)
  ror.w      i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)
  ror.w      i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  ror.w      i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  ror.w      i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  ror.w      i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  ror.w      (xxx).w                      ;  8(1/1) +  8(2/0) = 16(3/1)
  ror.w      (xxx).l                      ;  8(1/1) + 12(3/0) = 20(4/1)
	; -------------------------------------------------------------------------
  roxl.b     d0,d0                        ;  6+2m(1/0)
  roxl.w     d0,d0                        ;  6+2m(1/0)
  roxl.l     d0,d0                        ;  8+2m(1/0)
  roxl.b     #i3,d0                       ;  6+2m(1/0)
  roxl.w     #i3,d0                       ;  6+2m(1/0)
  roxl.l     #i3,d0                       ;  8+2m(1/0)
  roxl.w     (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)
  roxl.w     (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)
  roxl.w     -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)
  roxl.w     i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)
  roxl.w     i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  roxl.w     i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  roxl.w     i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  roxl.w     i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  roxl.w     (xxx).w                      ;  8(1/1) +  8(2/0) = 16(3/1)
  roxl.w     (xxx).l                      ;  8(1/1) + 12(3/0) = 20(4/1)
	; -------------------------------------------------------------------------
  roxr.b     d0,d0                        ;  6+2m(1/0)
  roxr.w     d0,d0                        ;  6+2m(1/0)
  roxr.l     d0,d0                        ;  8+2m(1/0)
  roxr.b     #i3,d0                       ;  6+2m(1/0)
  roxr.w     #i3,d0                       ;  6+2m(1/0)
  roxr.l     #i3,d0                       ;  8+2m(1/0)
  roxr.w     (a0)                         ;  8(1/1) +  4(1/0) = 12(2/1)
  roxr.w     (a0)+                        ;  8(1/1) +  4(1/0) = 12(2/1)
  roxr.w     -(a0)                        ;  8(1/1) +  6(1/0) = 14(2/1)
  roxr.w     i16(a0)                      ;  8(1/1) +  8(2/0) = 16(3/1)
  roxr.w     i8(a0,d0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  roxr.w     i8(a0,a0.w)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  roxr.w     i8(a0,d0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  roxr.w     i8(a0,a0.l)                  ;  8(1/1) + 10(2/0) = 18(3/1)
  roxr.w     (xxx).w                      ;  8(1/1) +  8(2/0) = 16(3/1)
  roxr.w     (xxx).l                      ;  8(1/1) + 12(3/0) = 20(4/1)
	; -------------------------------------------------------------------------
